export class model {
  constructor(base, user, unusedUserAction) {
    this.base = base;
    this.internal = {};
    var internal = this.internal;
    internal.cell = 1;
    this.setUser(user, unusedUserAction);
  }
  initial(t) {
    var internal = this.internal;
    var ARF_init = internal.alphaARF - 2 * internal.initial_ARF2 - internal.initial_ARFIAA;
    var ARRBp_init = internal.alphaARRB - internal.etaAHKph * internal.initial_ARRBph;
    var CkAHK_init = internal.alphaAHK - internal.etaAHKph * (internal.initial_AHKph + internal.initial_CkAHKph);
    var CkAHKph_init = internal.alphaPH - internal.initial_AHKph - internal.initial_ARRAph - internal.initial_ARRBph;
    var F1_init = internal.initial_ARF / internal.thetaARF / (1 + internal.initial_ARF / internal.thetaARF + internal.initial_ARF2 / internal.thetaARF2 + internal.initial_ARFIAA / internal.thARFIAA + internal.initial_ARF * internal.initial_IAAp / internal.psiARFIAA + Math.pow((internal.initial_ARF), (2)) / internal.psiARF + internal.initial_ARRBph / internal.thARRBph);
    var F2_init = (internal.initial_ARF2 / internal.thetaARF2 + Math.pow((internal.initial_ARF), (2)) / internal.psiARF) / (1 + internal.initial_ARF / internal.thetaARF + internal.initial_ARF2 / internal.thetaARF2 + internal.initial_ARFIAA / internal.thARFIAA + internal.initial_ARF * internal.initial_IAAp / internal.psiARFIAA + Math.pow((internal.initial_ARF), (2)) / internal.psiARF + internal.initial_ARRBph / internal.thARRBph);
    var F3_init = internal.initial_ARRBph / internal.thARRBph / (1 + internal.initial_ARF / internal.thetaARF + internal.initial_ARF2 / internal.thetaARF2 + internal.initial_ARFIAA / internal.thARFIAA + internal.initial_ARF * internal.initial_IAAp / internal.psiARFIAA + Math.pow((internal.initial_ARF), (2)) / internal.psiARF + internal.initial_ARRBph / internal.thARRBph);
    var F4_init = internal.initial_ARRBph / internal.thARRBph / (1 + internal.initial_ARRAph / internal.thARRAph + internal.initial_ARRBph / internal.thARRBph);
    var F5a_init = internal.initial_ARF / internal.thetaARF / (1 + internal.initial_ARF / internal.thetaARF + internal.initial_ARF2 / internal.thetaARF2 + internal.initial_ARFIAA / internal.thARFIAA + internal.initial_ARF * internal.initial_IAAp / internal.psiARFIAA + Math.pow((internal.initial_ARF), (2)) / internal.psiARF);
    var F5b_init = (internal.initial_ARF2 / internal.thetaARF2 + Math.pow((internal.initial_ARF), (2)) / internal.psiARF) / (1 + internal.initial_ARF / internal.thetaARF + internal.initial_ARF2 / internal.thetaARF2 + internal.initial_ARFIAA / internal.thARFIAA + internal.initial_ARF * internal.initial_IAAp / internal.psiARFIAA + Math.pow((internal.initial_ARF), (2)) / internal.psiARF);
    var F6_init = internal.initial_ARp / internal.thetaARp / (1 + internal.initial_ARp / internal.thetaARp);
    var TIR1_init = internal.alphaTIR1 - internal.initial_AuxTIR1 - internal.initial_AuxTIAA;
    internal.initial_ARF = ARF_init;
    internal.initial_ARRBp = ARRBp_init;
    internal.initial_CkAHK = CkAHK_init;
    internal.initial_CkAHKph = CkAHKph_init;
    internal.initial_F1 = F1_init;
    internal.initial_F2 = F2_init;
    internal.initial_F3 = F3_init;
    internal.initial_F4 = F4_init;
    internal.initial_F5a = F5a_init;
    internal.initial_F5b = F5b_init;
    internal.initial_F6 = F6_init;
    internal.initial_TIR1 = TIR1_init;
    var state = Array(32).fill(0);
    state[0] = internal.initial_IAAm;
    state[1] = internal.initial_IAAp;
    state[2] = internal.initial_AuxTIR1;
    state[3] = internal.initial_AuxTIAA;
    state[4] = internal.initial_IAAs;
    state[5] = internal.initial_ARFIAA;
    state[6] = internal.initial_ARF2;
    state[7] = internal.initial_Aux;
    state[8] = internal.initial_PINm;
    state[9] = internal.initial_PINp;
    state[10] = internal.initial_ARm;
    state[11] = internal.initial_ARp;
    state[12] = internal.initial_TIR1;
    state[13] = internal.initial_ARF;
    state[14] = internal.initial_CRm;
    state[15] = internal.initial_CRp;
    state[16] = internal.initial_AHKph;
    state[17] = internal.initial_Ck;
    state[18] = internal.initial_ARRBph;
    state[19] = internal.initial_ARRAph;
    state[20] = internal.initial_ARRAm;
    state[21] = internal.initial_ARRAp;
    state[22] = internal.initial_ARRBp;
    state[23] = internal.initial_CkAHKph;
    state[24] = internal.initial_CkAHK;
    state[25] = internal.initial_F1;
    state[26] = internal.initial_F2;
    state[27] = internal.initial_F3;
    state[28] = internal.initial_F4;
    state[29] = internal.initial_F5a;
    state[30] = internal.initial_F5b;
    state[31] = internal.initial_F6;
    return state;
  }
  setUser(user, unusedUserAction) {
    this.base.user.checkUser(user, ["AHKph_init", "alphaAHK", "alphaARF", "alphaARRB", "alphaAux", "alphaCk", "alphaPH", "alphaTIR1", "ARF2_init", "ARFIAA_init", "ARm_init", "ARp_init", "ARRAm_init", "ARRAp_init", "ARRAph_init", "ARRBph_init", "Aux_init", "AuxTIAA_init", "AuxTIR1_init", "Ck_init", "CRm_init", "CRp_init", "deltaARp", "deltaARRAp", "deltaCRp", "deltaIAAp", "deltaPINp", "eps", "etaAHKph", "etaARFIAA", "etaAuxTIR1", "etaCkPh", "IAAm_init", "IAAp_init", "IAAs_init", "ka", "kd", "la", "lambda1", "lambda3", "ld", "muAux", "muCk", "muIAAs", "pa", "pd", "phiARp", "phiARRAp", "phiCRp", "phiIAAp", "phiPINp", "PINm_init", "PINp_init", "psiARF", "psiARFIAA", "qa", "qd", "ra", "rd", "sa", "sd", "thARFIAA", "thARRAph", "thARRBph", "thetaARF", "thetaARF2", "thetaARp", "thetaIAAp", "ua", "ud"], unusedUserAction);
    var internal = this.internal;
    this.base.user.setUserScalar(user, "AHKph_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "alphaAHK", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "alphaARF", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "alphaARRB", internal, 2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "alphaAux", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "alphaCk", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "alphaPH", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "alphaTIR1", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARF2_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARFIAA_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARm_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARp_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARRAm_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARRAp_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARRAph_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ARRBph_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Aux_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "AuxTIAA_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "AuxTIR1_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Ck_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "CRm_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "CRp_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "deltaARp", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "deltaARRAp", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "deltaCRp", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "deltaIAAp", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "deltaPINp", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "eps", internal, 0.01, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "etaAHKph", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "etaARFIAA", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "etaAuxTIR1", internal, 10, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "etaCkPh", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "IAAm_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "IAAp_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "IAAs_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ka", internal, 100, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kd", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "la", internal, 0.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "lambda1", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "lambda3", internal, 0.02, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ld", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "muAux", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "muCk", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "muIAAs", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "pa", internal, 10, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "pd", internal, 10, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "phiARp", internal, 2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "phiARRAp", internal, 100, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "phiCRp", internal, 2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "phiIAAp", internal, 100, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "phiPINp", internal, 100, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PINm_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PINp_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "psiARF", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "psiARFIAA", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "qa", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "qd", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ra", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "rd", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "sa", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "sd", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "thARFIAA", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "thARRAph", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "thARRBph", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "thetaARF", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "thetaARF2", internal, 0.01, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "thetaARp", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "thetaIAAp", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ua", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ud", internal, 1, -Infinity, Infinity, false);
    internal.initial_AHKph = internal.AHKph_init;
    internal.initial_ARF2 = internal.ARF2_init;
    internal.initial_ARFIAA = internal.ARFIAA_init;
    internal.initial_ARm = internal.ARm_init;
    internal.initial_ARp = internal.ARp_init;
    internal.initial_ARRAm = internal.ARRAm_init;
    internal.initial_ARRAp = internal.ARRAp_init;
    internal.initial_ARRAph = internal.ARRAph_init;
    internal.initial_ARRBph = internal.ARRBph_init;
    internal.initial_Aux = internal.Aux_init;
    internal.initial_AuxTIAA = internal.AuxTIAA_init;
    internal.initial_AuxTIR1 = internal.AuxTIR1_init;
    internal.initial_Ck = internal.Ck_init;
    internal.initial_CRm = internal.CRm_init;
    internal.initial_CRp = internal.CRp_init;
    internal.initial_IAAm = internal.IAAm_init;
    internal.initial_IAAp = internal.IAAp_init;
    internal.initial_IAAs = internal.IAAs_init;
    internal.initial_PINm = internal.PINm_init;
    internal.initial_PINp = internal.PINp_init;
    this.updateMetadata();
  }
  getInternal() {
    return this.internal;
  }
  rhs(t, state, dstatedt) {
    var internal = this.internal;
    const IAAm = state[0];
    const IAAp = state[1];
    const AuxTIR1 = state[2];
    const AuxTIAA = state[3];
    const IAAs = state[4];
    const ARFIAA = state[5];
    const ARF2 = state[6];
    const Aux = state[7];
    const PINm = state[8];
    const PINp = state[9];
    const ARm = state[10];
    const ARp = state[11];
    const TIR1 = state[12];
    const ARF = state[13];
    const CRm = state[14];
    const CRp = state[15];
    const AHKph = state[16];
    const Ck = state[17];
    const ARRBph = state[18];
    const ARRAph = state[19];
    const ARRAm = state[20];
    const ARRAp = state[21];
    const ARRBp = state[22];
    const CkAHKph = state[23];
    const CkAHK = state[24];
    const F1 = state[25];
    const F2 = state[26];
    const F3 = state[27];
    const F4 = state[28];
    const F5a = state[29];
    const F5b = state[30];
    const F6 = state[31];
    dstatedt[13] = 0 + 0;
    dstatedt[22] = 0 + 0;
    dstatedt[24] = 0 + 0;
    dstatedt[23] = 0 + 0;
    dstatedt[25] = 0 + 0;
    dstatedt[26] = 0 + 0;
    dstatedt[27] = 0 + 0;
    dstatedt[28] = 0 + 0;
    dstatedt[29] = 0 + 0;
    dstatedt[30] = 0 + 0;
    dstatedt[31] = 0 + 0;
    dstatedt[12] = 0 + 0;
    dstatedt[16] = 0 + 1 * 1 / internal.eps * (internal.rd * CkAHKph - internal.ra * AHKph * Ck);
    dstatedt[6] = 0 + 1 * internal.qa * Math.pow((ARF), (2)) - internal.qd * ARF2;
    dstatedt[5] = 0 + 1 * internal.pa * ARF * IAAp - internal.pd * ARFIAA;
    dstatedt[10] = 0 + 1 * internal.phiARp * (internal.lambda1 * F5a + F5b) - ARm;
    dstatedt[11] = 0 + 1 * 1 / internal.eps * (internal.deltaARp * ARm - ARp);
    dstatedt[20] = 0 + 1 * internal.phiARRAp * F6 - ARRAm;
    dstatedt[21] = 0 + 1 * 1 / internal.eps * (internal.deltaARRAp * ARRAm - ARRAp + internal.etaAHKph * (internal.sd * CkAHK * ARRAph - internal.sa * CkAHKph * ARRAp));
    dstatedt[19] = 0 + 1 * 1 / internal.eps * (internal.sa * CkAHKph * ARRAp - internal.sd * CkAHK * ARRAph);
    dstatedt[18] = 0 + 1 * 1 / internal.eps * (internal.ua * CkAHKph * ARRBp - internal.ud * CkAHK * ARRBph);
    dstatedt[7] = 0 + 1 * internal.muAux * (internal.alphaAux - Aux) - 1 / internal.eps * internal.etaAuxTIR1 * (internal.ka * Aux * TIR1 - internal.kd * AuxTIR1);
    dstatedt[3] = 0 + 1 * 1 / internal.eps * (internal.la * IAAp * AuxTIR1 - (internal.ld + 1) * AuxTIAA);
    dstatedt[2] = 0 + 1 * 1 / internal.eps * (internal.ka * Aux * TIR1 - internal.kd * AuxTIR1 + (internal.ld + 1) * AuxTIAA - internal.la * AuxTIR1 * IAAp);
    dstatedt[17] = 0 + 1 * internal.muCk * (internal.alphaCk - Ck) - internal.etaCkPh / internal.eps * (internal.ra * AHKph * Ck - internal.rd * CkAHKph);
    dstatedt[14] = 0 + 1 * internal.phiCRp * F4 - CRm;
    dstatedt[15] = 0 + 1 * 1 / internal.eps * (internal.deltaCRp * CRm - CRp);
    dstatedt[0] = 0 + 1 * internal.phiIAAp * (internal.lambda1 * F1 + F2 + internal.lambda3 * F3) - IAAm;
    dstatedt[1] = 0 + 1 * 1 / internal.eps * (internal.deltaIAAp * IAAm - internal.la * IAAp * AuxTIR1 + internal.ld * AuxTIAA) + internal.etaARFIAA * (internal.pd * ARFIAA - internal.pa * IAAp * ARF);
    dstatedt[4] = 0 + 1 * 1 / internal.eps * (AuxTIAA - internal.muIAAs * IAAs);
    dstatedt[8] = 0 + 1 * internal.phiPINp * (internal.lambda1 * F5a + F5b) - PINm;
    dstatedt[9] = 0 + 1 * 1 / internal.eps * (internal.deltaPINp * PINm - PINp);
  }
  names() {
    return this.metadata.ynames.slice(1);
  }
  updateMetadata() {
    this.metadata = {};
    var internal = this.internal;
    this.metadata.ynames = ["t", "IAAm", "IAAp", "AuxTIR1", "AuxTIAA", "IAAs", "ARFIAA", "ARF2", "Aux", "PINm", "PINp", "ARm", "ARp", "TIR1", "ARF", "CRm", "CRp", "AHKph", "Ck", "ARRBph", "ARRAph", "ARRAm", "ARRAp", "ARRBp", "CkAHKph", "CkAHK", "F1", "F2", "F3", "F4", "F5a", "F5b", "F6"];
    this.metadata.internalOrder = {AHKph_init: null, alphaAHK: null, alphaARF: null, alphaARRB: null, alphaAux: null, alphaCk: null, alphaPH: null, alphaTIR1: null, ARF2_init: null, ARFIAA_init: null, ARm_init: null, ARp_init: null, ARRAm_init: null, ARRAp_init: null, ARRAph_init: null, ARRBph_init: null, Aux_init: null, AuxTIAA_init: null, AuxTIR1_init: null, cell: null, Ck_init: null, CRm_init: null, CRp_init: null, deltaARp: null, deltaARRAp: null, deltaCRp: null, deltaIAAp: null, deltaPINp: null, eps: null, etaAHKph: null, etaARFIAA: null, etaAuxTIR1: null, etaCkPh: null, IAAm_init: null, IAAp_init: null, IAAs_init: null, initial_AHKph: null, initial_ARF: null, initial_ARF2: null, initial_ARFIAA: null, initial_ARm: null, initial_ARp: null, initial_ARRAm: null, initial_ARRAp: null, initial_ARRAph: null, initial_ARRBp: null, initial_ARRBph: null, initial_Aux: null, initial_AuxTIAA: null, initial_AuxTIR1: null, initial_Ck: null, initial_CkAHK: null, initial_CkAHKph: null, initial_CRm: null, initial_CRp: null, initial_F1: null, initial_F2: null, initial_F3: null, initial_F4: null, initial_F5a: null, initial_F5b: null, initial_F6: null, initial_IAAm: null, initial_IAAp: null, initial_IAAs: null, initial_PINm: null, initial_PINp: null, initial_TIR1: null, ka: null, kd: null, la: null, lambda1: null, lambda3: null, ld: null, muAux: null, muCk: null, muIAAs: null, pa: null, pd: null, phiARp: null, phiARRAp: null, phiCRp: null, phiIAAp: null, phiPINp: null, PINm_init: null, PINp_init: null, psiARF: null, psiARFIAA: null, qa: null, qd: null, ra: null, rd: null, sa: null, sd: null, thARFIAA: null, thARRAph: null, thARRBph: null, thetaARF: null, thetaARF2: null, thetaARp: null, thetaIAAp: null, ua: null, ud: null};
    this.metadata.variableOrder = {IAAm: null, IAAp: null, AuxTIR1: null, AuxTIAA: null, IAAs: null, ARFIAA: null, ARF2: null, Aux: null, PINm: null, PINp: null, ARm: null, ARp: null, TIR1: null, ARF: null, CRm: null, CRp: null, AHKph: null, Ck: null, ARRBph: null, ARRAph: null, ARRAm: null, ARRAp: null, ARRBp: null, CkAHKph: null, CkAHK: null, F1: null, F2: null, F3: null, F4: null, F5a: null, F5b: null, F6: null};
    this.metadata.outputOrder = null;
  }
  getMetadata() {
    return this.metadata;
  }
}
