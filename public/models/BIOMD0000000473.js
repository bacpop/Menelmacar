export class model {
  constructor(base, user, unusedUserAction) {
    this.base = base;
    this.internal = {};
    var internal = this.internal;
    internal.cell = 1;
    internal.e_0001 = 0.001;
    internal.e_0002 = 0.001;
    internal.e_0003 = 0.001;
    internal.e_0004 = 0.001;
    internal.e_0005 = 0.001;
    internal.e_0006 = 0.001;
    internal.e_0007 = 0.001;
    internal.e_0008 = 0.001;
    internal.e_0010 = 0.001;
    internal.e_0011 = 0.001;
    internal.e_0012 = 0.001;
    internal.e_0017 = 0.001;
    internal.e_0020 = 0.001;
    internal.e_0022 = 0.001;
    internal.e_0025 = 0.001;
    internal.e_0026 = 0.001;
    internal.e_0028 = 0.001;
    internal.e_0030 = 0.001;
    internal.e_0031 = 0.001;
    internal.e_0033 = 0.001;
    internal.e_0038 = 0.001;
    internal.e_0045 = 0.001;
    internal.e_0051 = 0.001;
    internal.e_0053 = 0.001;
    internal.e_0054 = 0.001;
    internal.e_0057 = 0.001;
    internal.e_0062 = 0.001;
    internal.e_0063 = 0.001;
    internal.e_0064 = 0.001;
    internal.e_0065 = 0.001;
    internal.e_0066 = 0.001;
    internal.e_0069 = 0.001;
    internal.e_0071 = 0.001;
    internal.e_0074 = 0.001;
    internal.e_0079 = 0.001;
    internal.e_0084 = 0.001;
    internal.e_0087 = 0.001;
    internal.e_0088 = 0.001;
    internal.e_0089 = 0.001;
    internal.e_0090 = 0.001;
    internal.e_0091 = 0.001;
    internal.e_0092 = 0.001;
    internal.e_0100 = 0.001;
    internal.e_0101 = 0.001;
    internal.e_0103 = 0.001;
    internal.e_0106 = 0.001;
    internal.e_0107 = 0.001;
    internal.e_0109 = 0.001;
    internal.e_0111 = 0.001;
    internal.e_0113 = 0.001;
    internal.e_0117 = 0.001;
    internal.e_0122 = 0.001;
    internal.e_0124 = 0.001;
    internal.e_0127 = 0.001;
    internal.e_0128 = 0.001;
    internal.e_0129 = 0.001;
    internal.e_0133 = 0.001;
    internal.e_0134 = 0.001;
    internal.e_0135 = 0.001;
    internal.e_0136 = 0.001;
    internal.e_0137 = 0.001;
    internal.e_0141 = 0.001;
    internal.e_0142 = 0.001;
    internal.e_0146 = 0.001;
    internal.e_0151 = 0.001;
    internal.e_0152 = 0.001;
    internal.e_0154 = 0.001;
    internal.e_0155 = 0.001;
    internal.e_0160 = 0.001;
    internal.e_0165 = 0.001;
    internal.e_0167 = 0.001;
    internal.e_0168 = 0.001;
    internal.e_0169 = 0.001;
    internal.e_0171 = 0.001;
    internal.e_0175 = 0.001;
    internal.e_0176 = 0.001;
    internal.e_0177 = 0.001;
    internal.e_0179 = 0.001;
    internal.e_0182 = 0.001;
    internal.e_0183 = 0.001;
    internal.e_0186 = 0.001;
    internal.e_0188 = 0.001;
    internal.e_0194 = 0.001;
    internal.e_0196 = 0.001;
    internal.e_0202 = 0.001;
    internal.e_0203 = 0.001;
    internal.e_0204 = 0.001;
    internal.e_0207 = 0.001;
    internal.e_0213 = 0.001;
    internal.e_0214 = 0.001;
    internal.e_0218 = 0.001;
    internal.e_0219 = 0.001;
    internal.e_0220 = 0.001;
    internal.e_0223 = 0.001;
    internal.e_0231 = 0.001;
    internal.e_0234 = 0.001;
    internal.e_0237 = 0.001;
    internal.e_0239 = 0.001;
    internal.e_0243 = 0.001;
    internal.e_0249 = 0.001;
    internal.e_0250 = 0.001;
    internal.e_0251 = 0.001;
    internal.e_0255 = 0.001;
    internal.e_0260 = 0.001;
    internal.e_0263 = 0.001;
    internal.e_0268 = 0.001;
    internal.e_0269 = 0.001;
    internal.e_0271 = 0.001;
    internal.e_0273 = 0.001;
    internal.e_0276 = 0.001;
    internal.e_0278 = 0.001;
    internal.e_0280 = 0.001;
    internal.e_0281 = 0.001;
    internal.e_0283 = 0.001;
    internal.e_0288 = 0.001;
    internal.e_0289 = 0.001;
    internal.e_0290 = 0.001;
    internal.e_0291 = 0.001;
    internal.e_0293 = 0.001;
    internal.e_0295 = 0.001;
    internal.e_0296 = 0.001;
    internal.e_0297 = 0.001;
    internal.e_0298 = 0.001;
    internal.e_0299 = 0.001;
    internal.e_0303 = 0.001;
    internal.e_0311 = 0.001;
    internal.e_0312 = 0.001;
    internal.e_0313 = 0.001;
    internal.e_0314 = 0.001;
    internal.e_0317 = 0.001;
    internal.e_0320 = 0.001;
    internal.e_0321 = 0.001;
    internal.e_0322 = 0.001;
    internal.e_0325 = 0.001;
    internal.e_0326 = 0.001;
    internal.e_0328 = 0.001;
    internal.e_0329 = 0.001;
    internal.e_0330 = 0.001;
    internal.e_0334 = 0.001;
    internal.e_0340 = 0.001;
    internal.e_0342 = 0.001;
    internal.e_0343 = 0.001;
    internal.e_0346 = 0.001;
    internal.e_0347 = 0.001;
    internal.e_0348 = 0.001;
    internal.e_0352 = 0.001;
    internal.e_0353 = 0.001;
    internal.e_0355 = 0.001;
    internal.e_0356 = 0.001;
    internal.e_0362 = 0.001;
    internal.e_0364 = 0.001;
    internal.e_0365 = 0.001;
    internal.e_0367 = 0.001;
    internal.e_0368 = 0.001;
    internal.e_0370 = 0.001;
    internal.e_0372 = 0.001;
    internal.e_0376 = 0.001;
    internal.e_0379 = 0.001;
    internal.e_0380 = 0.001;
    internal.e_0381 = 0.001;
    internal.e_0382 = 0.001;
    internal.e_0385 = 0.001;
    internal.e_0387 = 0.001;
    internal.e_0389 = 0.001;
    internal.e_0390 = 0.001;
    internal.e_0392 = 0.001;
    internal.e_0396 = 0.001;
    internal.e_0398 = 0.001;
    internal.e_0401 = 0.001;
    internal.e_0404 = 0.001;
    internal.e_0405 = 0.001;
    internal.e_0407 = 0.001;
    internal.e_0409 = 0.001;
    internal.e_0417 = 0.001;
    internal.e_0418 = 0.001;
    internal.e_0422 = 0.001;
    internal.e_0424 = 0.001;
    internal.e_0425 = 0.001;
    internal.e_0426 = 0.001;
    internal.e_0427 = 0.001;
    internal.e_0428 = 0.001;
    internal.e_0429 = 0.001;
    internal.e_0431 = 0.001;
    internal.e_0432 = 0.001;
    internal.e_0434 = 0.001;
    internal.e_0435 = 0.001;
    internal.e_0436 = 0.001;
    internal.e_0440 = 0.001;
    internal.e_0447 = 0.001;
    internal.e_0448 = 0.001;
    internal.e_0452 = 0.001;
    internal.e_0453 = 0.001;
    internal.e_0454 = 0.001;
    internal.e_0455 = 0.001;
    internal.e_0456 = 0.001;
    internal.e_0457 = 0.001;
    internal.e_0458 = 0.001;
    internal.e_0462 = 0.001;
    internal.e_0465 = 0.001;
    internal.e_0466 = 0.001;
    internal.e_0467 = 0.001;
    internal.e_0470 = 0.001;
    internal.e_0472 = 0.001;
    internal.e_0475 = 0.001;
    internal.e_0476 = 0.001;
    internal.e_0489 = 0.001;
    internal.e_0492 = 0.001;
    internal.e_0494 = 0.001;
    internal.e_0495 = 0.001;
    internal.e_0496 = 0.001;
    internal.e_0499 = 0.001;
    internal.e_0506 = 0.001;
    internal.e_0508 = 0.001;
    internal.e_0510 = 0.001;
    internal.e_0512 = 0.001;
    internal.e_0514 = 0.001;
    internal.e_0515 = 0.001;
    internal.e_0525 = 0.001;
    internal.e_0528 = 0.001;
    internal.e_0531 = 0.001;
    internal.e_0536 = 0.001;
    internal.e_0540 = 0.001;
    internal.e_0541 = 0.001;
    internal.e_0542 = 0.001;
    internal.e_0544 = 0.001;
    internal.e_0545 = 0.001;
    internal.e_0547 = 0.001;
    internal.e_0548 = 0.001;
    internal.e_0549 = 0.001;
    internal.e_0550 = 0.001;
    internal.e_0556 = 0.001;
    internal.e_0557 = 0.001;
    internal.e_0558 = 0.001;
    internal.e_0559 = 0.001;
    internal.e_0561 = 0.001;
    internal.e_0565 = 0.001;
    internal.e_0567 = 0.001;
    internal.e_0568 = 0.001;
    internal.e_0569 = 0.001;
    internal.e_0571 = 0.001;
    internal.e_0574 = 0.001;
    internal.e_0576 = 0.001;
    internal.e_0578 = 0.001;
    internal.e_0579 = 0.001;
    internal.e_0581 = 0.001;
    internal.e_0582 = 0.001;
    internal.e_0585 = 0.001;
    internal.e_0586 = 0.001;
    internal.e_0588 = 0.001;
    internal.e_0591 = 0.001;
    internal.e_0594 = 0.001;
    internal.e_0601 = 0.001;
    internal.e_0603 = 0.001;
    internal.e_0607 = 0.001;
    internal.e_0610 = 0.001;
    internal.e_0611 = 0.001;
    internal.e_0612 = 0.001;
    internal.e_0613 = 0.001;
    internal.e_0615 = 0.001;
    internal.e_0619 = 0.001;
    internal.e_0621 = 0.001;
    internal.e_0629 = 0.001;
    internal.e_0631 = 0.001;
    internal.e_0632 = 0.001;
    internal.e_0633 = 0.001;
    internal.e_0636 = 0.001;
    internal.e_0638 = 0.001;
    internal.e_0639 = 0.001;
    internal.e_0642 = 0.001;
    internal.e_0644 = 0.001;
    internal.e_0647 = 0.001;
    internal.e_0658 = 0.001;
    internal.e_0667 = 0.001;
    internal.e_0671 = 0.001;
    internal.e_0674 = 0.001;
    internal.e_0675 = 0.001;
    internal.e_0682 = 0.001;
    internal.e_0684 = 0.001;
    internal.e_0685 = 0.001;
    internal.e_0686 = 0.001;
    internal.e_0687 = 0.001;
    internal.e_0690 = 0.001;
    internal.e_0692 = 0.001;
    internal.e_0693 = 0.001;
    internal.e_0695 = 0.001;
    internal.e_0697 = 0.001;
    internal.e_0698 = 0.001;
    internal.e_0699 = 0.001;
    internal.e_0704 = 0.001;
    internal.e_0705 = 0.001;
    internal.e_0708 = 0.001;
    internal.e_0709 = 0.001;
    internal.e_0711 = 0.001;
    internal.e_0712 = 0.001;
    internal.e_0716 = 0.001;
    internal.e_0727 = 0.001;
    internal.e_0729 = 0.001;
    internal.e_0730 = 0.001;
    internal.e_0733 = 0.001;
    internal.e_0734 = 0.001;
    internal.e_0736 = 0.001;
    internal.e_0740 = 0.001;
    internal.e_0741 = 0.001;
    internal.e_0742 = 0.001;
    internal.e_0743 = 0.001;
    internal.e_0744 = 0.001;
    internal.e_0745 = 0.001;
    internal.e_0746 = 0.001;
    internal.e_0747 = 0.001;
    internal.e_0750 = 0.001;
    internal.e_0752 = 0.001;
    internal.e_0753 = 0.001;
    internal.e_0754 = 0.001;
    internal.e_0755 = 0.001;
    internal.e_0757 = 0.001;
    internal.e_0761 = 0.001;
    internal.e_0762 = 0.001;
    internal.e_0763 = 0.001;
    internal.e_0765 = 0.001;
    internal.e_0769 = 0.001;
    internal.e_0771 = 0.001;
    internal.e_0774 = 0.001;
    internal.e_0778 = 0.001;
    internal.e_0788 = 0.001;
    internal.e_0791 = 0.001;
    internal.e_0792 = 0.001;
    internal.e_0793 = 0.001;
    internal.e_0799 = 0.001;
    internal.e_0800 = 0.001;
    internal.e_0802 = 0.001;
    internal.e_0805 = 0.001;
    internal.e_0808 = 0.001;
    internal.e_0812 = 0.001;
    internal.e_0813 = 0.001;
    internal.e_0826 = 0.001;
    internal.e_0827 = 0.001;
    internal.e_0829 = 0.001;
    internal.e_0830 = 0.001;
    internal.e_0832 = 0.001;
    internal.e_0834 = 0.001;
    internal.e_0836 = 0.001;
    internal.e_0838 = 0.001;
    internal.e_0840 = 0.001;
    internal.e_0841 = 0.001;
    internal.e_0842 = 0.001;
    internal.e_0846 = 0.001;
    internal.e_0848 = 0.001;
    internal.e_0850 = 0.001;
    internal.e_0851 = 0.001;
    internal.e_0852 = 0.001;
    internal.e_0855 = 0.001;
    internal.e_0860 = 0.001;
    internal.e_0862 = 0.001;
    internal.e_0867 = 0.001;
    internal.e_0869 = 0.001;
    internal.e_0875 = 0.001;
    internal.e_0880 = 0.001;
    internal.e_0883 = 0.001;
    internal.e_0884 = 0.001;
    internal.e_0888 = 0.001;
    internal.e_0889 = 0.001;
    internal.e_0890 = 0.001;
    internal.e_0892 = 0.001;
    internal.e_0894 = 0.001;
    internal.e_0895 = 0.001;
    internal.e_0898 = 0.001;
    internal.e_0903 = 0.001;
    internal.e_0904 = 0.001;
    internal.e_0911 = 0.001;
    internal.e_0913 = 0.001;
    internal.e_0915 = 0.001;
    internal.e_0922 = 0.001;
    internal.e_0924 = 0.001;
    internal.e_0926 = 0.001;
    internal.e_0934 = 0.001;
    internal.e_0935 = 0.001;
    internal.e_0940 = 0.001;
    internal.e_0944 = 0.001;
    internal.e_0947 = 0.001;
    internal.e_0950 = 0.001;
    internal.e_0953 = 0.001;
    internal.e_0955 = 0.001;
    internal.e_0956 = 0.001;
    internal.e_0959 = 0.001;
    internal.e_0962 = 0.001;
    internal.e_0963 = 0.001;
    internal.e_0964 = 0.001;
    internal.e_0970 = 0.001;
    internal.e_0973 = 0.001;
    internal.e_0975 = 0.001;
    internal.e_0976 = 0.001;
    internal.e_0978 = 0.001;
    internal.e_0980 = 0.001;
    internal.extracellular = 1;
    internal.GLCx = 100;
    internal.s_0360 = 0;
    internal.s_0420 = 1;
    internal.s_0458 = 0;
    internal.s_0681 = 0;
    internal.s_0766 = 0;
    internal.s_1277 = 1;
    internal.s_1324 = 1;
    internal.s_1459 = 0;
    internal.s_1468 = 1;
    this.setUser(user, unusedUserAction);
  }
  initial(t) {
    var internal = this.internal;
    var state = Array(310).fill(0);
    state[0] = internal.initial_s_0002;
    state[1] = internal.initial_s_0004;
    state[2] = internal.initial_s_0008;
    state[3] = internal.initial_s_0009;
    state[4] = internal.initial_s_0010;
    state[5] = internal.initial_s_0015;
    state[6] = internal.initial_s_0016;
    state[7] = internal.initial_s_0018;
    state[8] = internal.initial_s_0019;
    state[9] = internal.initial_s_0025;
    state[10] = internal.initial_s_0028;
    state[11] = internal.initial_s_0033;
    state[12] = internal.initial_s_0037;
    state[13] = internal.initial_s_0039;
    state[14] = internal.initial_s_0056;
    state[15] = internal.initial_s_0061;
    state[16] = internal.initial_s_0062;
    state[17] = internal.initial_s_0063;
    state[18] = internal.initial_s_0066;
    state[19] = internal.initial_BPG;
    state[20] = internal.initial_s_0076;
    state[21] = internal.initial_s_0077;
    state[22] = internal.initial_s_0078;
    state[23] = internal.initial_s_0082;
    state[24] = internal.initial_s_0086;
    state[25] = internal.initial_s_0089;
    state[26] = internal.initial_s_0118;
    state[27] = internal.initial_s_0120;
    state[28] = internal.initial_s_0122;
    state[29] = internal.initial_s_0126;
    state[30] = internal.initial_s_0141;
    state[31] = internal.initial_s_0142;
    state[32] = internal.initial_s_0145;
    state[33] = internal.initial_s_0146;
    state[34] = internal.initial_s_0158;
    state[35] = internal.initial_s_0162;
    state[36] = internal.initial_s_0165;
    state[37] = internal.initial_s_0176;
    state[38] = internal.initial_s_0178;
    state[39] = internal.initial_s_0180;
    state[40] = internal.initial_P2G;
    state[41] = internal.initial_s_0190;
    state[42] = internal.initial_s_0201;
    state[43] = internal.initial_s_0204;
    state[44] = internal.initial_s_0207;
    state[45] = internal.initial_s_0209;
    state[46] = internal.initial_s_0210;
    state[47] = internal.initial_s_0211;
    state[48] = internal.initial_s_0218;
    state[49] = internal.initial_s_0231;
    state[50] = internal.initial_s_0232;
    state[51] = internal.initial_P3G;
    state[52] = internal.initial_s_0261;
    state[53] = internal.initial_s_0262;
    state[54] = internal.initial_s_0291;
    state[55] = internal.initial_s_0295;
    state[56] = internal.initial_s_0296;
    state[57] = internal.initial_s_0297;
    state[58] = internal.initial_s_0298;
    state[59] = internal.initial_s_0299;
    state[60] = internal.initial_s_0300;
    state[61] = internal.initial_s_0301;
    state[62] = internal.initial_s_0302;
    state[63] = internal.initial_s_0304;
    state[64] = internal.initial_s_0306;
    state[65] = internal.initial_s_0312;
    state[66] = internal.initial_s_0313;
    state[67] = internal.initial_s_0314;
    state[68] = internal.initial_s_0322;
    state[69] = internal.initial_s_0324;
    state[70] = internal.initial_s_0325;
    state[71] = internal.initial_s_0326;
    state[72] = internal.initial_s_0327;
    state[73] = internal.initial_s_0328;
    state[74] = internal.initial_s_0335;
    state[75] = internal.initial_s_0340;
    state[76] = internal.initial_s_0349;
    state[77] = internal.initial_AcAld;
    state[78] = internal.initial_s_0362;
    state[79] = internal.initial_s_0367;
    state[80] = internal.initial_s_0373;
    state[81] = internal.initial_s_0380;
    state[82] = internal.initial_s_0386;
    state[83] = internal.initial_s_0390;
    state[84] = internal.initial_s_0393;
    state[85] = internal.initial_ADP;
    state[86] = internal.initial_s_0403;
    state[87] = internal.initial_s_0404;
    state[88] = internal.initial_s_0409;
    state[89] = internal.initial_s_0419;
    state[90] = internal.initial_AMP;
    state[91] = internal.initial_s_0427;
    state[92] = internal.initial_s_0428;
    state[93] = internal.initial_s_0430;
    state[94] = internal.initial_s_0432;
    state[95] = internal.initial_ATP;
    state[96] = internal.initial_s_0445;
    state[97] = internal.initial_s_0454;
    state[98] = internal.initial_s_0455;
    state[99] = internal.initial_CO2;
    state[100] = internal.initial_s_0467;
    state[101] = internal.initial_s_0471;
    state[102] = internal.initial_s_0478;
    state[103] = internal.initial_s_0505;
    state[104] = internal.initial_s_0515;
    state[105] = internal.initial_s_0516;
    state[106] = internal.initial_s_0522;
    state[107] = internal.initial_s_0526;
    state[108] = internal.initial_s_0529;
    state[109] = internal.initial_s_0539;
    state[110] = internal.initial_s_0542;
    state[111] = internal.initial_s_0550;
    state[112] = internal.initial_s_0551;
    state[113] = internal.initial_F16bP;
    state[114] = internal.initial_F6P;
    state[115] = internal.initial_GLC;
    state[116] = internal.initial_s_0567;
    state[117] = internal.initial_G6P;
    state[118] = internal.initial_s_0573;
    state[119] = internal.initial_s_0574;
    state[120] = internal.initial_s_0577;
    state[121] = internal.initial_s_0581;
    state[122] = internal.initial_s_0582;
    state[123] = internal.initial_s_0584;
    state[124] = internal.initial_s_0586;
    state[125] = internal.initial_s_0587;
    state[126] = internal.initial_s_0589;
    state[127] = internal.initial_s_0595;
    state[128] = internal.initial_s_0602;
    state[129] = internal.initial_s_0613;
    state[130] = internal.initial_s_0615;
    state[131] = internal.initial_s_0619;
    state[132] = internal.initial_s_0625;
    state[133] = internal.initial_DHAP;
    state[134] = internal.initial_s_0633;
    state[135] = internal.initial_s_0644;
    state[136] = internal.initial_s_0645;
    state[137] = internal.initial_s_0649;
    state[138] = internal.initial_s_0654;
    state[139] = internal.initial_s_0656;
    state[140] = internal.initial_s_0657;
    state[141] = internal.initial_s_0662;
    state[142] = internal.initial_s_0666;
    state[143] = internal.initial_s_0672;
    state[144] = internal.initial_EtOH;
    state[145] = internal.initial_s_0700;
    state[146] = internal.initial_s_0709;
    state[147] = internal.initial_s_0710;
    state[148] = internal.initial_s_0722;
    state[149] = internal.initial_s_0725;
    state[150] = internal.initial_s_0739;
    state[151] = internal.initial_s_0743;
    state[152] = internal.initial_s_0745;
    state[153] = internal.initial_s_0747;
    state[154] = internal.initial_s_0748;
    state[155] = internal.initial_s_0750;
    state[156] = internal.initial_s_0757;
    state[157] = internal.initial_GAP;
    state[158] = internal.initial_GLY;
    state[159] = internal.initial_s_0767;
    state[160] = internal.initial_s_0773;
    state[161] = internal.initial_s_0779;
    state[162] = internal.initial_s_0782;
    state[163] = internal.initial_s_0785;
    state[164] = internal.initial_s_0816;
    state[165] = internal.initial_s_0832;
    state[166] = internal.initial_s_0835;
    state[167] = internal.initial_s_0836;
    state[168] = internal.initial_s_0841;
    state[169] = internal.initial_s_0847;
    state[170] = internal.initial_s_0849;
    state[171] = internal.initial_s_0897;
    state[172] = internal.initial_s_0940;
    state[173] = internal.initial_s_0943;
    state[174] = internal.initial_s_0951;
    state[175] = internal.initial_s_0953;
    state[176] = internal.initial_s_0955;
    state[177] = internal.initial_s_0959;
    state[178] = internal.initial_s_0965;
    state[179] = internal.initial_s_0969;
    state[180] = internal.initial_s_0973;
    state[181] = internal.initial_s_0978;
    state[182] = internal.initial_s_0979;
    state[183] = internal.initial_s_0980;
    state[184] = internal.initial_s_0981;
    state[185] = internal.initial_s_0991;
    state[186] = internal.initial_s_0999;
    state[187] = internal.initial_s_1003;
    state[188] = internal.initial_s_1006;
    state[189] = internal.initial_s_1010;
    state[190] = internal.initial_s_1011;
    state[191] = internal.initial_s_1012;
    state[192] = internal.initial_s_1014;
    state[193] = internal.initial_s_1016;
    state[194] = internal.initial_s_1021;
    state[195] = internal.initial_s_1025;
    state[196] = internal.initial_s_1029;
    state[197] = internal.initial_s_1032;
    state[198] = internal.initial_s_1035;
    state[199] = internal.initial_s_1038;
    state[200] = internal.initial_s_1039;
    state[201] = internal.initial_s_1045;
    state[202] = internal.initial_s_1048;
    state[203] = internal.initial_s_1051;
    state[204] = internal.initial_s_1056;
    state[205] = internal.initial_s_1059;
    state[206] = internal.initial_s_1065;
    state[207] = internal.initial_s_1073;
    state[208] = internal.initial_s_1077;
    state[209] = internal.initial_s_1084;
    state[210] = internal.initial_s_1099;
    state[211] = internal.initial_s_1101;
    state[212] = internal.initial_s_1107;
    state[213] = internal.initial_s_1148;
    state[214] = internal.initial_s_1151;
    state[215] = internal.initial_s_1153;
    state[216] = internal.initial_s_1161;
    state[217] = internal.initial_s_1176;
    state[218] = internal.initial_s_1182;
    state[219] = internal.initial_s_1187;
    state[220] = internal.initial_s_1191;
    state[221] = internal.initial_s_1192;
    state[222] = internal.initial_s_1194;
    state[223] = internal.initial_NAD;
    state[224] = internal.initial_NADH;
    state[225] = internal.initial_s_1207;
    state[226] = internal.initial_s_1212;
    state[227] = internal.initial_s_1233;
    state[228] = internal.initial_s_1238;
    state[229] = internal.initial_s_1255;
    state[230] = internal.initial_s_1266;
    state[231] = internal.initial_s_1269;
    state[232] = internal.initial_s_1270;
    state[233] = internal.initial_s_1271;
    state[234] = internal.initial_s_1275;
    state[235] = internal.initial_s_1286;
    state[236] = internal.initial_s_1302;
    state[237] = internal.initial_s_1314;
    state[238] = internal.initial_PHO;
    state[239] = internal.initial_s_1331;
    state[240] = internal.initial_s_1337;
    state[241] = internal.initial_s_1342;
    state[242] = internal.initial_s_1343;
    state[243] = internal.initial_s_1346;
    state[244] = internal.initial_s_1351;
    state[245] = internal.initial_PEP;
    state[246] = internal.initial_s_1364;
    state[247] = internal.initial_s_1365;
    state[248] = internal.initial_s_1376;
    state[249] = internal.initial_s_1377;
    state[250] = internal.initial_s_1379;
    state[251] = internal.initial_s_1386;
    state[252] = internal.initial_PYR;
    state[253] = internal.initial_s_1405;
    state[254] = internal.initial_s_1408;
    state[255] = internal.initial_s_1413;
    state[256] = internal.initial_s_1416;
    state[257] = internal.initial_s_1426;
    state[258] = internal.initial_s_1427;
    state[259] = internal.initial_s_1428;
    state[260] = internal.initial_s_1429;
    state[261] = internal.initial_s_1445;
    state[262] = internal.initial_s_1447;
    state[263] = internal.initial_s_1449;
    state[264] = internal.initial_s_1454;
    state[265] = internal.initial_s_1458;
    state[266] = internal.initial_s_1467;
    state[267] = internal.initial_s_1469;
    state[268] = internal.initial_s_1487;
    state[269] = internal.initial_s_1491;
    state[270] = internal.initial_s_1520;
    state[271] = internal.initial_s_1524;
    state[272] = internal.initial_s_1527;
    state[273] = internal.initial_s_1533;
    state[274] = internal.initial_s_1535;
    state[275] = internal.initial_s_1537;
    state[276] = internal.initial_s_1538;
    state[277] = internal.initial_s_1543;
    state[278] = internal.initial_s_1545;
    state[279] = internal.initial_s_1559;
    state[280] = internal.initial_s_1561;
    state[281] = internal.initial_s_1565;
    state[282] = internal.initial_s_1569;
    state[283] = internal.initial_s_1576;
    state[284] = internal.initial_s_1577;
    state[285] = internal.initial_s_1578;
    state[286] = internal.initial_s_1579;
    state[287] = internal.initial_s_1582;
    state[288] = internal.initial_s_1583;
    state[289] = internal.initial_s_1585;
    state[290] = internal.initial_s_1587;
    state[291] = internal.initial_s_1589;
    state[292] = internal.initial_s_1590;
    state[293] = internal.initial_s_1591;
    state[294] = internal.initial_s_1593;
    state[295] = internal.initial_s_1594;
    state[296] = internal.initial_s_1596;
    state[297] = internal.initial_s_1598;
    state[298] = internal.initial_s_1600;
    state[299] = internal.initial_s_1602;
    state[300] = internal.initial_s_1604;
    state[301] = internal.initial_s_1606;
    state[302] = internal.initial_s_1607;
    state[303] = internal.initial_s_1608;
    state[304] = internal.initial_s_1610;
    state[305] = internal.initial_s_1612;
    state[306] = internal.initial_s_1614;
    state[307] = internal.initial_s_1616;
    state[308] = internal.initial_s_1620;
    state[309] = internal.initial_F26bP;
    return state;
  }
  setUser(user, unusedUserAction) {
    this.base.user.checkUser(user, ["AcAld_init", "ADP_init", "AMP_init", "ATP_init", "BPG_init", "Camp", "Catp", "Cf16", "Cf26", "Ciatp", "CO2_init", "DHAP_init", "ep0002", "ep0004", "ep0089", "ep0122", "ep0404", "ep0428", "ep0430", "ep0432", "ep0526", "ep0542", "ep0584", "ep0589", "ep0595", "ep0615", "ep0649", "ep0657", "ep0662", "ep0666", "ep0672", "ep0700", "ep0747", "ep0748", "ep0757", "ep0773", "ep0782", "ep0832", "ep0847", "ep0897", "ep1059", "ep1077", "ep1099", "ep1107", "ep1148", "ep1314", "ep1337", "ep1346", "ep1351", "ep1379", "ep1405", "ep1428", "ep1467", "ep1491", "ep1520", "ep1524", "ep1527", "ep1533", "ep1545", "ep1561", "ep1569", "epAMP", "epATP", "EtOH_init", "F16bP_init", "F26bP_init", "F6P_init", "FLUX_VALUE", "G6P_init", "GAP_init", "GLC_init", "GLY_init", "gR", "ic0002", "ic0004", "ic0089", "ic0122", "ic0404", "ic0428", "ic0430", "ic0432", "ic0526", "ic0542", "ic0584", "ic0589", "ic0595", "ic0615", "ic0649", "ic0657", "ic0662", "ic0666", "ic0672", "ic0700", "ic0747", "ic0748", "ic0757", "ic0773", "ic0782", "ic0832", "ic0847", "ic0897", "ic1059", "ic1077", "ic1099", "ic1107", "ic1148", "ic1314", "ic1337", "ic1346", "ic1351", "ic1379", "ic1405", "ic1428", "ic1467", "ic1491", "ic1520", "ic1524", "ic1527", "ic1533", "ic1545", "ic1561", "ic1569", "icAMP", "icATP", "Kacald", "Kadp", "Kamp", "Katp", "Kbpg", "Kdhap", "Keq", "Ketoh", "Kf16", "Kf16bp", "Kf26", "Kf6p", "Kg6p", "Kgap", "Kglc", "Ki", "Kiacald", "Kiatp", "Kietoh", "Kigap", "Kinad", "Kinadh", "Km0002", "Km0004", "Km0008", "Km0009", "Km0010", "Km0015", "Km0016", "Km0018", "Km0019", "Km0025", "Km0028", "Km0033", "Km0037", "Km0039", "Km0056", "Km0061", "Km0062", "Km0063", "Km0066", "Km0076", "Km0077", "Km0078", "Km0082", "Km0086", "Km0089", "Km0118", "Km0120", "Km0122", "Km0126", "Km0141", "Km0142", "Km0145", "Km0146", "Km0158", "Km0162", "Km0165", "Km0176", "Km0178", "Km0180", "Km0190", "Km0201", "Km0204", "Km0207", "Km0209", "Km0210", "Km0211", "Km0218", "Km0231", "Km0232", "Km0261", "Km0262", "Km0291", "Km0295", "Km0296", "Km0297", "Km0298", "Km0299", "Km0300", "Km0301", "Km0302", "Km0304", "Km0306", "Km0312", "Km0313", "Km0314", "Km0322", "Km0324", "Km0325", "Km0326", "Km0327", "Km0328", "Km0335", "Km0340", "Km0349", "Km0362", "Km0367", "Km0373", "Km0380", "Km0386", "Km0390", "Km0393", "Km0403", "Km0404", "Km0409", "Km0419", "Km0420", "Km0427", "Km0428", "Km0430", "Km0432", "Km0445", "Km0454", "Km0455", "Km0467", "Km0471", "Km0478", "Km0505", "Km0515", "Km0516", "Km0522", "Km0526", "Km0529", "Km0539", "Km0542", "Km0550", "Km0551", "Km0567", "Km0573", "Km0574", "Km0577", "Km0581", "Km0582", "Km0584", "Km0586", "Km0587", "Km0589", "Km0595", "Km0602", "Km0613", "Km0615", "Km0619", "Km0625", "Km0633", "Km0644", "Km0645", "Km0649", "Km0654", "Km0656", "Km0657", "Km0662", "Km0666", "Km0672", "Km0700", "Km0709", "Km0710", "Km0722", "Km0725", "Km0739", "Km0743", "Km0745", "Km0747", "Km0748", "Km0750", "Km0757", "Km0767", "Km0773", "Km0779", "Km0782", "Km0785", "Km0816", "Km0832", "Km0835", "Km0836", "Km0841", "Km0847", "Km0849", "Km0897", "Km0940", "Km0943", "Km0951", "Km0953", "Km0955", "Km0959", "Km0965", "Km0969", "Km0973", "Km0978", "Km0979", "Km0980", "Km0981", "Km0991", "Km0999", "Km1003", "Km1006", "Km1010", "Km1011", "Km1012", "Km1014", "Km1016", "Km1021", "Km1025", "Km1029", "Km1032", "Km1035", "Km1038", "Km1039", "Km1045", "Km1048", "Km1051", "Km1056", "Km1059", "Km1065", "Km1073", "Km1077", "Km1084", "Km1099", "Km1101", "Km1107", "Km1148", "Km1151", "Km1153", "Km1161", "Km1176", "Km1182", "Km1187", "Km1191", "Km1192", "Km1194", "Km1207", "Km1212", "Km1233", "Km1238", "Km1255", "Km1266", "Km1269", "Km1270", "Km1271", "Km1275", "Km1277", "Km1286", "Km1302", "Km1314", "Km1324", "Km1331", "Km1337", "Km1342", "Km1343", "Km1346", "Km1351", "Km1364", "Km1365", "Km1376", "Km1377", "Km1379", "Km1386", "Km1405", "Km1408", "Km1413", "Km1416", "Km1426", "Km1427", "Km1428", "Km1429", "Km1445", "Km1447", "Km1449", "Km1454", "Km1458", "Km1467", "Km1468", "Km1469", "Km1487", "Km1491", "Km1520", "Km1524", "Km1527", "Km1533", "Km1535", "Km1537", "Km1538", "Km1543", "Km1545", "Km1559", "Km1561", "Km1565", "Km1569", "Km1576", "Km1577", "Km1578", "Km1579", "Km1582", "Km1583", "Km1585", "Km1587", "Km1589", "Km1590", "Km1591", "Km1593", "Km1594", "Km1596", "Km1598", "Km1600", "Km1602", "Km1604", "Km1606", "Km1607", "Km1608", "Km1610", "Km1612", "Km1614", "Km1616", "Km1620", "KmAcAld", "KmADP", "KmAMP", "KmATP", "KmCO2", "KmDHAP", "KmEtOH", "KmF6P", "KmG6P", "KmGAP", "KmGLY", "KmNAD", "KmNADH", "KmPEP", "KmPHO", "KmPYR", "Knad", "Knadh", "Kp2g", "Kp3g", "Kpep", "Kpho", "Kpyr", "kxk", "L0", "NAD_init", "NADH_init", "nH", "P2G_init", "P3G_init", "PEP_init", "PHO_init", "PYR_init", "s_0002_init", "s_0004_init", "s_0008_init", "s_0009_init", "s_0010_init", "s_0015_init", "s_0016_init", "s_0018_init", "s_0019_init", "s_0025_init", "s_0028_init", "s_0033_init", "s_0037_init", "s_0039_init", "s_0056_init", "s_0061_init", "s_0062_init", "s_0063_init", "s_0066_init", "s_0076_init", "s_0077_init", "s_0078_init", "s_0082_init", "s_0086_init", "s_0089_init", "s_0118_init", "s_0120_init", "s_0122_init", "s_0126_init", "s_0141_init", "s_0142_init", "s_0145_init", "s_0146_init", "s_0158_init", "s_0162_init", "s_0165_init", "s_0176_init", "s_0178_init", "s_0180_init", "s_0190_init", "s_0201_init", "s_0204_init", "s_0207_init", "s_0209_init", "s_0210_init", "s_0211_init", "s_0218_init", "s_0231_init", "s_0232_init", "s_0261_init", "s_0262_init", "s_0291_init", "s_0295_init", "s_0296_init", "s_0297_init", "s_0298_init", "s_0299_init", "s_0300_init", "s_0301_init", "s_0302_init", "s_0304_init", "s_0306_init", "s_0312_init", "s_0313_init", "s_0314_init", "s_0322_init", "s_0324_init", "s_0325_init", "s_0326_init", "s_0327_init", "s_0328_init", "s_0335_init", "s_0340_init", "s_0349_init", "s_0362_init", "s_0367_init", "s_0373_init", "s_0380_init", "s_0386_init", "s_0390_init", "s_0393_init", "s_0403_init", "s_0404_init", "s_0409_init", "s_0419_init", "s_0427_init", "s_0428_init", "s_0430_init", "s_0432_init", "s_0445_init", "s_0454_init", "s_0455_init", "s_0467_init", "s_0471_init", "s_0478_init", "s_0505_init", "s_0515_init", "s_0516_init", "s_0522_init", "s_0526_init", "s_0529_init", "s_0539_init", "s_0542_init", "s_0550_init", "s_0551_init", "s_0567_init", "s_0573_init", "s_0574_init", "s_0577_init", "s_0581_init", "s_0582_init", "s_0584_init", "s_0586_init", "s_0587_init", "s_0589_init", "s_0595_init", "s_0602_init", "s_0613_init", "s_0615_init", "s_0619_init", "s_0625_init", "s_0633_init", "s_0644_init", "s_0645_init", "s_0649_init", "s_0654_init", "s_0656_init", "s_0657_init", "s_0662_init", "s_0666_init", "s_0672_init", "s_0700_init", "s_0709_init", "s_0710_init", "s_0722_init", "s_0725_init", "s_0739_init", "s_0743_init", "s_0745_init", "s_0747_init", "s_0748_init", "s_0750_init", "s_0757_init", "s_0767_init", "s_0773_init", "s_0779_init", "s_0782_init", "s_0785_init", "s_0816_init", "s_0832_init", "s_0835_init", "s_0836_init", "s_0841_init", "s_0847_init", "s_0849_init", "s_0897_init", "s_0940_init", "s_0943_init", "s_0951_init", "s_0953_init", "s_0955_init", "s_0959_init", "s_0965_init", "s_0969_init", "s_0973_init", "s_0978_init", "s_0979_init", "s_0980_init", "s_0981_init", "s_0991_init", "s_0999_init", "s_1003_init", "s_1006_init", "s_1010_init", "s_1011_init", "s_1012_init", "s_1014_init", "s_1016_init", "s_1021_init", "s_1025_init", "s_1029_init", "s_1032_init", "s_1035_init", "s_1038_init", "s_1039_init", "s_1045_init", "s_1048_init", "s_1051_init", "s_1056_init", "s_1059_init", "s_1065_init", "s_1073_init", "s_1077_init", "s_1084_init", "s_1099_init", "s_1101_init", "s_1107_init", "s_1148_init", "s_1151_init", "s_1153_init", "s_1161_init", "s_1176_init", "s_1182_init", "s_1187_init", "s_1191_init", "s_1192_init", "s_1194_init", "s_1207_init", "s_1212_init", "s_1233_init", "s_1238_init", "s_1255_init", "s_1266_init", "s_1269_init", "s_1270_init", "s_1271_init", "s_1275_init", "s_1286_init", "s_1302_init", "s_1314_init", "s_1331_init", "s_1337_init", "s_1342_init", "s_1343_init", "s_1346_init", "s_1351_init", "s_1364_init", "s_1365_init", "s_1376_init", "s_1377_init", "s_1379_init", "s_1386_init", "s_1405_init", "s_1408_init", "s_1413_init", "s_1416_init", "s_1426_init", "s_1427_init", "s_1428_init", "s_1429_init", "s_1445_init", "s_1447_init", "s_1449_init", "s_1454_init", "s_1458_init", "s_1467_init", "s_1469_init", "s_1487_init", "s_1491_init", "s_1520_init", "s_1524_init", "s_1527_init", "s_1533_init", "s_1535_init", "s_1537_init", "s_1538_init", "s_1543_init", "s_1545_init", "s_1559_init", "s_1561_init", "s_1565_init", "s_1569_init", "s_1576_init", "s_1577_init", "s_1578_init", "s_1579_init", "s_1582_init", "s_1583_init", "s_1585_init", "s_1587_init", "s_1589_init", "s_1590_init", "s_1591_init", "s_1593_init", "s_1594_init", "s_1596_init", "s_1598_init", "s_1600_init", "s_1602_init", "s_1604_init", "s_1606_init", "s_1607_init", "s_1608_init", "s_1610_init", "s_1612_init", "s_1614_init", "s_1616_init", "s_1620_init", "v0", "Vmax", "zero_flux"], unusedUserAction);
    var internal = this.internal;
    this.base.user.setUserScalar(user, "AcAld_init", internal, 0.17814057985065701, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ADP_init", internal, 1.28198768168719, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "AMP_init", internal, 0.29288485332009101, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ATP_init", internal, 2.52512746499271, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "BPG_init", internal, 0.00073687349986560201, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Camp", internal, 0.084500000000000006, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Catp", internal, 3, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Cf16", internal, 0.39700000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Cf26", internal, 0.017399999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Ciatp", internal, 100, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "CO2_init", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "DHAP_init", internal, 1.00415254899644, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0002", internal, 1.1348, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0004", internal, 1.1348, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0089", internal, 0.001583, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0122", internal, 5.5999999999999999e-05, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0404", internal, 0.45879999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0428", internal, 0.16070000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0430", internal, 0.1017, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0432", internal, 0.29749999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0526", internal, 0.044699999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0542", internal, 0.0066, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0584", internal, 0.0035999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0589", internal, 0.0023999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0595", internal, 0.00053559999999999903, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0615", internal, 0.0023999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0649", internal, 0.0035999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0657", internal, 9.6000000000000002e-05, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0662", internal, 0.000125, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0666", internal, 0.0055999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0672", internal, 0.000812, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0700", internal, 0.00011400000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0747", internal, 0.10539999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0748", internal, 0.30180000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0757", internal, 0.29039999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0773", internal, 0.51849999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0782", internal, 0.045999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0832", internal, 0.066299999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0847", internal, 0.19270000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep0897", internal, 0.00051707999999999995, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1059", internal, 3.1999999999999999e-05, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1077", internal, 0.2964, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1099", internal, 0.28620000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1107", internal, 0.80789999999999995, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1148", internal, 0.050700000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1314", internal, 0.13389999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1337", internal, 0.00038999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1346", internal, 0.0028800000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1351", internal, 0.00069700000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1379", internal, 0.16470000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1405", internal, 0.00098999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1428", internal, 0.18540000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1467", internal, 0.02, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1491", internal, 0.19139999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1520", internal, 0.023400000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1524", internal, 0.00078100000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1527", internal, 0.028400000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1533", internal, 0.10199999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1545", internal, 0.059900000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1561", internal, 0.2646, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ep1569", internal, 1.5e-05, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "epAMP", internal, 0.045999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "epATP", internal, 59.276000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "EtOH_init", internal, 50, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "F16bP_init", internal, 6.2213207606941099, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "F26bP_init", internal, 0.02, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "F6P_init", internal, 0.62497640553237299, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "FLUX_VALUE", internal, 0.0047546382086472603, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "G6P_init", internal, 2.6750401404478699, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GAP_init", internal, 0.045180917578096301, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GLC_init", internal, 0.097652231064563, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GLY_init", internal, 0.14999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "gR", internal, 5.1200000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0002", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0004", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0089", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0122", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0404", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0428", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0430", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0432", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0526", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0542", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0584", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0589", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0595", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0615", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0649", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0657", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0662", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0666", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0672", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0700", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0747", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0748", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0757", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0773", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0782", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0832", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0847", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic0897", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1059", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1077", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1099", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1107", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1148", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1314", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1337", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1346", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1351", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1379", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1405", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1428", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1467", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1491", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1520", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1524", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1527", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1533", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1545", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1561", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ic1569", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "icAMP", internal, 0.29288485332009101, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "icATP", internal, 2.52512746499271, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kacald", internal, 1.1100000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kadp", internal, 0.53000000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kamp", internal, 0.099500000000000005, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Katp", internal, 1.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kbpg", internal, 0.0030000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kdhap", internal, 2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Keq", internal, 0.115359884738766, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Ketoh", internal, 17, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kf16", internal, 0.111, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kf16bp", internal, 0.29999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kf26", internal, 0.00068199999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kf6p", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kg6p", internal, 30, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kgap", internal, 0.20999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kglc", internal, 1.1918, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Ki", internal, 0.91000000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kiacald", internal, 1.1000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kiatp", internal, 0.65000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kietoh", internal, 90, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kigap", internal, 10, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kinad", internal, 0.92000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kinadh", internal, 0.031, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0002", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0004", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0008", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0009", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0010", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0015", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0016", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0018", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0019", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0025", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0028", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0033", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0037", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0039", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0056", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0061", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0062", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0063", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0066", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0076", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0077", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0078", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0082", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0086", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0089", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0118", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0120", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0122", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0126", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0141", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0142", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0145", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0146", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0158", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0162", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0165", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0176", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0178", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0180", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0190", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0201", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0204", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0207", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0209", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0210", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0211", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0218", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0231", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0232", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0261", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0262", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0291", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0295", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0296", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0297", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0298", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0299", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0300", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0301", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0302", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0304", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0306", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0312", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0313", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0314", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0322", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0324", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0325", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0326", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0327", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0328", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0335", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0340", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0349", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0362", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0367", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0373", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0380", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0386", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0390", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0393", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0403", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0404", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0409", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0419", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0420", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0427", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0428", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0430", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0432", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0445", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0454", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0455", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0467", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0471", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0478", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0505", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0515", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0516", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0522", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0526", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0529", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0539", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0542", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0550", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0551", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0567", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0573", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0574", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0577", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0581", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0582", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0584", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0586", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0587", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0589", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0595", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0602", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0613", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0615", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0619", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0625", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0633", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0644", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0645", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0649", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0654", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0656", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0657", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0662", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0666", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0672", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0700", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0709", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0710", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0722", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0725", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0739", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0743", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0745", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0747", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0748", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0750", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0757", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0767", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0773", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0779", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0782", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0785", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0816", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0832", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0835", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0836", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0841", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0847", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0849", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0897", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0940", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0943", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0951", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0953", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0955", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0959", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0965", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0969", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0973", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0978", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0979", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0980", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0981", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0991", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km0999", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1003", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1006", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1010", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1011", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1012", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1014", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1016", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1021", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1025", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1029", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1032", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1035", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1038", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1039", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1045", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1048", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1051", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1056", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1059", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1065", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1073", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1077", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1084", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1099", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1101", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1107", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1148", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1151", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1153", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1161", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1176", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1182", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1187", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1191", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1192", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1194", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1207", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1212", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1233", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1238", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1255", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1266", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1269", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1270", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1271", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1275", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1277", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1286", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1302", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1314", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1324", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1331", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1337", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1342", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1343", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1346", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1351", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1364", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1365", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1376", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1377", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1379", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1386", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1405", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1408", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1413", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1416", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1426", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1427", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1428", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1429", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1445", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1447", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1449", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1454", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1458", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1467", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1468", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1469", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1487", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1491", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1520", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1524", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1527", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1533", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1535", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1537", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1538", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1543", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1545", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1559", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1561", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1565", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1569", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1576", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1577", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1578", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1579", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1582", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1583", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1585", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1587", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1589", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1590", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1591", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1593", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1594", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1596", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1598", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1600", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1602", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1604", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1606", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1607", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1608", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1610", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1612", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1614", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1616", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Km1620", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmAcAld", internal, 0.17814057985065701, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmADP", internal, 1.28198768168719, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmAMP", internal, 0.29288485332009101, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmATP", internal, 2.52512746499271, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmCO2", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmDHAP", internal, 1.00415254899644, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmEtOH", internal, 50, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmF6P", internal, 0.62497640553237299, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmG6P", internal, 2.6750401404478699, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmGAP", internal, 0.045180917578096301, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmGLY", internal, 0.14999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmNAD", internal, 1.5032903020153101, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmNADH", internal, 0.086709697984695203, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmPEP", internal, 0.0632352144936527, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmPHO", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmPYR", internal, 1.8153125119273601, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Knad", internal, 0.089999999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Knadh", internal, 0.059999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kp2g", internal, 0.080000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kp3g", internal, 1.2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kpep", internal, 0.14000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kpho", internal, 0.0001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kpyr", internal, 21, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kxk", internal, 7500, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "L0", internal, 0.66000000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "NAD_init", internal, 1.5032903020153101, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "NADH_init", internal, 0.086709697984695203, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "nH", internal, 1.8999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "P2G_init", internal, 0.12769581738663199, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "P3G_init", internal, 0.88568853836065897, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PEP_init", internal, 0.0632352144936527, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PHO_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PYR_init", internal, 1.8153125119273601, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0002_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0004_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0008_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0009_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0010_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0015_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0016_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0018_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0019_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0025_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0028_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0033_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0037_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0039_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0056_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0061_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0062_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0063_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0066_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0076_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0077_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0078_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0082_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0086_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0089_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0118_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0120_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0122_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0126_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0141_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0142_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0145_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0146_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0158_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0162_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0165_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0176_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0178_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0180_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0190_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0201_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0204_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0207_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0209_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0210_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0211_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0218_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0231_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0232_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0261_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0262_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0291_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0295_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0296_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0297_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0298_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0299_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0300_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0301_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0302_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0304_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0306_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0312_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0313_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0314_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0322_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0324_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0325_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0326_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0327_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0328_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0335_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0340_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0349_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0362_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0367_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0373_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0380_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0386_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0390_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0393_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0403_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0404_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0409_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0419_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0427_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0428_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0430_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0432_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0445_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0454_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0455_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0467_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0471_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0478_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0505_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0515_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0516_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0522_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0526_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0529_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0539_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0542_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0550_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0551_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0567_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0573_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0574_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0577_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0581_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0582_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0584_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0586_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0587_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0589_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0595_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0602_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0613_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0615_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0619_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0625_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0633_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0644_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0645_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0649_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0654_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0656_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0657_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0662_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0666_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0672_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0700_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0709_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0710_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0722_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0725_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0739_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0743_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0745_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0747_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0748_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0750_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0757_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0767_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0773_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0779_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0782_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0785_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0816_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0832_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0835_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0836_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0841_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0847_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0849_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0897_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0940_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0943_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0951_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0953_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0955_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0959_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0965_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0969_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0973_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0978_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0979_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0980_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0981_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0991_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0999_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1003_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1006_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1010_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1011_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1012_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1014_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1016_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1021_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1025_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1029_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1032_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1035_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1038_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1039_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1045_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1048_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1051_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1056_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1059_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1065_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1073_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1077_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1084_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1099_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1101_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1107_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1148_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1151_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1153_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1161_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1176_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1182_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1187_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1191_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1192_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1194_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1207_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1212_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1233_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1238_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1255_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1266_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1269_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1270_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1271_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1275_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1286_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1302_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1314_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1331_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1337_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1342_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1343_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1346_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1351_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1364_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1365_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1376_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1377_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1379_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1386_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1405_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1408_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1413_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1416_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1426_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1427_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1428_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1429_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1445_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1447_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1449_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1454_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1458_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1467_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1469_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1487_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1491_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1520_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1524_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1527_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1533_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1535_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1537_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1538_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1543_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1545_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1559_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1561_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1565_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1569_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1576_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1577_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1578_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1579_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1582_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1583_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1585_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1587_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1589_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1590_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1591_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1593_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1594_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1596_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1598_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1600_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1602_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1604_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1606_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1607_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1608_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1610_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1612_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1614_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1616_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1620_init", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "v0", internal, 0.042989494474150999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmax", internal, 0.066564934920744903, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "zero_flux", internal, 0, -Infinity, Infinity, false);
    internal.initial_AcAld = internal.AcAld_init;
    internal.initial_ADP = internal.ADP_init;
    internal.initial_AMP = internal.AMP_init;
    internal.initial_ATP = internal.ATP_init;
    internal.initial_BPG = internal.BPG_init;
    internal.initial_CO2 = internal.CO2_init;
    internal.initial_DHAP = internal.DHAP_init;
    internal.initial_EtOH = internal.EtOH_init;
    internal.initial_F16bP = internal.F16bP_init;
    internal.initial_F26bP = internal.F26bP_init;
    internal.initial_F6P = internal.F6P_init;
    internal.initial_G6P = internal.G6P_init;
    internal.initial_GAP = internal.GAP_init;
    internal.initial_GLC = internal.GLC_init;
    internal.initial_GLY = internal.GLY_init;
    internal.initial_NAD = internal.NAD_init;
    internal.initial_NADH = internal.NADH_init;
    internal.initial_P2G = internal.P2G_init;
    internal.initial_P3G = internal.P3G_init;
    internal.initial_PEP = internal.PEP_init;
    internal.initial_PHO = internal.PHO_init;
    internal.initial_PYR = internal.PYR_init;
    internal.initial_s_0002 = internal.s_0002_init;
    internal.initial_s_0004 = internal.s_0004_init;
    internal.initial_s_0008 = internal.s_0008_init;
    internal.initial_s_0009 = internal.s_0009_init;
    internal.initial_s_0010 = internal.s_0010_init;
    internal.initial_s_0015 = internal.s_0015_init;
    internal.initial_s_0016 = internal.s_0016_init;
    internal.initial_s_0018 = internal.s_0018_init;
    internal.initial_s_0019 = internal.s_0019_init;
    internal.initial_s_0025 = internal.s_0025_init;
    internal.initial_s_0028 = internal.s_0028_init;
    internal.initial_s_0033 = internal.s_0033_init;
    internal.initial_s_0037 = internal.s_0037_init;
    internal.initial_s_0039 = internal.s_0039_init;
    internal.initial_s_0056 = internal.s_0056_init;
    internal.initial_s_0061 = internal.s_0061_init;
    internal.initial_s_0062 = internal.s_0062_init;
    internal.initial_s_0063 = internal.s_0063_init;
    internal.initial_s_0066 = internal.s_0066_init;
    internal.initial_s_0076 = internal.s_0076_init;
    internal.initial_s_0077 = internal.s_0077_init;
    internal.initial_s_0078 = internal.s_0078_init;
    internal.initial_s_0082 = internal.s_0082_init;
    internal.initial_s_0086 = internal.s_0086_init;
    internal.initial_s_0089 = internal.s_0089_init;
    internal.initial_s_0118 = internal.s_0118_init;
    internal.initial_s_0120 = internal.s_0120_init;
    internal.initial_s_0122 = internal.s_0122_init;
    internal.initial_s_0126 = internal.s_0126_init;
    internal.initial_s_0141 = internal.s_0141_init;
    internal.initial_s_0142 = internal.s_0142_init;
    internal.initial_s_0145 = internal.s_0145_init;
    internal.initial_s_0146 = internal.s_0146_init;
    internal.initial_s_0158 = internal.s_0158_init;
    internal.initial_s_0162 = internal.s_0162_init;
    internal.initial_s_0165 = internal.s_0165_init;
    internal.initial_s_0176 = internal.s_0176_init;
    internal.initial_s_0178 = internal.s_0178_init;
    internal.initial_s_0180 = internal.s_0180_init;
    internal.initial_s_0190 = internal.s_0190_init;
    internal.initial_s_0201 = internal.s_0201_init;
    internal.initial_s_0204 = internal.s_0204_init;
    internal.initial_s_0207 = internal.s_0207_init;
    internal.initial_s_0209 = internal.s_0209_init;
    internal.initial_s_0210 = internal.s_0210_init;
    internal.initial_s_0211 = internal.s_0211_init;
    internal.initial_s_0218 = internal.s_0218_init;
    internal.initial_s_0231 = internal.s_0231_init;
    internal.initial_s_0232 = internal.s_0232_init;
    internal.initial_s_0261 = internal.s_0261_init;
    internal.initial_s_0262 = internal.s_0262_init;
    internal.initial_s_0291 = internal.s_0291_init;
    internal.initial_s_0295 = internal.s_0295_init;
    internal.initial_s_0296 = internal.s_0296_init;
    internal.initial_s_0297 = internal.s_0297_init;
    internal.initial_s_0298 = internal.s_0298_init;
    internal.initial_s_0299 = internal.s_0299_init;
    internal.initial_s_0300 = internal.s_0300_init;
    internal.initial_s_0301 = internal.s_0301_init;
    internal.initial_s_0302 = internal.s_0302_init;
    internal.initial_s_0304 = internal.s_0304_init;
    internal.initial_s_0306 = internal.s_0306_init;
    internal.initial_s_0312 = internal.s_0312_init;
    internal.initial_s_0313 = internal.s_0313_init;
    internal.initial_s_0314 = internal.s_0314_init;
    internal.initial_s_0322 = internal.s_0322_init;
    internal.initial_s_0324 = internal.s_0324_init;
    internal.initial_s_0325 = internal.s_0325_init;
    internal.initial_s_0326 = internal.s_0326_init;
    internal.initial_s_0327 = internal.s_0327_init;
    internal.initial_s_0328 = internal.s_0328_init;
    internal.initial_s_0335 = internal.s_0335_init;
    internal.initial_s_0340 = internal.s_0340_init;
    internal.initial_s_0349 = internal.s_0349_init;
    internal.initial_s_0362 = internal.s_0362_init;
    internal.initial_s_0367 = internal.s_0367_init;
    internal.initial_s_0373 = internal.s_0373_init;
    internal.initial_s_0380 = internal.s_0380_init;
    internal.initial_s_0386 = internal.s_0386_init;
    internal.initial_s_0390 = internal.s_0390_init;
    internal.initial_s_0393 = internal.s_0393_init;
    internal.initial_s_0403 = internal.s_0403_init;
    internal.initial_s_0404 = internal.s_0404_init;
    internal.initial_s_0409 = internal.s_0409_init;
    internal.initial_s_0419 = internal.s_0419_init;
    internal.initial_s_0427 = internal.s_0427_init;
    internal.initial_s_0428 = internal.s_0428_init;
    internal.initial_s_0430 = internal.s_0430_init;
    internal.initial_s_0432 = internal.s_0432_init;
    internal.initial_s_0445 = internal.s_0445_init;
    internal.initial_s_0454 = internal.s_0454_init;
    internal.initial_s_0455 = internal.s_0455_init;
    internal.initial_s_0467 = internal.s_0467_init;
    internal.initial_s_0471 = internal.s_0471_init;
    internal.initial_s_0478 = internal.s_0478_init;
    internal.initial_s_0505 = internal.s_0505_init;
    internal.initial_s_0515 = internal.s_0515_init;
    internal.initial_s_0516 = internal.s_0516_init;
    internal.initial_s_0522 = internal.s_0522_init;
    internal.initial_s_0526 = internal.s_0526_init;
    internal.initial_s_0529 = internal.s_0529_init;
    internal.initial_s_0539 = internal.s_0539_init;
    internal.initial_s_0542 = internal.s_0542_init;
    internal.initial_s_0550 = internal.s_0550_init;
    internal.initial_s_0551 = internal.s_0551_init;
    internal.initial_s_0567 = internal.s_0567_init;
    internal.initial_s_0573 = internal.s_0573_init;
    internal.initial_s_0574 = internal.s_0574_init;
    internal.initial_s_0577 = internal.s_0577_init;
    internal.initial_s_0581 = internal.s_0581_init;
    internal.initial_s_0582 = internal.s_0582_init;
    internal.initial_s_0584 = internal.s_0584_init;
    internal.initial_s_0586 = internal.s_0586_init;
    internal.initial_s_0587 = internal.s_0587_init;
    internal.initial_s_0589 = internal.s_0589_init;
    internal.initial_s_0595 = internal.s_0595_init;
    internal.initial_s_0602 = internal.s_0602_init;
    internal.initial_s_0613 = internal.s_0613_init;
    internal.initial_s_0615 = internal.s_0615_init;
    internal.initial_s_0619 = internal.s_0619_init;
    internal.initial_s_0625 = internal.s_0625_init;
    internal.initial_s_0633 = internal.s_0633_init;
    internal.initial_s_0644 = internal.s_0644_init;
    internal.initial_s_0645 = internal.s_0645_init;
    internal.initial_s_0649 = internal.s_0649_init;
    internal.initial_s_0654 = internal.s_0654_init;
    internal.initial_s_0656 = internal.s_0656_init;
    internal.initial_s_0657 = internal.s_0657_init;
    internal.initial_s_0662 = internal.s_0662_init;
    internal.initial_s_0666 = internal.s_0666_init;
    internal.initial_s_0672 = internal.s_0672_init;
    internal.initial_s_0700 = internal.s_0700_init;
    internal.initial_s_0709 = internal.s_0709_init;
    internal.initial_s_0710 = internal.s_0710_init;
    internal.initial_s_0722 = internal.s_0722_init;
    internal.initial_s_0725 = internal.s_0725_init;
    internal.initial_s_0739 = internal.s_0739_init;
    internal.initial_s_0743 = internal.s_0743_init;
    internal.initial_s_0745 = internal.s_0745_init;
    internal.initial_s_0747 = internal.s_0747_init;
    internal.initial_s_0748 = internal.s_0748_init;
    internal.initial_s_0750 = internal.s_0750_init;
    internal.initial_s_0757 = internal.s_0757_init;
    internal.initial_s_0767 = internal.s_0767_init;
    internal.initial_s_0773 = internal.s_0773_init;
    internal.initial_s_0779 = internal.s_0779_init;
    internal.initial_s_0782 = internal.s_0782_init;
    internal.initial_s_0785 = internal.s_0785_init;
    internal.initial_s_0816 = internal.s_0816_init;
    internal.initial_s_0832 = internal.s_0832_init;
    internal.initial_s_0835 = internal.s_0835_init;
    internal.initial_s_0836 = internal.s_0836_init;
    internal.initial_s_0841 = internal.s_0841_init;
    internal.initial_s_0847 = internal.s_0847_init;
    internal.initial_s_0849 = internal.s_0849_init;
    internal.initial_s_0897 = internal.s_0897_init;
    internal.initial_s_0940 = internal.s_0940_init;
    internal.initial_s_0943 = internal.s_0943_init;
    internal.initial_s_0951 = internal.s_0951_init;
    internal.initial_s_0953 = internal.s_0953_init;
    internal.initial_s_0955 = internal.s_0955_init;
    internal.initial_s_0959 = internal.s_0959_init;
    internal.initial_s_0965 = internal.s_0965_init;
    internal.initial_s_0969 = internal.s_0969_init;
    internal.initial_s_0973 = internal.s_0973_init;
    internal.initial_s_0978 = internal.s_0978_init;
    internal.initial_s_0979 = internal.s_0979_init;
    internal.initial_s_0980 = internal.s_0980_init;
    internal.initial_s_0981 = internal.s_0981_init;
    internal.initial_s_0991 = internal.s_0991_init;
    internal.initial_s_0999 = internal.s_0999_init;
    internal.initial_s_1003 = internal.s_1003_init;
    internal.initial_s_1006 = internal.s_1006_init;
    internal.initial_s_1010 = internal.s_1010_init;
    internal.initial_s_1011 = internal.s_1011_init;
    internal.initial_s_1012 = internal.s_1012_init;
    internal.initial_s_1014 = internal.s_1014_init;
    internal.initial_s_1016 = internal.s_1016_init;
    internal.initial_s_1021 = internal.s_1021_init;
    internal.initial_s_1025 = internal.s_1025_init;
    internal.initial_s_1029 = internal.s_1029_init;
    internal.initial_s_1032 = internal.s_1032_init;
    internal.initial_s_1035 = internal.s_1035_init;
    internal.initial_s_1038 = internal.s_1038_init;
    internal.initial_s_1039 = internal.s_1039_init;
    internal.initial_s_1045 = internal.s_1045_init;
    internal.initial_s_1048 = internal.s_1048_init;
    internal.initial_s_1051 = internal.s_1051_init;
    internal.initial_s_1056 = internal.s_1056_init;
    internal.initial_s_1059 = internal.s_1059_init;
    internal.initial_s_1065 = internal.s_1065_init;
    internal.initial_s_1073 = internal.s_1073_init;
    internal.initial_s_1077 = internal.s_1077_init;
    internal.initial_s_1084 = internal.s_1084_init;
    internal.initial_s_1099 = internal.s_1099_init;
    internal.initial_s_1101 = internal.s_1101_init;
    internal.initial_s_1107 = internal.s_1107_init;
    internal.initial_s_1148 = internal.s_1148_init;
    internal.initial_s_1151 = internal.s_1151_init;
    internal.initial_s_1153 = internal.s_1153_init;
    internal.initial_s_1161 = internal.s_1161_init;
    internal.initial_s_1176 = internal.s_1176_init;
    internal.initial_s_1182 = internal.s_1182_init;
    internal.initial_s_1187 = internal.s_1187_init;
    internal.initial_s_1191 = internal.s_1191_init;
    internal.initial_s_1192 = internal.s_1192_init;
    internal.initial_s_1194 = internal.s_1194_init;
    internal.initial_s_1207 = internal.s_1207_init;
    internal.initial_s_1212 = internal.s_1212_init;
    internal.initial_s_1233 = internal.s_1233_init;
    internal.initial_s_1238 = internal.s_1238_init;
    internal.initial_s_1255 = internal.s_1255_init;
    internal.initial_s_1266 = internal.s_1266_init;
    internal.initial_s_1269 = internal.s_1269_init;
    internal.initial_s_1270 = internal.s_1270_init;
    internal.initial_s_1271 = internal.s_1271_init;
    internal.initial_s_1275 = internal.s_1275_init;
    internal.initial_s_1286 = internal.s_1286_init;
    internal.initial_s_1302 = internal.s_1302_init;
    internal.initial_s_1314 = internal.s_1314_init;
    internal.initial_s_1331 = internal.s_1331_init;
    internal.initial_s_1337 = internal.s_1337_init;
    internal.initial_s_1342 = internal.s_1342_init;
    internal.initial_s_1343 = internal.s_1343_init;
    internal.initial_s_1346 = internal.s_1346_init;
    internal.initial_s_1351 = internal.s_1351_init;
    internal.initial_s_1364 = internal.s_1364_init;
    internal.initial_s_1365 = internal.s_1365_init;
    internal.initial_s_1376 = internal.s_1376_init;
    internal.initial_s_1377 = internal.s_1377_init;
    internal.initial_s_1379 = internal.s_1379_init;
    internal.initial_s_1386 = internal.s_1386_init;
    internal.initial_s_1405 = internal.s_1405_init;
    internal.initial_s_1408 = internal.s_1408_init;
    internal.initial_s_1413 = internal.s_1413_init;
    internal.initial_s_1416 = internal.s_1416_init;
    internal.initial_s_1426 = internal.s_1426_init;
    internal.initial_s_1427 = internal.s_1427_init;
    internal.initial_s_1428 = internal.s_1428_init;
    internal.initial_s_1429 = internal.s_1429_init;
    internal.initial_s_1445 = internal.s_1445_init;
    internal.initial_s_1447 = internal.s_1447_init;
    internal.initial_s_1449 = internal.s_1449_init;
    internal.initial_s_1454 = internal.s_1454_init;
    internal.initial_s_1458 = internal.s_1458_init;
    internal.initial_s_1467 = internal.s_1467_init;
    internal.initial_s_1469 = internal.s_1469_init;
    internal.initial_s_1487 = internal.s_1487_init;
    internal.initial_s_1491 = internal.s_1491_init;
    internal.initial_s_1520 = internal.s_1520_init;
    internal.initial_s_1524 = internal.s_1524_init;
    internal.initial_s_1527 = internal.s_1527_init;
    internal.initial_s_1533 = internal.s_1533_init;
    internal.initial_s_1535 = internal.s_1535_init;
    internal.initial_s_1537 = internal.s_1537_init;
    internal.initial_s_1538 = internal.s_1538_init;
    internal.initial_s_1543 = internal.s_1543_init;
    internal.initial_s_1545 = internal.s_1545_init;
    internal.initial_s_1559 = internal.s_1559_init;
    internal.initial_s_1561 = internal.s_1561_init;
    internal.initial_s_1565 = internal.s_1565_init;
    internal.initial_s_1569 = internal.s_1569_init;
    internal.initial_s_1576 = internal.s_1576_init;
    internal.initial_s_1577 = internal.s_1577_init;
    internal.initial_s_1578 = internal.s_1578_init;
    internal.initial_s_1579 = internal.s_1579_init;
    internal.initial_s_1582 = internal.s_1582_init;
    internal.initial_s_1583 = internal.s_1583_init;
    internal.initial_s_1585 = internal.s_1585_init;
    internal.initial_s_1587 = internal.s_1587_init;
    internal.initial_s_1589 = internal.s_1589_init;
    internal.initial_s_1590 = internal.s_1590_init;
    internal.initial_s_1591 = internal.s_1591_init;
    internal.initial_s_1593 = internal.s_1593_init;
    internal.initial_s_1594 = internal.s_1594_init;
    internal.initial_s_1596 = internal.s_1596_init;
    internal.initial_s_1598 = internal.s_1598_init;
    internal.initial_s_1600 = internal.s_1600_init;
    internal.initial_s_1602 = internal.s_1602_init;
    internal.initial_s_1604 = internal.s_1604_init;
    internal.initial_s_1606 = internal.s_1606_init;
    internal.initial_s_1607 = internal.s_1607_init;
    internal.initial_s_1608 = internal.s_1608_init;
    internal.initial_s_1610 = internal.s_1610_init;
    internal.initial_s_1612 = internal.s_1612_init;
    internal.initial_s_1614 = internal.s_1614_init;
    internal.initial_s_1616 = internal.s_1616_init;
    internal.initial_s_1620 = internal.s_1620_init;
    this.updateMetadata();
  }
  getInternal() {
    return this.internal;
  }
  rhs(t, state, dstatedt) {
    var internal = this.internal;
    const s_0002 = state[0];
    const s_0004 = state[1];
    const s_0008 = state[2];
    const s_0009 = state[3];
    const s_0010 = state[4];
    const s_0015 = state[5];
    const s_0016 = state[6];
    const s_0018 = state[7];
    const s_0019 = state[8];
    const s_0025 = state[9];
    const s_0028 = state[10];
    const s_0033 = state[11];
    const s_0037 = state[12];
    const s_0039 = state[13];
    const s_0056 = state[14];
    const s_0061 = state[15];
    const s_0062 = state[16];
    const s_0063 = state[17];
    const s_0066 = state[18];
    const BPG = state[19];
    const s_0076 = state[20];
    const s_0077 = state[21];
    const s_0078 = state[22];
    const s_0082 = state[23];
    const s_0086 = state[24];
    const s_0089 = state[25];
    const s_0118 = state[26];
    const s_0120 = state[27];
    const s_0122 = state[28];
    const s_0126 = state[29];
    const s_0141 = state[30];
    const s_0142 = state[31];
    const s_0145 = state[32];
    const s_0146 = state[33];
    const s_0158 = state[34];
    const s_0162 = state[35];
    const s_0165 = state[36];
    const s_0176 = state[37];
    const s_0178 = state[38];
    const s_0180 = state[39];
    const P2G = state[40];
    const s_0190 = state[41];
    const s_0201 = state[42];
    const s_0204 = state[43];
    const s_0207 = state[44];
    const s_0209 = state[45];
    const s_0210 = state[46];
    const s_0211 = state[47];
    const s_0218 = state[48];
    const s_0231 = state[49];
    const s_0232 = state[50];
    const P3G = state[51];
    const s_0261 = state[52];
    const s_0262 = state[53];
    const s_0291 = state[54];
    const s_0295 = state[55];
    const s_0296 = state[56];
    const s_0297 = state[57];
    const s_0298 = state[58];
    const s_0299 = state[59];
    const s_0300 = state[60];
    const s_0301 = state[61];
    const s_0302 = state[62];
    const s_0304 = state[63];
    const s_0306 = state[64];
    const s_0312 = state[65];
    const s_0313 = state[66];
    const s_0314 = state[67];
    const s_0322 = state[68];
    const s_0324 = state[69];
    const s_0325 = state[70];
    const s_0326 = state[71];
    const s_0327 = state[72];
    const s_0328 = state[73];
    const s_0335 = state[74];
    const s_0340 = state[75];
    const s_0349 = state[76];
    const AcAld = state[77];
    const s_0362 = state[78];
    const s_0367 = state[79];
    const s_0373 = state[80];
    const s_0380 = state[81];
    const s_0386 = state[82];
    const s_0390 = state[83];
    const s_0393 = state[84];
    const ADP = state[85];
    const s_0403 = state[86];
    const s_0404 = state[87];
    const s_0409 = state[88];
    const s_0419 = state[89];
    const AMP = state[90];
    const s_0427 = state[91];
    const s_0428 = state[92];
    const s_0430 = state[93];
    const s_0432 = state[94];
    const ATP = state[95];
    const s_0445 = state[96];
    const s_0454 = state[97];
    const s_0455 = state[98];
    const CO2 = state[99];
    const s_0467 = state[100];
    const s_0471 = state[101];
    const s_0478 = state[102];
    const s_0505 = state[103];
    const s_0515 = state[104];
    const s_0516 = state[105];
    const s_0522 = state[106];
    const s_0526 = state[107];
    const s_0529 = state[108];
    const s_0539 = state[109];
    const s_0542 = state[110];
    const s_0550 = state[111];
    const s_0551 = state[112];
    const F16bP = state[113];
    const F6P = state[114];
    const GLC = state[115];
    const s_0567 = state[116];
    const G6P = state[117];
    const s_0573 = state[118];
    const s_0574 = state[119];
    const s_0577 = state[120];
    const s_0581 = state[121];
    const s_0582 = state[122];
    const s_0584 = state[123];
    const s_0586 = state[124];
    const s_0587 = state[125];
    const s_0589 = state[126];
    const s_0595 = state[127];
    const s_0602 = state[128];
    const s_0613 = state[129];
    const s_0615 = state[130];
    const s_0619 = state[131];
    const s_0625 = state[132];
    const DHAP = state[133];
    const s_0633 = state[134];
    const s_0644 = state[135];
    const s_0645 = state[136];
    const s_0649 = state[137];
    const s_0654 = state[138];
    const s_0656 = state[139];
    const s_0657 = state[140];
    const s_0662 = state[141];
    const s_0666 = state[142];
    const s_0672 = state[143];
    const EtOH = state[144];
    const s_0700 = state[145];
    const s_0709 = state[146];
    const s_0710 = state[147];
    const s_0722 = state[148];
    const s_0725 = state[149];
    const s_0739 = state[150];
    const s_0743 = state[151];
    const s_0745 = state[152];
    const s_0747 = state[153];
    const s_0748 = state[154];
    const s_0750 = state[155];
    const s_0757 = state[156];
    const GAP = state[157];
    const GLY = state[158];
    const s_0767 = state[159];
    const s_0773 = state[160];
    const s_0779 = state[161];
    const s_0782 = state[162];
    const s_0785 = state[163];
    const s_0816 = state[164];
    const s_0832 = state[165];
    const s_0835 = state[166];
    const s_0836 = state[167];
    const s_0841 = state[168];
    const s_0847 = state[169];
    const s_0849 = state[170];
    const s_0897 = state[171];
    const s_0940 = state[172];
    const s_0943 = state[173];
    const s_0951 = state[174];
    const s_0953 = state[175];
    const s_0955 = state[176];
    const s_0959 = state[177];
    const s_0965 = state[178];
    const s_0969 = state[179];
    const s_0973 = state[180];
    const s_0978 = state[181];
    const s_0979 = state[182];
    const s_0980 = state[183];
    const s_0981 = state[184];
    const s_0991 = state[185];
    const s_0999 = state[186];
    const s_1003 = state[187];
    const s_1006 = state[188];
    const s_1010 = state[189];
    const s_1011 = state[190];
    const s_1012 = state[191];
    const s_1014 = state[192];
    const s_1016 = state[193];
    const s_1021 = state[194];
    const s_1025 = state[195];
    const s_1029 = state[196];
    const s_1032 = state[197];
    const s_1035 = state[198];
    const s_1038 = state[199];
    const s_1039 = state[200];
    const s_1045 = state[201];
    const s_1048 = state[202];
    const s_1051 = state[203];
    const s_1056 = state[204];
    const s_1059 = state[205];
    const s_1065 = state[206];
    const s_1073 = state[207];
    const s_1077 = state[208];
    const s_1084 = state[209];
    const s_1099 = state[210];
    const s_1101 = state[211];
    const s_1107 = state[212];
    const s_1148 = state[213];
    const s_1151 = state[214];
    const s_1153 = state[215];
    const s_1161 = state[216];
    const s_1176 = state[217];
    const s_1182 = state[218];
    const s_1187 = state[219];
    const s_1191 = state[220];
    const s_1192 = state[221];
    const s_1194 = state[222];
    const NAD = state[223];
    const NADH = state[224];
    const s_1207 = state[225];
    const s_1212 = state[226];
    const s_1233 = state[227];
    const s_1238 = state[228];
    const s_1255 = state[229];
    const s_1266 = state[230];
    const s_1269 = state[231];
    const s_1270 = state[232];
    const s_1271 = state[233];
    const s_1275 = state[234];
    const s_1286 = state[235];
    const s_1302 = state[236];
    const s_1314 = state[237];
    const PHO = state[238];
    const s_1331 = state[239];
    const s_1337 = state[240];
    const s_1342 = state[241];
    const s_1343 = state[242];
    const s_1346 = state[243];
    const s_1351 = state[244];
    const PEP = state[245];
    const s_1364 = state[246];
    const s_1365 = state[247];
    const s_1376 = state[248];
    const s_1377 = state[249];
    const s_1379 = state[250];
    const s_1386 = state[251];
    const PYR = state[252];
    const s_1405 = state[253];
    const s_1408 = state[254];
    const s_1413 = state[255];
    const s_1416 = state[256];
    const s_1426 = state[257];
    const s_1427 = state[258];
    const s_1428 = state[259];
    const s_1429 = state[260];
    const s_1445 = state[261];
    const s_1447 = state[262];
    const s_1449 = state[263];
    const s_1454 = state[264];
    const s_1458 = state[265];
    const s_1467 = state[266];
    const s_1469 = state[267];
    const s_1487 = state[268];
    const s_1491 = state[269];
    const s_1520 = state[270];
    const s_1524 = state[271];
    const s_1527 = state[272];
    const s_1533 = state[273];
    const s_1535 = state[274];
    const s_1537 = state[275];
    const s_1538 = state[276];
    const s_1543 = state[277];
    const s_1545 = state[278];
    const s_1559 = state[279];
    const s_1561 = state[280];
    const s_1565 = state[281];
    const s_1569 = state[282];
    const s_1576 = state[283];
    const s_1577 = state[284];
    const s_1578 = state[285];
    const s_1579 = state[286];
    const s_1582 = state[287];
    const s_1583 = state[288];
    const s_1585 = state[289];
    const s_1587 = state[290];
    const s_1589 = state[291];
    const s_1590 = state[292];
    const s_1591 = state[293];
    const s_1593 = state[294];
    const s_1594 = state[295];
    const s_1596 = state[296];
    const s_1598 = state[297];
    const s_1600 = state[298];
    const s_1602 = state[299];
    const s_1604 = state[300];
    const s_1606 = state[301];
    const s_1607 = state[302];
    const s_1608 = state[303];
    const s_1610 = state[304];
    const s_1612 = state[305];
    const s_1614 = state[306];
    const s_1616 = state[307];
    const s_1620 = state[308];
    const F26bP = state[309];
    dstatedt[309] = 0;
    dstatedt[77] = 0 - 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) - 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * (internal.Vmax * Math.pow((PYR / internal.Kpyr), (internal.nH)) / (1 + Math.pow((PYR / internal.Kpyr), (internal.nH)))) + 1 * internal.cell * internal.Vmax * (s_1045 - AcAld * s_1003 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + AcAld / internal.KmAcAld) * (1 + s_1003 / internal.Km1003) - 1) - 1 * internal.cell * internal.Vmax * AcAld / internal.KmAcAld / (1 + AcAld / internal.KmAcAld);
    dstatedt[85] = 0 + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) + 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) - 2 * internal.cell * internal.kxk * (ADP * ADP - AMP * ATP / internal.Keq) + 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ADP * PHO - ATP / internal.Keq) / (internal.KmADP * internal.KmPHO) / ((1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) + 1 + ATP / internal.KmATP - 1) + 1 * internal.cell * internal.kxk * ATP + 2 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) + 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) + 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) + 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) + 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2)))) - 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) + 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1) + 59.276000000000003 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[90] = 0 + 1 * internal.cell * internal.Vmax * (s_0390 - AMP * PHO / internal.Keq) / internal.Km0390 / (1 + s_0390 / internal.Km0390 + (1 + AMP / internal.KmAMP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) + 1 * internal.cell * internal.kxk * (ADP * ADP - AMP * ATP / internal.Keq) - 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0393 - AMP * s_0725 / internal.Keq) / internal.Km0393 / (1 + s_0393 / internal.Km0393 + (1 + AMP / internal.KmAMP) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) - 0.045999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[95] = 0 - 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) - 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) + 1 * internal.cell * internal.kxk * (ADP * ADP - AMP * ATP / internal.Keq) - 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ADP * PHO - ATP / internal.Keq) / (internal.KmADP * internal.KmPHO) / ((1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) + 1 + ATP / internal.KmATP - 1) - 1 * internal.cell * internal.kxk * ATP - 2 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) - 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) - 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) - 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2)))) + 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1) - 59.276000000000003 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[19] = 0 + 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) - 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp)));
    dstatedt[99] = 0 + 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0010 - s_0291 * CO2 / internal.Keq) / internal.Km0010 / (1 + s_0010 / internal.Km0010 + (1 + s_0291 / internal.Km0291) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((PYR), (2)) - s_0146 * CO2 / internal.Keq) / Math.pow((internal.KmPYR), (2)) / (Math.pow((1 + PYR / internal.KmPYR), (2)) + (1 + s_0146 / internal.Km0146) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) + 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) + 3 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 3 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) + 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0076 - s_0086 * CO2 / internal.Keq) / internal.Km0076 / (1 + s_0076 / internal.Km0076 + (1 + s_0086 / internal.Km0086) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1270 - CO2 * s_1545 / internal.Keq) / internal.Km1270 / (1 + s_1270 / internal.Km1270 + (1 + CO2 / internal.KmCO2) * (1 + s_1545 / internal.Km1545) - 1) + 1 * internal.cell * internal.Vmax * (s_1337 - CO2 * s_1351 / internal.Keq) / internal.Km1337 / (1 + s_1337 / internal.Km1337 + (1 + CO2 / internal.KmCO2) * (1 + s_1351 / internal.Km1351) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) + 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1377 - CO2 * s_0951 / internal.Keq) / internal.Km1377 / (1 + s_1377 / internal.Km1377 + (1 + CO2 / internal.KmCO2) * (1 + s_0951 / internal.Km0951) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * (internal.Vmax * Math.pow((PYR / internal.Kpyr), (internal.nH)) / (1 + Math.pow((PYR / internal.Kpyr), (internal.nH)))) + 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (CO2 - s_0445 / internal.Keq) / internal.KmCO2 / (1 + CO2 / internal.KmCO2 + 1 + s_0445 / internal.Km0445 - 1) - 1 * internal.cell * internal.Vmax * CO2 / internal.KmCO2 / (1 + CO2 / internal.KmCO2);
    dstatedt[133] = 0 + 1 * internal.cell * (internal.Vmax * (F16bP / internal.Kf16bp - DHAP * GAP / (internal.Kf16bp * internal.Keq)) / (1 + F16bP / internal.Kf16bp + DHAP / internal.Kdhap + GAP / internal.Kgap + F16bP * GAP / (internal.Kf16bp * internal.Kigap) + DHAP * GAP / (internal.Kdhap * internal.Kgap))) - 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * DHAP - s_1426 / internal.Keq) / (internal.Km0551 * internal.KmDHAP) / ((1 + s_0551 / internal.Km0551) * (1 + DHAP / internal.KmDHAP) + 1 + s_1426 / internal.Km1426 - 1) - 1 * internal.cell * internal.kxk * (DHAP - GAP / internal.Keq) - 1 * internal.cell * internal.Vmax * (DHAP - s_1151 * PHO / internal.Keq) / internal.KmDHAP / (1 + DHAP / internal.KmDHAP + (1 + s_1151 / internal.Km1151) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[144] = 0 + 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) - 1 * internal.cell * internal.Vmax * EtOH / internal.KmEtOH / (1 + EtOH / internal.KmEtOH);
    dstatedt[113] = 0 - 1 * internal.cell * (internal.Vmax * (F16bP / internal.Kf16bp - DHAP * GAP / (internal.Kf16bp * internal.Keq)) / (1 + F16bP / internal.Kf16bp + DHAP / internal.Kdhap + GAP / internal.Kgap + F16bP * GAP / (internal.Kf16bp * internal.Kigap) + DHAP * GAP / (internal.Kdhap * internal.Kgap))) + 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2))));
    dstatedt[114] = 0 + 1 * internal.cell * (internal.Vmax * (G6P / internal.Kg6p - F6P / (internal.Kg6p * internal.Keq)) / (1 + G6P / internal.Kg6p + F6P / internal.Kf6p)) - 1 * internal.cell * internal.Vmax * (F6P - s_0574 / internal.Keq) / internal.KmF6P / (1 + F6P / internal.KmF6P + 1 + s_0574 / internal.Km0574 - 1) - 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2)))) + 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) + 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1);
    dstatedt[117] = 0 - 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * (internal.Vmax * (G6P / internal.Kg6p - F6P / (internal.Kg6p * internal.Keq)) / (1 + G6P / internal.Kg6p + F6P / internal.Kf6p)) + 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) - 1 * internal.cell * internal.Vmax * (G6P - s_0126 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0126 / internal.Km0126 - 1) - 1 * internal.cell * internal.Vmax * (G6P - s_0567 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0567 / internal.Km0567 - 1);
    dstatedt[157] = 0 + 1 * internal.cell * (internal.Vmax * (F16bP / internal.Kf16bp - DHAP * GAP / (internal.Kf16bp * internal.Keq)) / (1 + F16bP / internal.Kf16bp + DHAP / internal.Kdhap + GAP / internal.Kgap + F16bP * GAP / (internal.Kf16bp * internal.Kigap) + DHAP * GAP / (internal.Kdhap * internal.Kgap))) - 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) - 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) + 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1) + 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1) + 1 * internal.cell * internal.kxk * (DHAP - GAP / internal.Keq) + 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1);
    dstatedt[115] = 0 - 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) + 1 * internal.cell * (internal.Vmax * (internal.GLCx - GLC) / internal.Kglc / (1 + internal.GLCx / internal.Kglc + GLC / internal.Kglc + internal.Ki * internal.GLCx / internal.Kglc * GLC / internal.Kglc));
    dstatedt[158] = 0 + 1 * internal.cell * internal.Vmax * (s_0767 - GLY * PHO / internal.Keq) / internal.Km0767 / (1 + s_0767 / internal.Km0767 + (1 + GLY / internal.KmGLY) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * GLY / internal.KmGLY / (1 + GLY / internal.KmGLY);
    dstatedt[223] = 0 + 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) - 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) + 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 2 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1) + 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[224] = 0 - 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) + 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) - 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 2 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1) - 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[40] = 0 - 1 * internal.cell * (internal.Vmax * (P2G / internal.Kp2g - PEP / (internal.Kp2g * internal.Keq)) / (1 + P2G / internal.Kp2g + PEP / internal.Kpep)) + 1 * internal.cell * (internal.Vmax * (P3G / internal.Kp3g - P2G / (internal.Kp3g * internal.Keq)) / (1 + P3G / internal.Kp3g + P2G / internal.Kp2g));
    dstatedt[51] = 0 + 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * (internal.Vmax * (P3G / internal.Kp3g - P2G / (internal.Kp3g * internal.Keq)) / (1 + P3G / internal.Kp3g + P2G / internal.Kp2g));
    dstatedt[245] = 0 - 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * (internal.Vmax * (P2G / internal.Kp2g - PEP / (internal.Kp2g * internal.Keq)) / (1 + P2G / internal.Kp2g + PEP / internal.Kpep)) + 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) - 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp)));
    dstatedt[238] = 0 + 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0390 - AMP * PHO / internal.Keq) / internal.Km0390 / (1 + s_0390 / internal.Km0390 + (1 + AMP / internal.KmAMP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0349 - s_0210 * PHO / internal.Keq) / internal.Km0349 / (1 + s_0349 / internal.Km0349 + (1 + s_0210 / internal.Km0210) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ADP * PHO - ATP / internal.Keq) / (internal.KmADP * internal.KmPHO) / ((1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) + 1 + ATP / internal.KmATP - 1) + 1 * internal.cell * internal.kxk * ATP + 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0324 - s_0515 * PHO / internal.Keq) / internal.Km0324 / (1 + s_0324 / internal.Km0324 + (1 + s_0515 / internal.Km0515) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1331 - s_0619 * PHO / internal.Keq) / internal.Km1331 / (1 + s_1331 / internal.Km1331 + (1 + s_0619 / internal.Km0619) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) + 1 * internal.cell * internal.Vmax * (s_0767 - GLY * PHO / internal.Keq) / internal.Km0767 / (1 + s_0767 / internal.Km0767 + (1 + GLY / internal.KmGLY) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1011 - s_1010 * PHO / internal.Keq) / internal.Km1011 / (1 + s_1011 / internal.Km1011 + (1 + s_1010 / internal.Km1010) * (1 + PHO / internal.KmPHO) - 1) + 2 * internal.cell * internal.Vmax * (s_0633 - Math.pow((PHO), (2)) / internal.Keq) / internal.Km0633 / (1 + s_0633 / internal.Km0633 + Math.pow((1 + PHO / internal.KmPHO), (2)) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0126 - s_1153 * PHO / internal.Keq) / internal.Km0126 / (1 + s_0126 / internal.Km0126 + (1 + s_1153 / internal.Km1153) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0467 - s_0526 * PHO / internal.Keq) / internal.Km0467 / (1 + s_0467 / internal.Km0467 + (1 + s_0526 / internal.Km0526) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1238 - s_1045 * PHO / internal.Keq) / internal.Km1238 / (1 + s_1238 / internal.Km1238 + (1 + s_1045 / internal.Km1045) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0409 - PHO * s_1520 / internal.Keq) / internal.Km0409 / (1 + s_0409 / internal.Km0409 + (1 + PHO / internal.KmPHO) * (1 + s_1520 / internal.Km1520) - 1) + 1 * internal.cell * internal.Vmax * (internal.s_1324 - PHO) / internal.Km1324 / (1 + internal.s_1324 / internal.Km1324 + 1 + PHO / internal.KmPHO - 1) + 1 * internal.cell * internal.Vmax * (DHAP - s_1151 * PHO / internal.Keq) / internal.KmDHAP / (1 + DHAP / internal.KmDHAP + (1 + s_1151 / internal.Km1151) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0313 - s_0314 * PHO / internal.Keq) / internal.Km0313 / (1 + s_0313 / internal.Km0313 + (1 + s_0314 / internal.Km0314) * (1 + PHO / internal.KmPHO) - 1) + 58.700009999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux) + 1 * internal.cell * internal.Vmax * (s_1426 - s_1427 * PHO / internal.Keq) / internal.Km1426 / (1 + s_1426 / internal.Km1426 + (1 + s_1427 / internal.Km1427) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[252] = 0 + 1 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((PYR), (2)) - s_0146 * CO2 / internal.Keq) / Math.pow((internal.KmPYR), (2)) / (Math.pow((1 + PYR / internal.KmPYR), (2)) + (1 + s_0146 / internal.Km0146) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * (internal.Vmax * Math.pow((PYR / internal.Kpyr), (internal.nH)) / (1 + Math.pow((PYR / internal.Kpyr), (internal.nH)))) + 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp)));
    dstatedt[0] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0002 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0002 / internal.Km0002) * (1 + s_1538 / internal.Km1538) - 1) - 1.1348 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[1] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0004 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0004 / internal.Km0004) * (1 + s_1538 / internal.Km1538) - 1) - 1.1348 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[2] = 0 - 1 * internal.cell * internal.Vmax * (s_0008 - s_0056 / internal.Keq) / internal.Km0008 / (1 + s_0008 / internal.Km0008 + 1 + s_0056 / internal.Km0056 - 1) + 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[3] = 0 + 1 * internal.cell * internal.Vmax * (s_0165 - s_0009 / internal.Keq) / internal.Km0165 / (1 + s_0165 / internal.Km0165 + 1 + s_0009 / internal.Km0009 - 1) - 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[4] = 0 - 1 * internal.cell * internal.Vmax * (s_0010 - s_0291 * CO2 / internal.Keq) / internal.Km0010 / (1 + s_0010 / internal.Km0010 + (1 + s_0291 / internal.Km0291) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[5] = 0 - 1 * internal.cell * internal.Vmax * (s_0015 - s_0725 * s_0965 / internal.Keq) / internal.Km0015 / (1 + s_0015 / internal.Km0015 + (1 + s_0725 / internal.Km0725) * (1 + s_0965 / internal.Km0965) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[6] = 0 + 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0016 - s_0232 / internal.Keq) / internal.Km0016 / (1 + s_0016 / internal.Km0016 + 1 + s_0232 / internal.Km0232 - 1);
    dstatedt[7] = 0 - 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[8] = 0 + 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1) - 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[9] = 0 - 1 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0033 - s_0025 * s_0750 / internal.Keq) / internal.Km0033 / (1 + s_0033 / internal.Km0033 + (1 + s_0025 / internal.Km0025) * (1 + s_0750 / internal.Km0750) - 1);
    dstatedt[10] = 0 + 1 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1);
    dstatedt[11] = 0 - 1 * internal.cell * internal.Vmax * (s_0033 - s_0025 * s_0750 / internal.Keq) / internal.Km0033 / (1 + s_0033 / internal.Km0033 + (1 + s_0025 / internal.Km0025) * (1 + s_0750 / internal.Km0750) - 1) + 1 * internal.cell * internal.Vmax * (s_0750 * s_1151 - s_0033 / internal.Keq) / (internal.Km0750 * internal.Km1151) / ((1 + s_0750 / internal.Km0750) * (1 + s_1151 / internal.Km1151) + 1 + s_0033 / internal.Km0033 - 1);
    dstatedt[12] = 0 - 1 * internal.cell * internal.Vmax * (s_0037 - s_1059 / internal.Keq) / internal.Km0037 / (1 + s_0037 / internal.Km0037 + 1 + s_1059 / internal.Km1059 - 1) + 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1);
    dstatedt[13] = 0 + 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[14] = 0 + 1 * internal.cell * internal.Vmax * (s_0008 - s_0056 / internal.Keq) / internal.Km0008 / (1 + s_0008 / internal.Km0008 + 1 + s_0056 / internal.Km0056 - 1) - 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1);
    dstatedt[15] = 0 + 1 * internal.cell * internal.Vmax * (s_1194 - s_0061 / internal.Keq) / internal.Km1194 / (1 + s_1194 / internal.Km1194 + 1 + s_0061 / internal.Km0061 - 1) - 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[16] = 0 + 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[17] = 0 - 1 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[18] = 0 + 1 * internal.cell * internal.Vmax * (s_0725 - s_0066 / internal.Keq) / internal.Km0725 / (1 + s_0725 / internal.Km0725 + 1 + s_0066 / internal.Km0066 - 1) - 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1);
    dstatedt[20] = 0 - 1 * internal.cell * internal.Vmax * (s_0076 - s_0086 * CO2 / internal.Keq) / internal.Km0076 / (1 + s_0076 / internal.Km0076 + (1 + s_0086 / internal.Km0086) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_1187 - s_0076 / internal.Keq) / internal.Km1187 / (1 + s_1187 / internal.Km1187 + 1 + s_0076 / internal.Km0076 - 1);
    dstatedt[21] = 0 - 1 * internal.cell * internal.Vmax * (s_0077 - s_0312 / internal.Keq) / internal.Km0077 / (1 + s_0077 / internal.Km0077 + 1 + s_0312 / internal.Km0312 - 1) + 1 * internal.cell * internal.Vmax * (s_0078 - s_0077 / internal.Keq) / internal.Km0078 / (1 + s_0078 / internal.Km0078 + 1 + s_0077 / internal.Km0077 - 1);
    dstatedt[22] = 0 - 1 * internal.cell * internal.Vmax * (s_0078 - s_0077 / internal.Keq) / internal.Km0078 / (1 + s_0078 / internal.Km0078 + 1 + s_0077 / internal.Km0077 - 1) + 1 * internal.cell * internal.Vmax * (s_0326 - s_0078 * s_0633 / internal.Keq) / internal.Km0326 / (1 + s_0326 / internal.Km0326 + (1 + s_0078 / internal.Km0078) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[23] = 0 - 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) + 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[24] = 0 + 1 * internal.cell * internal.Vmax * (s_0076 - s_0086 * CO2 / internal.Keq) / internal.Km0076 / (1 + s_0076 / internal.Km0076 + (1 + s_0086 / internal.Km0086) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1);
    dstatedt[25] = 0 - 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1) - 0.001583 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[26] = 0 + 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[27] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0304 - s_0120 / internal.Keq) / internal.Km0304 / (1 + s_0304 / internal.Km0304 + 1 + s_0120 / internal.Km0120 - 1) - 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[28] = 0 + 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 5.5999999999999999e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[29] = 0 - 1 * internal.cell * internal.Vmax * (s_0126 - s_1153 * PHO / internal.Keq) / internal.Km0126 / (1 + s_0126 / internal.Km0126 + (1 + s_1153 / internal.Km1153) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (G6P - s_0126 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0126 / internal.Km0126 - 1);
    dstatedt[30] = 0 - 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1);
    dstatedt[31] = 0 - 1 * internal.cell * internal.Vmax * (s_0142 - s_0313 * s_0419 / internal.Keq) / internal.Km0142 / (1 + s_0142 / internal.Km0142 + (1 + s_0313 / internal.Km0313) * (1 + s_0419 / internal.Km0419) - 1) + 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[32] = 0 - 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) + 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[33] = 0 - 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((PYR), (2)) - s_0146 * CO2 / internal.Keq) / Math.pow((internal.KmPYR), (2)) / (Math.pow((1 + PYR / internal.KmPYR), (2)) + (1 + s_0146 / internal.Km0146) * (1 + CO2 / internal.KmCO2) - 1);
    dstatedt[34] = 0 + 1 * internal.cell * internal.Vmax * (s_0577 - s_0158 * s_0722 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + (1 + s_0158 / internal.Km0158) * (1 + s_0722 / internal.Km0722) - 1) - 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[35] = 0 - 1 * internal.cell * internal.Vmax * (s_0162 - s_0165 / internal.Keq) / internal.Km0162 / (1 + s_0162 / internal.Km0162 + 1 + s_0165 / internal.Km0165 - 1) + 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[36] = 0 + 1 * internal.cell * internal.Vmax * (s_0162 - s_0165 / internal.Keq) / internal.Km0162 / (1 + s_0162 / internal.Km0162 + 1 + s_0165 / internal.Km0165 - 1) - 1 * internal.cell * internal.Vmax * (s_0165 - s_0009 / internal.Keq) / internal.Km0165 / (1 + s_0165 / internal.Km0165 + 1 + s_0009 / internal.Km0009 - 1);
    dstatedt[37] = 0 - 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) + 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1);
    dstatedt[38] = 0 - 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) + 1 * internal.cell * internal.Vmax * (s_1045 - s_0178 * s_0419 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) - 1);
    dstatedt[39] = 0 + 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) + 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1) + 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1) + 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) + 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1) + 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1);
    dstatedt[41] = 0 + 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1);
    dstatedt[42] = 0 + 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[43] = 0 + 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1);
    dstatedt[44] = 0 - 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1) + 1 * internal.cell * internal.Vmax * (s_0550 - s_0207 / internal.Keq) / internal.Km0550 / (1 + s_0550 / internal.Km0550 + 1 + s_0207 / internal.Km0207 - 1);
    dstatedt[45] = 0 + 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[46] = 0 - 1 * internal.cell * internal.Vmax * (s_0210 - s_0211 / internal.Keq) / internal.Km0210 / (1 + s_0210 / internal.Km0210 + 1 + s_0211 / internal.Km0211 - 1) + 1 * internal.cell * internal.Vmax * (s_0349 - s_0210 * PHO / internal.Keq) / internal.Km0349 / (1 + s_0349 / internal.Km0349 + (1 + s_0210 / internal.Km0210) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[47] = 0 + 1 * internal.cell * internal.Vmax * (s_0210 - s_0211 / internal.Keq) / internal.Km0210 / (1 + s_0210 / internal.Km0210 + 1 + s_0211 / internal.Km0211 - 1) - 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1);
    dstatedt[48] = 0 - 1 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[49] = 0 - 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) + 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[50] = 0 - 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0016 - s_0232 / internal.Keq) / internal.Km0016 / (1 + s_0016 / internal.Km0016 + 1 + s_0232 / internal.Km0232 - 1) - 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1);
    dstatedt[52] = 0 - 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[53] = 0 - 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[54] = 0 + 1 * internal.cell * internal.Vmax * (s_0010 - s_0291 * CO2 / internal.Keq) / internal.Km0010 / (1 + s_0010 / internal.Km0010 + (1 + s_0291 / internal.Km0291) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1);
    dstatedt[55] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[56] = 0 + 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1);
    dstatedt[57] = 0 - 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[58] = 0 - 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[59] = 0 - 1 * internal.cell * internal.Vmax * (s_0299 - s_0403 * s_0725 / internal.Keq) / internal.Km0299 / (1 + s_0299 / internal.Km0299 + (1 + s_0403 / internal.Km0403) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[60] = 0 + 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[61] = 0 - 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[62] = 0 + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[63] = 0 - 1 * internal.cell * internal.Vmax * (s_0304 - s_0120 / internal.Keq) / internal.Km0304 / (1 + s_0304 / internal.Km0304 + 1 + s_0120 / internal.Km0120 - 1) - 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[64] = 0 - 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1);
    dstatedt[65] = 0 + 1 * internal.cell * internal.Vmax * (s_0077 - s_0312 / internal.Keq) / internal.Km0077 / (1 + s_0077 / internal.Km0077 + 1 + s_0312 / internal.Km0312 - 1) - 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1);
    dstatedt[66] = 0 + 1 * internal.cell * internal.Vmax * (s_0142 - s_0313 * s_0419 / internal.Keq) / internal.Km0142 / (1 + s_0142 / internal.Km0142 + (1 + s_0313 / internal.Km0313) * (1 + s_0419 / internal.Km0419) - 1) - 1 * internal.cell * internal.Vmax * (s_0313 - s_0314 * PHO / internal.Keq) / internal.Km0313 / (1 + s_0313 / internal.Km0313 + (1 + s_0314 / internal.Km0314) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[67] = 0 - 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0328), (2)) - s_0314 * s_1405 / internal.Keq) / Math.pow((internal.Km0328), (2)) / (Math.pow((1 + s_0328 / internal.Km0328), (2)) + (1 + s_0314 / internal.Km0314) * (1 + s_1405 / internal.Km1405) - 1) + 1 * internal.cell * internal.Vmax * (s_0313 - s_0314 * PHO / internal.Keq) / internal.Km0313 / (1 + s_0313 / internal.Km0313 + (1 + s_0314 / internal.Km0314) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[68] = 0 + 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[69] = 0 + 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0324 - s_0515 * PHO / internal.Keq) / internal.Km0324 / (1 + s_0324 / internal.Km0324 + (1 + s_0515 / internal.Km0515) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[70] = 0 - 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[71] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_0326 - s_0078 * s_0633 / internal.Keq) / internal.Km0326 / (1 + s_0326 / internal.Km0326 + (1 + s_0078 / internal.Km0078) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[72] = 0 - 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1);
    dstatedt[73] = 0 + 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0328), (2)) - s_0314 * s_1405 / internal.Keq) / Math.pow((internal.Km0328), (2)) / (Math.pow((1 + s_0328 / internal.Km0328), (2)) + (1 + s_0314 / internal.Km0314) * (1 + s_1405 / internal.Km1405) - 1);
    dstatedt[74] = 0 - 1 * internal.cell * internal.Vmax * (s_0335 - s_0340 / internal.Keq) / internal.Km0335 / (1 + s_0335 / internal.Km0335 + 1 + s_0340 / internal.Km0340 - 1) + 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[75] = 0 + 1 * internal.cell * internal.Vmax * (s_0335 - s_0340 / internal.Keq) / internal.Km0335 / (1 + s_0335 / internal.Km0335 + 1 + s_0340 / internal.Km0340 - 1) - 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[76] = 0 + 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0349 - s_0210 * PHO / internal.Keq) / internal.Km0349 / (1 + s_0349 / internal.Km0349 + (1 + s_0210 / internal.Km0210) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[78] = 0 - 1 * internal.cell * internal.Vmax * (s_0362 * s_0529 - s_0373 / internal.Keq) / (internal.Km0362 * internal.Km0529) / ((1 + s_0362 / internal.Km0362) * (1 + s_0529 / internal.Km0529) + 1 + s_0373 / internal.Km0373 - 1) + 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1) + 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[79] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_0373), (2)) - s_0367 * s_0529 / internal.Keq) / Math.pow((internal.Km0373), (2)) / (Math.pow((1 + s_0373 / internal.Km0373), (2)) + (1 + s_0367 / internal.Km0367) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[80] = 0 - 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0373), (2)) - s_0367 * s_0529 / internal.Keq) / Math.pow((internal.Km0373), (2)) / (Math.pow((1 + s_0373 / internal.Km0373), (2)) + (1 + s_0367 / internal.Km0367) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0362 * s_0529 - s_0373 / internal.Keq) / (internal.Km0362 * internal.Km0529) / ((1 + s_0362 / internal.Km0362) * (1 + s_0529 / internal.Km0529) + 1 + s_0373 / internal.Km0373 - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1) - 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[81] = 0 - 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) + 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) - 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[82] = 0 - 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) + 1 * internal.cell * internal.Vmax * (s_1413 - s_0386 * s_1012 / internal.Keq) / internal.Km1413 / (1 + s_1413 / internal.Km1413 + (1 + s_0386 / internal.Km0386) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[83] = 0 - 1 * internal.cell * internal.Vmax * (s_0390 - AMP * PHO / internal.Keq) / internal.Km0390 / (1 + s_0390 / internal.Km0390 + (1 + AMP / internal.KmAMP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[84] = 0 - 1 * internal.cell * internal.Vmax * (s_0393 - AMP * s_0725 / internal.Keq) / internal.Km0393 / (1 + s_0393 / internal.Km0393 + (1 + AMP / internal.KmAMP) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[86] = 0 + 1 * internal.cell * internal.Vmax * (s_0299 - s_0403 * s_0725 / internal.Keq) / internal.Km0299 / (1 + s_0299 / internal.Km0299 + (1 + s_0403 / internal.Km0403) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[87] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 0.45879999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[88] = 0 + 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (s_0409 - PHO * s_1520 / internal.Keq) / internal.Km0409 / (1 + s_0409 / internal.Km0409 + (1 + PHO / internal.KmPHO) * (1 + s_1520 / internal.Km1520) - 1);
    dstatedt[89] = 0 + 1 * internal.cell * internal.Vmax * (s_0142 - s_0313 * s_0419 / internal.Keq) / internal.Km0142 / (1 + s_0142 / internal.Km0142 + (1 + s_0313 / internal.Km0313) * (1 + s_0419 / internal.Km0419) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) + 1 * internal.cell * internal.Vmax * (s_0589 - s_0419 * s_0654 / internal.Keq) / internal.Km0589 / (1 + s_0589 / internal.Km0589 + (1 + s_0419 / internal.Km0419) * (1 + s_0654 / internal.Km0654) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_1045 - s_0178 * s_0419 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) - 1) + 1 * internal.cell * internal.Vmax * (internal.s_0420 - s_0419) / internal.Km0420 / (1 + internal.s_0420 / internal.Km0420 + 1 + s_0419 / internal.Km0419 - 1);
    dstatedt[91] = 0 - 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) + 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1);
    dstatedt[92] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) - 0.16070000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[93] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) - 0.1017 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[94] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) - 0.29749999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[96] = 0 - 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (CO2 - s_0445 / internal.Keq) / internal.KmCO2 / (1 + CO2 / internal.KmCO2 + 1 + s_0445 / internal.Km0445 - 1);
    dstatedt[97] = 0 + 1 * internal.cell * internal.Vmax * (s_0835 - s_0454 / internal.Keq) / internal.Km0835 / (1 + s_0835 / internal.Km0835 + 1 + s_0454 / internal.Km0454 - 1) - 1 * internal.cell * internal.Vmax * (s_0454 - s_0836 / internal.Keq) / internal.Km0454 / (1 + s_0454 / internal.Km0454 + 1 + s_0836 / internal.Km0836 - 1);
    dstatedt[98] = 0 - 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[100] = 0 + 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1) - 1 * internal.cell * internal.Vmax * (s_0467 - s_0526 * PHO / internal.Keq) / internal.Km0467 / (1 + s_0467 / internal.Km0467 + (1 + s_0526 / internal.Km0526) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[101] = 0 + 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1);
    dstatedt[102] = 0 + 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1);
    dstatedt[103] = 0 + 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1);
    dstatedt[104] = 0 - 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_0515 - s_1377 / internal.Keq) / internal.Km0515 / (1 + s_0515 / internal.Km0515 + 1 + s_1377 / internal.Km1377 - 1) + 1 * internal.cell * internal.Vmax * (s_0324 - s_0515 * PHO / internal.Keq) / internal.Km0324 / (1 + s_0324 / internal.Km0324 + (1 + s_0515 / internal.Km0515) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[105] = 0 - 1 * internal.cell * internal.Vmax * (s_0516 - s_0940 / internal.Keq) / internal.Km0516 / (1 + s_0516 / internal.Km0516 + 1 + s_0940 / internal.Km0940 - 1) + 1 * internal.cell * internal.Vmax * (s_0522 - s_0516 / internal.Keq) / internal.Km0522 / (1 + s_0522 / internal.Km0522 + 1 + s_0516 / internal.Km0516 - 1);
    dstatedt[106] = 0 + 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0522 - s_0516 / internal.Keq) / internal.Km0522 / (1 + s_0522 / internal.Km0522 + 1 + s_0516 / internal.Km0516 - 1);
    dstatedt[107] = 0 + 1 * internal.cell * internal.Vmax * (s_0467 - s_0526 * PHO / internal.Keq) / internal.Km0467 / (1 + s_0467 / internal.Km0467 + (1 + s_0526 / internal.Km0526) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1) - 0.044699999999999997 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[108] = 0 + 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) + 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0373), (2)) - s_0367 * s_0529 / internal.Keq) / Math.pow((internal.Km0373), (2)) / (Math.pow((1 + s_0373 / internal.Km0373), (2)) + (1 + s_0367 / internal.Km0367) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0362 * s_0529 - s_0373 / internal.Keq) / (internal.Km0362 * internal.Km0529) / ((1 + s_0362 / internal.Km0362) * (1 + s_0529 / internal.Km0529) + 1 + s_0373 / internal.Km0373 - 1) + 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) + 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) + 3 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 3 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) + 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1) + 1 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[109] = 0 - 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1);
    dstatedt[110] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) - 0.0066 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[111] = 0 + 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0550 - s_0207 / internal.Keq) / internal.Km0550 / (1 + s_0550 / internal.Km0550 + 1 + s_0207 / internal.Km0207 - 1);
    dstatedt[112] = 0 - 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * DHAP - s_1426 / internal.Keq) / (internal.Km0551 * internal.KmDHAP) / ((1 + s_0551 / internal.Km0551) * (1 + DHAP / internal.KmDHAP) + 1 + s_1426 / internal.Km1426 - 1) + 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1);
    dstatedt[116] = 0 + 1 * internal.cell * internal.Vmax * (G6P - s_0567 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0567 / internal.Km0567 - 1) - 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1);
    dstatedt[118] = 0 - 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1) + 1 * internal.cell * internal.Vmax * (s_0574 - s_0573 / internal.Keq) / internal.Km0574 / (1 + s_0574 / internal.Km0574 + 1 + s_0573 / internal.Km0573 - 1);
    dstatedt[119] = 0 + 1 * internal.cell * internal.Vmax * (F6P - s_0574 / internal.Keq) / internal.KmF6P / (1 + F6P / internal.KmF6P + 1 + s_0574 / internal.Km0574 - 1) - 1 * internal.cell * internal.Vmax * (s_0574 - s_0573 / internal.Keq) / internal.Km0574 / (1 + s_0574 / internal.Km0574 + 1 + s_0573 / internal.Km0573 - 1);
    dstatedt[120] = 0 - 1 * internal.cell * internal.Vmax * (s_0577 - s_0158 * s_0722 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + (1 + s_0158 / internal.Km0158) * (1 + s_0722 / internal.Km0722) - 1) + 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0577 - s_1408 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_1408 / internal.Km1408 - 1) - 1 * internal.cell * internal.Vmax * (s_0577 - s_0581 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_0581 / internal.Km0581 - 1);
    dstatedt[121] = 0 + 1 * internal.cell * internal.Vmax * (s_0577 - s_0581 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_0581 / internal.Km0581 - 1) - 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1);
    dstatedt[122] = 0 + 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1);
    dstatedt[123] = 0 + 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1) - 0.0035999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[124] = 0 - 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[125] = 0 + 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1);
    dstatedt[126] = 0 - 1 * internal.cell * internal.Vmax * (s_0589 - s_0419 * s_0654 / internal.Keq) / internal.Km0589 / (1 + s_0589 / internal.Km0589 + (1 + s_0419 / internal.Km0419) * (1 + s_0654 / internal.Km0654) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1) - 0.0023999999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[127] = 0 - 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1.8 * internal.cell * internal.Vmax * (s_0666 * s_0595 - s_0672 / internal.Keq) / (internal.Km0666 * internal.Km0595) / ((1 + s_0666 / internal.Km0666) * (1 + s_0595 / internal.Km0595) + 1 + s_0672 / internal.Km0672 - 1) - 2.6000000000000001 * internal.cell * internal.Vmax * (s_0619 * s_0595 - s_1524 / internal.Keq) / (internal.Km0619 * internal.Km0595) / ((1 + s_0619 / internal.Km0619) * (1 + s_0595 / internal.Km0595) + 1 + s_1524 / internal.Km1524 - 1) - 0.00053559999999999903 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[128] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1);
    dstatedt[129] = 0 - 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) + 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[130] = 0 + 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) - 0.0023999999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[131] = 0 + 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) + 1 * internal.cell * internal.Vmax * (s_1331 - s_0619 * PHO / internal.Keq) / internal.Km1331 / (1 + s_1331 / internal.Km1331 + (1 + s_0619 / internal.Km0619) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1) - 1 * internal.cell * internal.Vmax * (s_0619 * s_0595 - s_1524 / internal.Keq) / (internal.Km0619 * internal.Km0595) / ((1 + s_0619 / internal.Km0619) * (1 + s_0595 / internal.Km0595) + 1 + s_1524 / internal.Km1524 - 1);
    dstatedt[132] = 0 - 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1);
    dstatedt[134] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) + 1 * internal.cell * internal.Vmax * (s_0656 - s_0633 * s_0654 / internal.Keq) / internal.Km0656 / (1 + s_0656 / internal.Km0656 + (1 + s_0633 / internal.Km0633) * (1 + s_0654 / internal.Km0654) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) - 1 * internal.cell * internal.Vmax * (s_0633 - Math.pow((PHO), (2)) / internal.Keq) / internal.Km0633 / (1 + s_0633 / internal.Km0633 + Math.pow((1 + PHO / internal.KmPHO), (2)) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) + 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) + 1 * internal.cell * internal.Vmax * (s_0326 - s_0078 * s_0633 / internal.Keq) / internal.Km0326 / (1 + s_0326 / internal.Km0326 + (1 + s_0078 / internal.Km0078) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) + 2 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) + 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1);
    dstatedt[135] = 0 + 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (s_0644 - s_0645 * s_1107 / internal.Keq) / internal.Km0644 / (1 + s_0644 / internal.Km0644 + (1 + s_0645 / internal.Km0645) * (1 + s_1107 / internal.Km1107) - 1);
    dstatedt[136] = 0 - 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0644 - s_0645 * s_1107 / internal.Keq) / internal.Km0644 / (1 + s_0644 / internal.Km0644 + (1 + s_0645 / internal.Km0645) * (1 + s_1107 / internal.Km1107) - 1);
    dstatedt[137] = 0 + 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1) - 0.0035999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[138] = 0 + 1 * internal.cell * internal.Vmax * (s_0589 - s_0419 * s_0654 / internal.Keq) / internal.Km0589 / (1 + s_0589 / internal.Km0589 + (1 + s_0419 / internal.Km0419) * (1 + s_0654 / internal.Km0654) - 1) + 1 * internal.cell * internal.Vmax * (s_0656 - s_0633 * s_0654 / internal.Keq) / internal.Km0656 / (1 + s_0656 / internal.Km0656 + (1 + s_0633 / internal.Km0633) * (1 + s_0654 / internal.Km0654) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1);
    dstatedt[139] = 0 - 1 * internal.cell * internal.Vmax * (s_0656 - s_0633 * s_0654 / internal.Keq) / internal.Km0656 / (1 + s_0656 / internal.Km0656 + (1 + s_0633 / internal.Km0633) * (1 + s_0654 / internal.Km0654) - 1) + 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[140] = 0 + 1 * internal.cell * internal.Vmax * (s_0700 - s_0657 / internal.Keq) / internal.Km0700 / (1 + s_0700 / internal.Km0700 + 1 + s_0657 / internal.Km0657 - 1) - 9.6000000000000002e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[141] = 0 - 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1) - 0.000125 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[142] = 0 + 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0666 * s_0595 - s_0672 / internal.Keq) / (internal.Km0666 * internal.Km0595) / ((1 + s_0666 / internal.Km0666) * (1 + s_0595 / internal.Km0595) + 1 + s_0672 / internal.Km0672 - 1) - 0.0055999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[143] = 0 + 1 * internal.cell * internal.Vmax * (s_0666 * s_0595 - s_0672 / internal.Keq) / (internal.Km0666 * internal.Km0595) / ((1 + s_0666 / internal.Km0666) * (1 + s_0595 / internal.Km0595) + 1 + s_0672 / internal.Km0672 - 1) - 0.000812 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[145] = 0 - 1 * internal.cell * internal.Vmax * (s_0700 - s_0657 / internal.Keq) / internal.Km0700 / (1 + s_0700 / internal.Km0700 + 1 + s_0657 / internal.Km0657 - 1) + 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) - 0.00011400000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[146] = 0 - 2 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) - 2 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 4 * internal.cell * internal.Vmax * (Math.pow((s_0710), (4)) * s_1275 - Math.pow((s_0709), (4)) / internal.Keq) / (Math.pow((internal.Km0710), (4)) * internal.Km1275) / (Math.pow((1 + s_0710 / internal.Km0710), (4)) * (1 + s_1275 / internal.Km1275) + Math.pow((1 + s_0709 / internal.Km0709), (4)) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1);
    dstatedt[147] = 0 + 2 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 2 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) - 4 * internal.cell * internal.Vmax * (Math.pow((s_0710), (4)) * s_1275 - Math.pow((s_0709), (4)) / internal.Keq) / (Math.pow((internal.Km0710), (4)) * internal.Km1275) / (Math.pow((1 + s_0710 / internal.Km0710), (4)) * (1 + s_1275 / internal.Km1275) + Math.pow((1 + s_0709 / internal.Km0709), (4)) - 1) + 2 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1);
    dstatedt[148] = 0 + 1 * internal.cell * internal.Vmax * (s_0577 - s_0158 * s_0722 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + (1 + s_0158 / internal.Km0158) * (1 + s_0722 / internal.Km0722) - 1) + 1 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1);
    dstatedt[149] = 0 + 1 * internal.cell * internal.Vmax * (s_0299 - s_0403 * s_0725 / internal.Keq) / internal.Km0299 / (1 + s_0299 / internal.Km0299 + (1 + s_0403 / internal.Km0403) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0393 - AMP * s_0725 / internal.Keq) / internal.Km0393 / (1 + s_0393 / internal.Km0393 + (1 + AMP / internal.KmAMP) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0015 - s_0725 * s_0965 / internal.Keq) / internal.Km0015 / (1 + s_0015 / internal.Km0015 + (1 + s_0725 / internal.Km0725) * (1 + s_0965 / internal.Km0965) - 1) - 1 * internal.cell * internal.Vmax * (s_0725 - s_0066 / internal.Keq) / internal.Km0725 / (1 + s_0725 / internal.Km0725 + 1 + s_0066 / internal.Km0066 - 1) + 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1);
    dstatedt[150] = 0 + 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1) - 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[151] = 0 - 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1);
    dstatedt[152] = 0 + 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) - 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[153] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) - 0.10539999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[154] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) - 0.30180000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[155] = 0 + 1 * internal.cell * internal.Vmax * (s_0033 - s_0025 * s_0750 / internal.Keq) / internal.Km0033 / (1 + s_0033 / internal.Km0033 + (1 + s_0025 / internal.Km0025) * (1 + s_0750 / internal.Km0750) - 1) - 1 * internal.cell * internal.Vmax * (s_0750 * s_1151 - s_0033 / internal.Keq) / (internal.Km0750 * internal.Km1151) / ((1 + s_0750 / internal.Km0750) * (1 + s_1151 / internal.Km1151) + 1 + s_0033 / internal.Km0033 - 1);
    dstatedt[156] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) - 0.29039999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[159] = 0 - 1 * internal.cell * internal.Vmax * (s_0767 - GLY * PHO / internal.Keq) / internal.Km0767 / (1 + s_0767 / internal.Km0767 + (1 + GLY / internal.KmGLY) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[160] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0773 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0773 / internal.Km0773) * (1 + s_1538 / internal.Km1538) - 1) - 0.51849999999999996 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[161] = 0 - 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 - s_0779 * s_1458 / internal.Keq) / internal.Km0940 / (1 + s_0940 / internal.Km0940 + (1 + s_0779 / internal.Km0779) * (1 + s_1458 / internal.Km1458) - 1);
    dstatedt[162] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) - 0.045999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[163] = 0 - 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1) - 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1);
    dstatedt[164] = 0 - 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1);
    dstatedt[165] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) - 0.066299999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[166] = 0 - 1 * internal.cell * internal.Vmax * (s_0835 - s_0454 / internal.Keq) / internal.Km0835 / (1 + s_0835 / internal.Km0835 + 1 + s_0454 / internal.Km0454 - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1);
    dstatedt[167] = 0 + 1 * internal.cell * internal.Vmax * (s_0454 - s_0836 / internal.Keq) / internal.Km0454 / (1 + s_0454 / internal.Km0454 + 1 + s_0836 / internal.Km0836 - 1) - 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1);
    dstatedt[168] = 0 - 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[169] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) - 0.19270000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[170] = 0 - 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1) + 1 * internal.cell * internal.Vmax * (s_1365 - s_0849 / internal.Keq) / internal.Km1365 / (1 + s_1365 / internal.Km1365 + 1 + s_0849 / internal.Km0849 - 1);
    dstatedt[171] = 0 + 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1) - 0.00051707999999999995 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[172] = 0 + 1 * internal.cell * internal.Vmax * (s_0516 - s_0940 / internal.Keq) / internal.Km0516 / (1 + s_0516 / internal.Km0516 + 1 + s_0940 / internal.Km0940 - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 - s_0779 * s_1458 / internal.Keq) / internal.Km0940 / (1 + s_0940 / internal.Km0940 + (1 + s_0779 / internal.Km0779) * (1 + s_1458 / internal.Km1458) - 1);
    dstatedt[173] = 0 - 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) - 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_0943 - s_1376 / internal.Keq) / internal.Km0943 / (1 + s_0943 / internal.Km0943 + 1 + s_1376 / internal.Km1376 - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[174] = 0 - 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) + 1 * internal.cell * internal.Vmax * (s_1377 - CO2 * s_0951 / internal.Keq) / internal.Km1377 / (1 + s_1377 / internal.Km1377 + (1 + CO2 / internal.KmCO2) * (1 + s_0951 / internal.Km0951) - 1);
    dstatedt[175] = 0 + 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) - 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[176] = 0 - 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1);
    dstatedt[177] = 0 + 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[178] = 0 + 1 * internal.cell * internal.Vmax * (s_0015 - s_0725 * s_0965 / internal.Keq) / internal.Km0015 / (1 + s_0015 / internal.Km0015 + (1 + s_0725 / internal.Km0725) * (1 + s_0965 / internal.Km0965) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[179] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[180] = 0 - 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[181] = 0 + 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[182] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[183] = 0 + 1 * internal.cell * internal.Vmax * (s_1012 * s_1039 - s_0980 / internal.Keq) / (internal.Km1012 * internal.Km1039) / ((1 + s_1012 / internal.Km1012) * (1 + s_1039 / internal.Km1039) + 1 + s_0980 / internal.Km0980 - 1) - 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) + 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1);
    dstatedt[184] = 0 + 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) - 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[185] = 0 - 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) + 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1) + 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1) - 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1) - 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) + 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1) - 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1);
    dstatedt[186] = 0 - 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1);
    dstatedt[187] = 0 + 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) - 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1045 - AcAld * s_1003 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + AcAld / internal.KmAcAld) * (1 + s_1003 / internal.Km1003) - 1);
    dstatedt[188] = 0 + 1 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1);
    dstatedt[189] = 0 - 1 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1011 - s_1010 * PHO / internal.Keq) / internal.Km1011 / (1 + s_1011 / internal.Km1011 + (1 + s_1010 / internal.Km1010) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[190] = 0 - 1 * internal.cell * internal.Vmax * (s_1011 - s_1010 * PHO / internal.Keq) / internal.Km1011 / (1 + s_1011 / internal.Km1011 + (1 + s_1010 / internal.Km1010) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1);
    dstatedt[191] = 0 + 1 * internal.cell * internal.Vmax * (s_1413 - s_0386 * s_1012 / internal.Keq) / internal.Km1413 / (1 + s_1413 / internal.Km1413 + (1 + s_0386 / internal.Km0386) * (1 + s_1012 / internal.Km1012) - 1) - 1 * internal.cell * internal.Vmax * (s_1012 * s_1039 - s_0980 / internal.Keq) / (internal.Km1012 * internal.Km1039) / ((1 + s_1012 / internal.Km1012) * (1 + s_1039 / internal.Km1039) + 1 + s_0980 / internal.Km0980 - 1) - 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[192] = 0 + 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1);
    dstatedt[193] = 0 + 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1);
    dstatedt[194] = 0 + 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1);
    dstatedt[195] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[196] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) + 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1);
    dstatedt[197] = 0 + 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1);
    dstatedt[198] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[199] = 0 - 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[200] = 0 - 1 * internal.cell * internal.Vmax * (s_1012 * s_1039 - s_0980 / internal.Keq) / (internal.Km1012 * internal.Km1039) / ((1 + s_1012 / internal.Km1012) * (1 + s_1039 / internal.Km1039) + 1 + s_0980 / internal.Km0980 - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1) - 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) - 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1);
    dstatedt[201] = 0 - 1 * internal.cell * internal.Vmax * (s_1045 - s_0178 * s_0419 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) - 1) - 1 * internal.cell * internal.Vmax * (s_1045 - AcAld * s_1003 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + AcAld / internal.KmAcAld) * (1 + s_1003 / internal.Km1003) - 1) + 1 * internal.cell * internal.Vmax * (s_1238 - s_1045 * PHO / internal.Keq) / internal.Km1238 / (1 + s_1238 / internal.Km1238 + (1 + s_1045 / internal.Km1045) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1);
    dstatedt[202] = 0 + 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1);
    dstatedt[203] = 0 + 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1);
    dstatedt[204] = 0 + 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1);
    dstatedt[205] = 0 - 1 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_0037 - s_1059 / internal.Keq) / internal.Km0037 / (1 + s_0037 / internal.Km0037 + 1 + s_1059 / internal.Km1059 - 1) - 3.1999999999999999e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[206] = 0 + 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1);
    dstatedt[207] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) + 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1);
    dstatedt[208] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) - 0.2964 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[209] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) - 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1);
    dstatedt[210] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) - 0.28620000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[211] = 0 + 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) - 3 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) - 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 3 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) - 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1);
    dstatedt[212] = 0 + 1 * internal.cell * internal.Vmax * (s_0644 - s_0645 * s_1107 / internal.Keq) / internal.Km0644 / (1 + s_0644 / internal.Km0644 + (1 + s_0645 / internal.Km0645) * (1 + s_1107 / internal.Km1107) - 1) - 0.80789999999999995 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[213] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) - 0.050700000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[214] = 0 - 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0750 * s_1151 - s_0033 / internal.Keq) / (internal.Km0750 * internal.Km1151) / ((1 + s_0750 / internal.Km0750) * (1 + s_1151 / internal.Km1151) + 1 + s_0033 / internal.Km0033 - 1) + 1 * internal.cell * internal.Vmax * (DHAP - s_1151 * PHO / internal.Keq) / internal.KmDHAP / (1 + DHAP / internal.KmDHAP + (1 + s_1151 / internal.Km1151) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[215] = 0 + 1 * internal.cell * internal.Vmax * (s_0126 - s_1153 * PHO / internal.Keq) / internal.Km0126 / (1 + s_0126 / internal.Km0126 + (1 + s_1153 / internal.Km1153) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1);
    dstatedt[216] = 0 + 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1);
    dstatedt[217] = 0 + 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1);
    dstatedt[218] = 0 + 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1);
    dstatedt[219] = 0 + 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) - 1 * internal.cell * internal.Vmax * (s_1187 - s_0076 / internal.Keq) / internal.Km1187 / (1 + s_1187 / internal.Km1187 + 1 + s_0076 / internal.Km0076 - 1);
    dstatedt[220] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) - 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[221] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1);
    dstatedt[222] = 0 + 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_1194 - s_0061 / internal.Keq) / internal.Km1194 / (1 + s_1194 / internal.Km1194 + 1 + s_0061 / internal.Km0061 - 1);
    dstatedt[225] = 0 + 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) + 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1) + 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1) + 3 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) + 3 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) + 2 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) + 6 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 2 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 6 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) + 2 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) - 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1) + 2 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1) + 3 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
    dstatedt[226] = 0 - 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) - 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1) - 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1) - 3 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) - 3 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) - 2 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) - 6 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) - 2 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 6 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) - 2 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) + 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1) - 2 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1) - 3 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
    dstatedt[227] = 0 - 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1) - 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[228] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) - 1 * internal.cell * internal.Vmax * (s_1238 - s_1045 * PHO / internal.Keq) / internal.Km1238 / (1 + s_1238 / internal.Km1238 + (1 + s_1045 / internal.Km1045) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[229] = 0 - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1);
    dstatedt[230] = 0 - 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1);
    dstatedt[231] = 0 - 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) + 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[232] = 0 + 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) - 1 * internal.cell * internal.Vmax * (s_1270 - CO2 * s_1545 / internal.Keq) / internal.Km1270 / (1 + s_1270 / internal.Km1270 + (1 + CO2 / internal.KmCO2) * (1 + s_1545 / internal.Km1545) - 1);
    dstatedt[233] = 0 - 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[234] = 0 - 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1) - 3 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 3 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_0710), (4)) * s_1275 - Math.pow((s_0709), (4)) / internal.Keq) / (Math.pow((internal.Km0710), (4)) * internal.Km1275) / (Math.pow((1 + s_0710 / internal.Km0710), (4)) * (1 + s_1275 / internal.Km1275) + Math.pow((1 + s_0709 / internal.Km0709), (4)) - 1) - 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (internal.s_1277 - s_1275) / internal.Km1277 / (1 + internal.s_1277 / internal.Km1277 + 1 + s_1275 / internal.Km1275 - 1);
    dstatedt[235] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1);
    dstatedt[236] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) - 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[237] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) - 0.13389999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[239] = 0 + 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) - 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_1331 - s_0619 * PHO / internal.Keq) / internal.Km1331 / (1 + s_1331 / internal.Km1331 + (1 + s_0619 / internal.Km0619) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[240] = 0 - 1 * internal.cell * internal.Vmax * (s_1337 - CO2 * s_1351 / internal.Keq) / internal.Km1337 / (1 + s_1337 / internal.Km1337 + (1 + CO2 / internal.KmCO2) * (1 + s_1351 / internal.Km1351) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1) - 0.00038999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[241] = 0 - 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[242] = 0 + 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[243] = 0 + 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) - 0.0028800000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[244] = 0 - 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1337 - CO2 * s_1351 / internal.Keq) / internal.Km1337 / (1 + s_1337 / internal.Km1337 + (1 + CO2 / internal.KmCO2) * (1 + s_1351 / internal.Km1351) - 1) - 0.00069700000000000003 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[246] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[247] = 0 - 1 * internal.cell * internal.Vmax * (s_1365 - s_0849 / internal.Keq) / internal.Km1365 / (1 + s_1365 / internal.Km1365 + 1 + s_0849 / internal.Km0849 - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[248] = 0 - 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) + 1 * internal.cell * internal.Vmax * (s_0943 - s_1376 / internal.Keq) / internal.Km0943 / (1 + s_0943 / internal.Km0943 + 1 + s_1376 / internal.Km1376 - 1);
    dstatedt[249] = 0 + 1 * internal.cell * internal.Vmax * (s_0515 - s_1377 / internal.Keq) / internal.Km0515 / (1 + s_0515 / internal.Km0515 + 1 + s_1377 / internal.Km1377 - 1) - 1 * internal.cell * internal.Vmax * (s_1377 - CO2 * s_0951 / internal.Keq) / internal.Km1377 / (1 + s_1377 / internal.Km1377 + (1 + CO2 / internal.KmCO2) * (1 + s_0951 / internal.Km0951) - 1) - 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[250] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) - 0.16470000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[251] = 0 - 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) - 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1);
    dstatedt[253] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_0328), (2)) - s_0314 * s_1405 / internal.Keq) / Math.pow((internal.Km0328), (2)) / (Math.pow((1 + s_0328 / internal.Km0328), (2)) + (1 + s_0314 / internal.Km0314) * (1 + s_1405 / internal.Km1405) - 1) - 0.00098999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[254] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1) + 1 * internal.cell * internal.Vmax * (s_0577 - s_1408 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_1408 / internal.Km1408 - 1) - 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1);
    dstatedt[255] = 0 - 1 * internal.cell * internal.Vmax * (s_1413 - s_0386 * s_1012 / internal.Keq) / internal.Km1413 / (1 + s_1413 / internal.Km1413 + (1 + s_0386 / internal.Km0386) * (1 + s_1012 / internal.Km1012) - 1) + 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[256] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) - 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[257] = 0 + 1 * internal.cell * internal.Vmax * (s_0551 * DHAP - s_1426 / internal.Keq) / (internal.Km0551 * internal.KmDHAP) / ((1 + s_0551 / internal.Km0551) * (1 + DHAP / internal.KmDHAP) + 1 + s_1426 / internal.Km1426 - 1) - 1 * internal.cell * internal.Vmax * (s_1426 - s_1427 * PHO / internal.Keq) / internal.Km1426 / (1 + s_1426 / internal.Km1426 + (1 + s_1427 / internal.Km1427) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[258] = 0 - 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) + 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1) + 1 * internal.cell * internal.Vmax * (s_1426 - s_1427 * PHO / internal.Keq) / internal.Km1426 / (1 + s_1426 / internal.Km1426 + (1 + s_1427 / internal.Km1427) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[259] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) - 0.18540000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[260] = 0 + 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[261] = 0 + 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) - 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[262] = 0 - 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1);
    dstatedt[263] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1);
    dstatedt[264] = 0 - 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1);
    dstatedt[265] = 0 + 1 * internal.cell * internal.Vmax * (s_0940 - s_0779 * s_1458 / internal.Keq) / internal.Km0940 / (1 + s_0940 / internal.Km0940 + (1 + s_0779 / internal.Km0779) * (1 + s_1458 / internal.Km1458) - 1) - 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1) - 1 * internal.cell * internal.Vmax * s_1458 / internal.Km1458 / (1 + s_1458 / internal.Km1458);
    dstatedt[266] = 0 - 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (internal.s_1468 - s_1467) / internal.Km1468 / (1 + internal.s_1468 / internal.Km1468 + 1 + s_1467 / internal.Km1467 - 1) - 0.02 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[267] = 0 + 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[268] = 0 + 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[269] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) - 0.19139999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[270] = 0 + 1 * internal.cell * internal.Vmax * (s_0409 - PHO * s_1520 / internal.Keq) / internal.Km0409 / (1 + s_0409 / internal.Km0409 + (1 + PHO / internal.KmPHO) * (1 + s_1520 / internal.Km1520) - 1) - 0.023400000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[271] = 0 - 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) + 1 * internal.cell * internal.Vmax * (s_0619 * s_0595 - s_1524 / internal.Keq) / (internal.Km0619 * internal.Km0595) / ((1 + s_0619 / internal.Km0619) * (1 + s_0595 / internal.Km0595) + 1 + s_1524 / internal.Km1524 - 1) - 0.00078100000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[272] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) - 0.028400000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[273] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) - 0.10199999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[274] = 0 - 1 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1) + 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1);
    dstatedt[275] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1) - 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1);
    dstatedt[276] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0002 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0002 / internal.Km0002) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (s_1543 - s_0004 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0004 / internal.Km0004) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (s_1543 - s_0773 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0773 / internal.Km0773) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1);
    dstatedt[277] = 0 - 1 * internal.cell * internal.Vmax * (s_1543 - s_0002 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0002 / internal.Km0002) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (s_1543 - s_0004 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0004 / internal.Km0004) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (s_1543 - s_0773 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0773 / internal.Km0773) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1);
    dstatedt[278] = 0 + 1 * internal.cell * internal.Vmax * (s_1270 - CO2 * s_1545 / internal.Keq) / internal.Km1270 / (1 + s_1270 / internal.Km1270 + (1 + CO2 / internal.KmCO2) * (1 + s_1545 / internal.Km1545) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1) - 0.059900000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[279] = 0 - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) - 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1);
    dstatedt[280] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) - 0.2646 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[281] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1);
    dstatedt[282] = 0 + 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1) - 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1) - 1.5e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[283] = 0 + 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1);
    dstatedt[284] = 0 + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1);
    dstatedt[285] = 0 - 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1);
    dstatedt[286] = 0 + 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1);
    dstatedt[287] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 0.45879999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[288] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) + 0.16070000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[289] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) + 0.1017 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[290] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) + 0.29749999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[291] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) + 0.0066 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[292] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) + 0.10539999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[293] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 0.30180000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[294] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) + 0.29039999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[295] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) + 0.066299999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[296] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) + 0.19270000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[297] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) + 0.2964 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[298] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 0.28620000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[299] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) + 0.050700000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[300] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) + 0.13389999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[301] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 0.16470000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[302] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) + 0.18540000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[303] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) + 0.19139999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[304] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) + 0.028400000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[305] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) + 0.10199999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[306] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) + 0.2646 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[307] = 0 - 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
    dstatedt[308] = 0 + 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
  }
  names() {
    return this.metadata.ynames.slice(1);
  }
  updateMetadata() {
    this.metadata = {};
    var internal = this.internal;
    this.metadata.ynames = ["t", "s_0002", "s_0004", "s_0008", "s_0009", "s_0010", "s_0015", "s_0016", "s_0018", "s_0019", "s_0025", "s_0028", "s_0033", "s_0037", "s_0039", "s_0056", "s_0061", "s_0062", "s_0063", "s_0066", "BPG", "s_0076", "s_0077", "s_0078", "s_0082", "s_0086", "s_0089", "s_0118", "s_0120", "s_0122", "s_0126", "s_0141", "s_0142", "s_0145", "s_0146", "s_0158", "s_0162", "s_0165", "s_0176", "s_0178", "s_0180", "P2G", "s_0190", "s_0201", "s_0204", "s_0207", "s_0209", "s_0210", "s_0211", "s_0218", "s_0231", "s_0232", "P3G", "s_0261", "s_0262", "s_0291", "s_0295", "s_0296", "s_0297", "s_0298", "s_0299", "s_0300", "s_0301", "s_0302", "s_0304", "s_0306", "s_0312", "s_0313", "s_0314", "s_0322", "s_0324", "s_0325", "s_0326", "s_0327", "s_0328", "s_0335", "s_0340", "s_0349", "AcAld", "s_0362", "s_0367", "s_0373", "s_0380", "s_0386", "s_0390", "s_0393", "ADP", "s_0403", "s_0404", "s_0409", "s_0419", "AMP", "s_0427", "s_0428", "s_0430", "s_0432", "ATP", "s_0445", "s_0454", "s_0455", "CO2", "s_0467", "s_0471", "s_0478", "s_0505", "s_0515", "s_0516", "s_0522", "s_0526", "s_0529", "s_0539", "s_0542", "s_0550", "s_0551", "F16bP", "F6P", "GLC", "s_0567", "G6P", "s_0573", "s_0574", "s_0577", "s_0581", "s_0582", "s_0584", "s_0586", "s_0587", "s_0589", "s_0595", "s_0602", "s_0613", "s_0615", "s_0619", "s_0625", "DHAP", "s_0633", "s_0644", "s_0645", "s_0649", "s_0654", "s_0656", "s_0657", "s_0662", "s_0666", "s_0672", "EtOH", "s_0700", "s_0709", "s_0710", "s_0722", "s_0725", "s_0739", "s_0743", "s_0745", "s_0747", "s_0748", "s_0750", "s_0757", "GAP", "GLY", "s_0767", "s_0773", "s_0779", "s_0782", "s_0785", "s_0816", "s_0832", "s_0835", "s_0836", "s_0841", "s_0847", "s_0849", "s_0897", "s_0940", "s_0943", "s_0951", "s_0953", "s_0955", "s_0959", "s_0965", "s_0969", "s_0973", "s_0978", "s_0979", "s_0980", "s_0981", "s_0991", "s_0999", "s_1003", "s_1006", "s_1010", "s_1011", "s_1012", "s_1014", "s_1016", "s_1021", "s_1025", "s_1029", "s_1032", "s_1035", "s_1038", "s_1039", "s_1045", "s_1048", "s_1051", "s_1056", "s_1059", "s_1065", "s_1073", "s_1077", "s_1084", "s_1099", "s_1101", "s_1107", "s_1148", "s_1151", "s_1153", "s_1161", "s_1176", "s_1182", "s_1187", "s_1191", "s_1192", "s_1194", "NAD", "NADH", "s_1207", "s_1212", "s_1233", "s_1238", "s_1255", "s_1266", "s_1269", "s_1270", "s_1271", "s_1275", "s_1286", "s_1302", "s_1314", "PHO", "s_1331", "s_1337", "s_1342", "s_1343", "s_1346", "s_1351", "PEP", "s_1364", "s_1365", "s_1376", "s_1377", "s_1379", "s_1386", "PYR", "s_1405", "s_1408", "s_1413", "s_1416", "s_1426", "s_1427", "s_1428", "s_1429", "s_1445", "s_1447", "s_1449", "s_1454", "s_1458", "s_1467", "s_1469", "s_1487", "s_1491", "s_1520", "s_1524", "s_1527", "s_1533", "s_1535", "s_1537", "s_1538", "s_1543", "s_1545", "s_1559", "s_1561", "s_1565", "s_1569", "s_1576", "s_1577", "s_1578", "s_1579", "s_1582", "s_1583", "s_1585", "s_1587", "s_1589", "s_1590", "s_1591", "s_1593", "s_1594", "s_1596", "s_1598", "s_1600", "s_1602", "s_1604", "s_1606", "s_1607", "s_1608", "s_1610", "s_1612", "s_1614", "s_1616", "s_1620", "F26bP"];
    this.metadata.internalOrder = {AcAld_init: null, ADP_init: null, AMP_init: null, ATP_init: null, BPG_init: null, Camp: null, Catp: null, cell: null, Cf16: null, Cf26: null, Ciatp: null, CO2_init: null, DHAP_init: null, e_0001: null, e_0002: null, e_0003: null, e_0004: null, e_0005: null, e_0006: null, e_0007: null, e_0008: null, e_0010: null, e_0011: null, e_0012: null, e_0017: null, e_0020: null, e_0022: null, e_0025: null, e_0026: null, e_0028: null, e_0030: null, e_0031: null, e_0033: null, e_0038: null, e_0045: null, e_0051: null, e_0053: null, e_0054: null, e_0057: null, e_0062: null, e_0063: null, e_0064: null, e_0065: null, e_0066: null, e_0069: null, e_0071: null, e_0074: null, e_0079: null, e_0084: null, e_0087: null, e_0088: null, e_0089: null, e_0090: null, e_0091: null, e_0092: null, e_0100: null, e_0101: null, e_0103: null, e_0106: null, e_0107: null, e_0109: null, e_0111: null, e_0113: null, e_0117: null, e_0122: null, e_0124: null, e_0127: null, e_0128: null, e_0129: null, e_0133: null, e_0134: null, e_0135: null, e_0136: null, e_0137: null, e_0141: null, e_0142: null, e_0146: null, e_0151: null, e_0152: null, e_0154: null, e_0155: null, e_0160: null, e_0165: null, e_0167: null, e_0168: null, e_0169: null, e_0171: null, e_0175: null, e_0176: null, e_0177: null, e_0179: null, e_0182: null, e_0183: null, e_0186: null, e_0188: null, e_0194: null, e_0196: null, e_0202: null, e_0203: null, e_0204: null, e_0207: null, e_0213: null, e_0214: null, e_0218: null, e_0219: null, e_0220: null, e_0223: null, e_0231: null, e_0234: null, e_0237: null, e_0239: null, e_0243: null, e_0249: null, e_0250: null, e_0251: null, e_0255: null, e_0260: null, e_0263: null, e_0268: null, e_0269: null, e_0271: null, e_0273: null, e_0276: null, e_0278: null, e_0280: null, e_0281: null, e_0283: null, e_0288: null, e_0289: null, e_0290: null, e_0291: null, e_0293: null, e_0295: null, e_0296: null, e_0297: null, e_0298: null, e_0299: null, e_0303: null, e_0311: null, e_0312: null, e_0313: null, e_0314: null, e_0317: null, e_0320: null, e_0321: null, e_0322: null, e_0325: null, e_0326: null, e_0328: null, e_0329: null, e_0330: null, e_0334: null, e_0340: null, e_0342: null, e_0343: null, e_0346: null, e_0347: null, e_0348: null, e_0352: null, e_0353: null, e_0355: null, e_0356: null, e_0362: null, e_0364: null, e_0365: null, e_0367: null, e_0368: null, e_0370: null, e_0372: null, e_0376: null, e_0379: null, e_0380: null, e_0381: null, e_0382: null, e_0385: null, e_0387: null, e_0389: null, e_0390: null, e_0392: null, e_0396: null, e_0398: null, e_0401: null, e_0404: null, e_0405: null, e_0407: null, e_0409: null, e_0417: null, e_0418: null, e_0422: null, e_0424: null, e_0425: null, e_0426: null, e_0427: null, e_0428: null, e_0429: null, e_0431: null, e_0432: null, e_0434: null, e_0435: null, e_0436: null, e_0440: null, e_0447: null, e_0448: null, e_0452: null, e_0453: null, e_0454: null, e_0455: null, e_0456: null, e_0457: null, e_0458: null, e_0462: null, e_0465: null, e_0466: null, e_0467: null, e_0470: null, e_0472: null, e_0475: null, e_0476: null, e_0489: null, e_0492: null, e_0494: null, e_0495: null, e_0496: null, e_0499: null, e_0506: null, e_0508: null, e_0510: null, e_0512: null, e_0514: null, e_0515: null, e_0525: null, e_0528: null, e_0531: null, e_0536: null, e_0540: null, e_0541: null, e_0542: null, e_0544: null, e_0545: null, e_0547: null, e_0548: null, e_0549: null, e_0550: null, e_0556: null, e_0557: null, e_0558: null, e_0559: null, e_0561: null, e_0565: null, e_0567: null, e_0568: null, e_0569: null, e_0571: null, e_0574: null, e_0576: null, e_0578: null, e_0579: null, e_0581: null, e_0582: null, e_0585: null, e_0586: null, e_0588: null, e_0591: null, e_0594: null, e_0601: null, e_0603: null, e_0607: null, e_0610: null, e_0611: null, e_0612: null, e_0613: null, e_0615: null, e_0619: null, e_0621: null, e_0629: null, e_0631: null, e_0632: null, e_0633: null, e_0636: null, e_0638: null, e_0639: null, e_0642: null, e_0644: null, e_0647: null, e_0658: null, e_0667: null, e_0671: null, e_0674: null, e_0675: null, e_0682: null, e_0684: null, e_0685: null, e_0686: null, e_0687: null, e_0690: null, e_0692: null, e_0693: null, e_0695: null, e_0697: null, e_0698: null, e_0699: null, e_0704: null, e_0705: null, e_0708: null, e_0709: null, e_0711: null, e_0712: null, e_0716: null, e_0727: null, e_0729: null, e_0730: null, e_0733: null, e_0734: null, e_0736: null, e_0740: null, e_0741: null, e_0742: null, e_0743: null, e_0744: null, e_0745: null, e_0746: null, e_0747: null, e_0750: null, e_0752: null, e_0753: null, e_0754: null, e_0755: null, e_0757: null, e_0761: null, e_0762: null, e_0763: null, e_0765: null, e_0769: null, e_0771: null, e_0774: null, e_0778: null, e_0788: null, e_0791: null, e_0792: null, e_0793: null, e_0799: null, e_0800: null, e_0802: null, e_0805: null, e_0808: null, e_0812: null, e_0813: null, e_0826: null, e_0827: null, e_0829: null, e_0830: null, e_0832: null, e_0834: null, e_0836: null, e_0838: null, e_0840: null, e_0841: null, e_0842: null, e_0846: null, e_0848: null, e_0850: null, e_0851: null, e_0852: null, e_0855: null, e_0860: null, e_0862: null, e_0867: null, e_0869: null, e_0875: null, e_0880: null, e_0883: null, e_0884: null, e_0888: null, e_0889: null, e_0890: null, e_0892: null, e_0894: null, e_0895: null, e_0898: null, e_0903: null, e_0904: null, e_0911: null, e_0913: null, e_0915: null, e_0922: null, e_0924: null, e_0926: null, e_0934: null, e_0935: null, e_0940: null, e_0944: null, e_0947: null, e_0950: null, e_0953: null, e_0955: null, e_0956: null, e_0959: null, e_0962: null, e_0963: null, e_0964: null, e_0970: null, e_0973: null, e_0975: null, e_0976: null, e_0978: null, e_0980: null, ep0002: null, ep0004: null, ep0089: null, ep0122: null, ep0404: null, ep0428: null, ep0430: null, ep0432: null, ep0526: null, ep0542: null, ep0584: null, ep0589: null, ep0595: null, ep0615: null, ep0649: null, ep0657: null, ep0662: null, ep0666: null, ep0672: null, ep0700: null, ep0747: null, ep0748: null, ep0757: null, ep0773: null, ep0782: null, ep0832: null, ep0847: null, ep0897: null, ep1059: null, ep1077: null, ep1099: null, ep1107: null, ep1148: null, ep1314: null, ep1337: null, ep1346: null, ep1351: null, ep1379: null, ep1405: null, ep1428: null, ep1467: null, ep1491: null, ep1520: null, ep1524: null, ep1527: null, ep1533: null, ep1545: null, ep1561: null, ep1569: null, epAMP: null, epATP: null, EtOH_init: null, extracellular: null, F16bP_init: null, F26bP_init: null, F6P_init: null, FLUX_VALUE: null, G6P_init: null, GAP_init: null, GLC_init: null, GLCx: null, GLY_init: null, gR: null, ic0002: null, ic0004: null, ic0089: null, ic0122: null, ic0404: null, ic0428: null, ic0430: null, ic0432: null, ic0526: null, ic0542: null, ic0584: null, ic0589: null, ic0595: null, ic0615: null, ic0649: null, ic0657: null, ic0662: null, ic0666: null, ic0672: null, ic0700: null, ic0747: null, ic0748: null, ic0757: null, ic0773: null, ic0782: null, ic0832: null, ic0847: null, ic0897: null, ic1059: null, ic1077: null, ic1099: null, ic1107: null, ic1148: null, ic1314: null, ic1337: null, ic1346: null, ic1351: null, ic1379: null, ic1405: null, ic1428: null, ic1467: null, ic1491: null, ic1520: null, ic1524: null, ic1527: null, ic1533: null, ic1545: null, ic1561: null, ic1569: null, icAMP: null, icATP: null, initial_AcAld: null, initial_ADP: null, initial_AMP: null, initial_ATP: null, initial_BPG: null, initial_CO2: null, initial_DHAP: null, initial_EtOH: null, initial_F16bP: null, initial_F26bP: null, initial_F6P: null, initial_G6P: null, initial_GAP: null, initial_GLC: null, initial_GLY: null, initial_NAD: null, initial_NADH: null, initial_P2G: null, initial_P3G: null, initial_PEP: null, initial_PHO: null, initial_PYR: null, initial_s_0002: null, initial_s_0004: null, initial_s_0008: null, initial_s_0009: null, initial_s_0010: null, initial_s_0015: null, initial_s_0016: null, initial_s_0018: null, initial_s_0019: null, initial_s_0025: null, initial_s_0028: null, initial_s_0033: null, initial_s_0037: null, initial_s_0039: null, initial_s_0056: null, initial_s_0061: null, initial_s_0062: null, initial_s_0063: null, initial_s_0066: null, initial_s_0076: null, initial_s_0077: null, initial_s_0078: null, initial_s_0082: null, initial_s_0086: null, initial_s_0089: null, initial_s_0118: null, initial_s_0120: null, initial_s_0122: null, initial_s_0126: null, initial_s_0141: null, initial_s_0142: null, initial_s_0145: null, initial_s_0146: null, initial_s_0158: null, initial_s_0162: null, initial_s_0165: null, initial_s_0176: null, initial_s_0178: null, initial_s_0180: null, initial_s_0190: null, initial_s_0201: null, initial_s_0204: null, initial_s_0207: null, initial_s_0209: null, initial_s_0210: null, initial_s_0211: null, initial_s_0218: null, initial_s_0231: null, initial_s_0232: null, initial_s_0261: null, initial_s_0262: null, initial_s_0291: null, initial_s_0295: null, initial_s_0296: null, initial_s_0297: null, initial_s_0298: null, initial_s_0299: null, initial_s_0300: null, initial_s_0301: null, initial_s_0302: null, initial_s_0304: null, initial_s_0306: null, initial_s_0312: null, initial_s_0313: null, initial_s_0314: null, initial_s_0322: null, initial_s_0324: null, initial_s_0325: null, initial_s_0326: null, initial_s_0327: null, initial_s_0328: null, initial_s_0335: null, initial_s_0340: null, initial_s_0349: null, initial_s_0362: null, initial_s_0367: null, initial_s_0373: null, initial_s_0380: null, initial_s_0386: null, initial_s_0390: null, initial_s_0393: null, initial_s_0403: null, initial_s_0404: null, initial_s_0409: null, initial_s_0419: null, initial_s_0427: null, initial_s_0428: null, initial_s_0430: null, initial_s_0432: null, initial_s_0445: null, initial_s_0454: null, initial_s_0455: null, initial_s_0467: null, initial_s_0471: null, initial_s_0478: null, initial_s_0505: null, initial_s_0515: null, initial_s_0516: null, initial_s_0522: null, initial_s_0526: null, initial_s_0529: null, initial_s_0539: null, initial_s_0542: null, initial_s_0550: null, initial_s_0551: null, initial_s_0567: null, initial_s_0573: null, initial_s_0574: null, initial_s_0577: null, initial_s_0581: null, initial_s_0582: null, initial_s_0584: null, initial_s_0586: null, initial_s_0587: null, initial_s_0589: null, initial_s_0595: null, initial_s_0602: null, initial_s_0613: null, initial_s_0615: null, initial_s_0619: null, initial_s_0625: null, initial_s_0633: null, initial_s_0644: null, initial_s_0645: null, initial_s_0649: null, initial_s_0654: null, initial_s_0656: null, initial_s_0657: null, initial_s_0662: null, initial_s_0666: null, initial_s_0672: null, initial_s_0700: null, initial_s_0709: null, initial_s_0710: null, initial_s_0722: null, initial_s_0725: null, initial_s_0739: null, initial_s_0743: null, initial_s_0745: null, initial_s_0747: null, initial_s_0748: null, initial_s_0750: null, initial_s_0757: null, initial_s_0767: null, initial_s_0773: null, initial_s_0779: null, initial_s_0782: null, initial_s_0785: null, initial_s_0816: null, initial_s_0832: null, initial_s_0835: null, initial_s_0836: null, initial_s_0841: null, initial_s_0847: null, initial_s_0849: null, initial_s_0897: null, initial_s_0940: null, initial_s_0943: null, initial_s_0951: null, initial_s_0953: null, initial_s_0955: null, initial_s_0959: null, initial_s_0965: null, initial_s_0969: null, initial_s_0973: null, initial_s_0978: null, initial_s_0979: null, initial_s_0980: null, initial_s_0981: null, initial_s_0991: null, initial_s_0999: null, initial_s_1003: null, initial_s_1006: null, initial_s_1010: null, initial_s_1011: null, initial_s_1012: null, initial_s_1014: null, initial_s_1016: null, initial_s_1021: null, initial_s_1025: null, initial_s_1029: null, initial_s_1032: null, initial_s_1035: null, initial_s_1038: null, initial_s_1039: null, initial_s_1045: null, initial_s_1048: null, initial_s_1051: null, initial_s_1056: null, initial_s_1059: null, initial_s_1065: null, initial_s_1073: null, initial_s_1077: null, initial_s_1084: null, initial_s_1099: null, initial_s_1101: null, initial_s_1107: null, initial_s_1148: null, initial_s_1151: null, initial_s_1153: null, initial_s_1161: null, initial_s_1176: null, initial_s_1182: null, initial_s_1187: null, initial_s_1191: null, initial_s_1192: null, initial_s_1194: null, initial_s_1207: null, initial_s_1212: null, initial_s_1233: null, initial_s_1238: null, initial_s_1255: null, initial_s_1266: null, initial_s_1269: null, initial_s_1270: null, initial_s_1271: null, initial_s_1275: null, initial_s_1286: null, initial_s_1302: null, initial_s_1314: null, initial_s_1331: null, initial_s_1337: null, initial_s_1342: null, initial_s_1343: null, initial_s_1346: null, initial_s_1351: null, initial_s_1364: null, initial_s_1365: null, initial_s_1376: null, initial_s_1377: null, initial_s_1379: null, initial_s_1386: null, initial_s_1405: null, initial_s_1408: null, initial_s_1413: null, initial_s_1416: null, initial_s_1426: null, initial_s_1427: null, initial_s_1428: null, initial_s_1429: null, initial_s_1445: null, initial_s_1447: null, initial_s_1449: null, initial_s_1454: null, initial_s_1458: null, initial_s_1467: null, initial_s_1469: null, initial_s_1487: null, initial_s_1491: null, initial_s_1520: null, initial_s_1524: null, initial_s_1527: null, initial_s_1533: null, initial_s_1535: null, initial_s_1537: null, initial_s_1538: null, initial_s_1543: null, initial_s_1545: null, initial_s_1559: null, initial_s_1561: null, initial_s_1565: null, initial_s_1569: null, initial_s_1576: null, initial_s_1577: null, initial_s_1578: null, initial_s_1579: null, initial_s_1582: null, initial_s_1583: null, initial_s_1585: null, initial_s_1587: null, initial_s_1589: null, initial_s_1590: null, initial_s_1591: null, initial_s_1593: null, initial_s_1594: null, initial_s_1596: null, initial_s_1598: null, initial_s_1600: null, initial_s_1602: null, initial_s_1604: null, initial_s_1606: null, initial_s_1607: null, initial_s_1608: null, initial_s_1610: null, initial_s_1612: null, initial_s_1614: null, initial_s_1616: null, initial_s_1620: null, Kacald: null, Kadp: null, Kamp: null, Katp: null, Kbpg: null, Kdhap: null, Keq: null, Ketoh: null, Kf16: null, Kf16bp: null, Kf26: null, Kf6p: null, Kg6p: null, Kgap: null, Kglc: null, Ki: null, Kiacald: null, Kiatp: null, Kietoh: null, Kigap: null, Kinad: null, Kinadh: null, Km0002: null, Km0004: null, Km0008: null, Km0009: null, Km0010: null, Km0015: null, Km0016: null, Km0018: null, Km0019: null, Km0025: null, Km0028: null, Km0033: null, Km0037: null, Km0039: null, Km0056: null, Km0061: null, Km0062: null, Km0063: null, Km0066: null, Km0076: null, Km0077: null, Km0078: null, Km0082: null, Km0086: null, Km0089: null, Km0118: null, Km0120: null, Km0122: null, Km0126: null, Km0141: null, Km0142: null, Km0145: null, Km0146: null, Km0158: null, Km0162: null, Km0165: null, Km0176: null, Km0178: null, Km0180: null, Km0190: null, Km0201: null, Km0204: null, Km0207: null, Km0209: null, Km0210: null, Km0211: null, Km0218: null, Km0231: null, Km0232: null, Km0261: null, Km0262: null, Km0291: null, Km0295: null, Km0296: null, Km0297: null, Km0298: null, Km0299: null, Km0300: null, Km0301: null, Km0302: null, Km0304: null, Km0306: null, Km0312: null, Km0313: null, Km0314: null, Km0322: null, Km0324: null, Km0325: null, Km0326: null, Km0327: null, Km0328: null, Km0335: null, Km0340: null, Km0349: null, Km0362: null, Km0367: null, Km0373: null, Km0380: null, Km0386: null, Km0390: null, Km0393: null, Km0403: null, Km0404: null, Km0409: null, Km0419: null, Km0420: null, Km0427: null, Km0428: null, Km0430: null, Km0432: null, Km0445: null, Km0454: null, Km0455: null, Km0467: null, Km0471: null, Km0478: null, Km0505: null, Km0515: null, Km0516: null, Km0522: null, Km0526: null, Km0529: null, Km0539: null, Km0542: null, Km0550: null, Km0551: null, Km0567: null, Km0573: null, Km0574: null, Km0577: null, Km0581: null, Km0582: null, Km0584: null, Km0586: null, Km0587: null, Km0589: null, Km0595: null, Km0602: null, Km0613: null, Km0615: null, Km0619: null, Km0625: null, Km0633: null, Km0644: null, Km0645: null, Km0649: null, Km0654: null, Km0656: null, Km0657: null, Km0662: null, Km0666: null, Km0672: null, Km0700: null, Km0709: null, Km0710: null, Km0722: null, Km0725: null, Km0739: null, Km0743: null, Km0745: null, Km0747: null, Km0748: null, Km0750: null, Km0757: null, Km0767: null, Km0773: null, Km0779: null, Km0782: null, Km0785: null, Km0816: null, Km0832: null, Km0835: null, Km0836: null, Km0841: null, Km0847: null, Km0849: null, Km0897: null, Km0940: null, Km0943: null, Km0951: null, Km0953: null, Km0955: null, Km0959: null, Km0965: null, Km0969: null, Km0973: null, Km0978: null, Km0979: null, Km0980: null, Km0981: null, Km0991: null, Km0999: null, Km1003: null, Km1006: null, Km1010: null, Km1011: null, Km1012: null, Km1014: null, Km1016: null, Km1021: null, Km1025: null, Km1029: null, Km1032: null, Km1035: null, Km1038: null, Km1039: null, Km1045: null, Km1048: null, Km1051: null, Km1056: null, Km1059: null, Km1065: null, Km1073: null, Km1077: null, Km1084: null, Km1099: null, Km1101: null, Km1107: null, Km1148: null, Km1151: null, Km1153: null, Km1161: null, Km1176: null, Km1182: null, Km1187: null, Km1191: null, Km1192: null, Km1194: null, Km1207: null, Km1212: null, Km1233: null, Km1238: null, Km1255: null, Km1266: null, Km1269: null, Km1270: null, Km1271: null, Km1275: null, Km1277: null, Km1286: null, Km1302: null, Km1314: null, Km1324: null, Km1331: null, Km1337: null, Km1342: null, Km1343: null, Km1346: null, Km1351: null, Km1364: null, Km1365: null, Km1376: null, Km1377: null, Km1379: null, Km1386: null, Km1405: null, Km1408: null, Km1413: null, Km1416: null, Km1426: null, Km1427: null, Km1428: null, Km1429: null, Km1445: null, Km1447: null, Km1449: null, Km1454: null, Km1458: null, Km1467: null, Km1468: null, Km1469: null, Km1487: null, Km1491: null, Km1520: null, Km1524: null, Km1527: null, Km1533: null, Km1535: null, Km1537: null, Km1538: null, Km1543: null, Km1545: null, Km1559: null, Km1561: null, Km1565: null, Km1569: null, Km1576: null, Km1577: null, Km1578: null, Km1579: null, Km1582: null, Km1583: null, Km1585: null, Km1587: null, Km1589: null, Km1590: null, Km1591: null, Km1593: null, Km1594: null, Km1596: null, Km1598: null, Km1600: null, Km1602: null, Km1604: null, Km1606: null, Km1607: null, Km1608: null, Km1610: null, Km1612: null, Km1614: null, Km1616: null, Km1620: null, KmAcAld: null, KmADP: null, KmAMP: null, KmATP: null, KmCO2: null, KmDHAP: null, KmEtOH: null, KmF6P: null, KmG6P: null, KmGAP: null, KmGLY: null, KmNAD: null, KmNADH: null, KmPEP: null, KmPHO: null, KmPYR: null, Knad: null, Knadh: null, Kp2g: null, Kp3g: null, Kpep: null, Kpho: null, Kpyr: null, kxk: null, L0: null, NAD_init: null, NADH_init: null, nH: null, P2G_init: null, P3G_init: null, PEP_init: null, PHO_init: null, PYR_init: null, s_0002_init: null, s_0004_init: null, s_0008_init: null, s_0009_init: null, s_0010_init: null, s_0015_init: null, s_0016_init: null, s_0018_init: null, s_0019_init: null, s_0025_init: null, s_0028_init: null, s_0033_init: null, s_0037_init: null, s_0039_init: null, s_0056_init: null, s_0061_init: null, s_0062_init: null, s_0063_init: null, s_0066_init: null, s_0076_init: null, s_0077_init: null, s_0078_init: null, s_0082_init: null, s_0086_init: null, s_0089_init: null, s_0118_init: null, s_0120_init: null, s_0122_init: null, s_0126_init: null, s_0141_init: null, s_0142_init: null, s_0145_init: null, s_0146_init: null, s_0158_init: null, s_0162_init: null, s_0165_init: null, s_0176_init: null, s_0178_init: null, s_0180_init: null, s_0190_init: null, s_0201_init: null, s_0204_init: null, s_0207_init: null, s_0209_init: null, s_0210_init: null, s_0211_init: null, s_0218_init: null, s_0231_init: null, s_0232_init: null, s_0261_init: null, s_0262_init: null, s_0291_init: null, s_0295_init: null, s_0296_init: null, s_0297_init: null, s_0298_init: null, s_0299_init: null, s_0300_init: null, s_0301_init: null, s_0302_init: null, s_0304_init: null, s_0306_init: null, s_0312_init: null, s_0313_init: null, s_0314_init: null, s_0322_init: null, s_0324_init: null, s_0325_init: null, s_0326_init: null, s_0327_init: null, s_0328_init: null, s_0335_init: null, s_0340_init: null, s_0349_init: null, s_0360: null, s_0362_init: null, s_0367_init: null, s_0373_init: null, s_0380_init: null, s_0386_init: null, s_0390_init: null, s_0393_init: null, s_0403_init: null, s_0404_init: null, s_0409_init: null, s_0419_init: null, s_0420: null, s_0427_init: null, s_0428_init: null, s_0430_init: null, s_0432_init: null, s_0445_init: null, s_0454_init: null, s_0455_init: null, s_0458: null, s_0467_init: null, s_0471_init: null, s_0478_init: null, s_0505_init: null, s_0515_init: null, s_0516_init: null, s_0522_init: null, s_0526_init: null, s_0529_init: null, s_0539_init: null, s_0542_init: null, s_0550_init: null, s_0551_init: null, s_0567_init: null, s_0573_init: null, s_0574_init: null, s_0577_init: null, s_0581_init: null, s_0582_init: null, s_0584_init: null, s_0586_init: null, s_0587_init: null, s_0589_init: null, s_0595_init: null, s_0602_init: null, s_0613_init: null, s_0615_init: null, s_0619_init: null, s_0625_init: null, s_0633_init: null, s_0644_init: null, s_0645_init: null, s_0649_init: null, s_0654_init: null, s_0656_init: null, s_0657_init: null, s_0662_init: null, s_0666_init: null, s_0672_init: null, s_0681: null, s_0700_init: null, s_0709_init: null, s_0710_init: null, s_0722_init: null, s_0725_init: null, s_0739_init: null, s_0743_init: null, s_0745_init: null, s_0747_init: null, s_0748_init: null, s_0750_init: null, s_0757_init: null, s_0766: null, s_0767_init: null, s_0773_init: null, s_0779_init: null, s_0782_init: null, s_0785_init: null, s_0816_init: null, s_0832_init: null, s_0835_init: null, s_0836_init: null, s_0841_init: null, s_0847_init: null, s_0849_init: null, s_0897_init: null, s_0940_init: null, s_0943_init: null, s_0951_init: null, s_0953_init: null, s_0955_init: null, s_0959_init: null, s_0965_init: null, s_0969_init: null, s_0973_init: null, s_0978_init: null, s_0979_init: null, s_0980_init: null, s_0981_init: null, s_0991_init: null, s_0999_init: null, s_1003_init: null, s_1006_init: null, s_1010_init: null, s_1011_init: null, s_1012_init: null, s_1014_init: null, s_1016_init: null, s_1021_init: null, s_1025_init: null, s_1029_init: null, s_1032_init: null, s_1035_init: null, s_1038_init: null, s_1039_init: null, s_1045_init: null, s_1048_init: null, s_1051_init: null, s_1056_init: null, s_1059_init: null, s_1065_init: null, s_1073_init: null, s_1077_init: null, s_1084_init: null, s_1099_init: null, s_1101_init: null, s_1107_init: null, s_1148_init: null, s_1151_init: null, s_1153_init: null, s_1161_init: null, s_1176_init: null, s_1182_init: null, s_1187_init: null, s_1191_init: null, s_1192_init: null, s_1194_init: null, s_1207_init: null, s_1212_init: null, s_1233_init: null, s_1238_init: null, s_1255_init: null, s_1266_init: null, s_1269_init: null, s_1270_init: null, s_1271_init: null, s_1275_init: null, s_1277: null, s_1286_init: null, s_1302_init: null, s_1314_init: null, s_1324: null, s_1331_init: null, s_1337_init: null, s_1342_init: null, s_1343_init: null, s_1346_init: null, s_1351_init: null, s_1364_init: null, s_1365_init: null, s_1376_init: null, s_1377_init: null, s_1379_init: null, s_1386_init: null, s_1405_init: null, s_1408_init: null, s_1413_init: null, s_1416_init: null, s_1426_init: null, s_1427_init: null, s_1428_init: null, s_1429_init: null, s_1445_init: null, s_1447_init: null, s_1449_init: null, s_1454_init: null, s_1458_init: null, s_1459: null, s_1467_init: null, s_1468: null, s_1469_init: null, s_1487_init: null, s_1491_init: null, s_1520_init: null, s_1524_init: null, s_1527_init: null, s_1533_init: null, s_1535_init: null, s_1537_init: null, s_1538_init: null, s_1543_init: null, s_1545_init: null, s_1559_init: null, s_1561_init: null, s_1565_init: null, s_1569_init: null, s_1576_init: null, s_1577_init: null, s_1578_init: null, s_1579_init: null, s_1582_init: null, s_1583_init: null, s_1585_init: null, s_1587_init: null, s_1589_init: null, s_1590_init: null, s_1591_init: null, s_1593_init: null, s_1594_init: null, s_1596_init: null, s_1598_init: null, s_1600_init: null, s_1602_init: null, s_1604_init: null, s_1606_init: null, s_1607_init: null, s_1608_init: null, s_1610_init: null, s_1612_init: null, s_1614_init: null, s_1616_init: null, s_1620_init: null, v0: null, Vmax: null, zero_flux: null};
    this.metadata.variableOrder = {s_0002: null, s_0004: null, s_0008: null, s_0009: null, s_0010: null, s_0015: null, s_0016: null, s_0018: null, s_0019: null, s_0025: null, s_0028: null, s_0033: null, s_0037: null, s_0039: null, s_0056: null, s_0061: null, s_0062: null, s_0063: null, s_0066: null, BPG: null, s_0076: null, s_0077: null, s_0078: null, s_0082: null, s_0086: null, s_0089: null, s_0118: null, s_0120: null, s_0122: null, s_0126: null, s_0141: null, s_0142: null, s_0145: null, s_0146: null, s_0158: null, s_0162: null, s_0165: null, s_0176: null, s_0178: null, s_0180: null, P2G: null, s_0190: null, s_0201: null, s_0204: null, s_0207: null, s_0209: null, s_0210: null, s_0211: null, s_0218: null, s_0231: null, s_0232: null, P3G: null, s_0261: null, s_0262: null, s_0291: null, s_0295: null, s_0296: null, s_0297: null, s_0298: null, s_0299: null, s_0300: null, s_0301: null, s_0302: null, s_0304: null, s_0306: null, s_0312: null, s_0313: null, s_0314: null, s_0322: null, s_0324: null, s_0325: null, s_0326: null, s_0327: null, s_0328: null, s_0335: null, s_0340: null, s_0349: null, AcAld: null, s_0362: null, s_0367: null, s_0373: null, s_0380: null, s_0386: null, s_0390: null, s_0393: null, ADP: null, s_0403: null, s_0404: null, s_0409: null, s_0419: null, AMP: null, s_0427: null, s_0428: null, s_0430: null, s_0432: null, ATP: null, s_0445: null, s_0454: null, s_0455: null, CO2: null, s_0467: null, s_0471: null, s_0478: null, s_0505: null, s_0515: null, s_0516: null, s_0522: null, s_0526: null, s_0529: null, s_0539: null, s_0542: null, s_0550: null, s_0551: null, F16bP: null, F6P: null, GLC: null, s_0567: null, G6P: null, s_0573: null, s_0574: null, s_0577: null, s_0581: null, s_0582: null, s_0584: null, s_0586: null, s_0587: null, s_0589: null, s_0595: null, s_0602: null, s_0613: null, s_0615: null, s_0619: null, s_0625: null, DHAP: null, s_0633: null, s_0644: null, s_0645: null, s_0649: null, s_0654: null, s_0656: null, s_0657: null, s_0662: null, s_0666: null, s_0672: null, EtOH: null, s_0700: null, s_0709: null, s_0710: null, s_0722: null, s_0725: null, s_0739: null, s_0743: null, s_0745: null, s_0747: null, s_0748: null, s_0750: null, s_0757: null, GAP: null, GLY: null, s_0767: null, s_0773: null, s_0779: null, s_0782: null, s_0785: null, s_0816: null, s_0832: null, s_0835: null, s_0836: null, s_0841: null, s_0847: null, s_0849: null, s_0897: null, s_0940: null, s_0943: null, s_0951: null, s_0953: null, s_0955: null, s_0959: null, s_0965: null, s_0969: null, s_0973: null, s_0978: null, s_0979: null, s_0980: null, s_0981: null, s_0991: null, s_0999: null, s_1003: null, s_1006: null, s_1010: null, s_1011: null, s_1012: null, s_1014: null, s_1016: null, s_1021: null, s_1025: null, s_1029: null, s_1032: null, s_1035: null, s_1038: null, s_1039: null, s_1045: null, s_1048: null, s_1051: null, s_1056: null, s_1059: null, s_1065: null, s_1073: null, s_1077: null, s_1084: null, s_1099: null, s_1101: null, s_1107: null, s_1148: null, s_1151: null, s_1153: null, s_1161: null, s_1176: null, s_1182: null, s_1187: null, s_1191: null, s_1192: null, s_1194: null, NAD: null, NADH: null, s_1207: null, s_1212: null, s_1233: null, s_1238: null, s_1255: null, s_1266: null, s_1269: null, s_1270: null, s_1271: null, s_1275: null, s_1286: null, s_1302: null, s_1314: null, PHO: null, s_1331: null, s_1337: null, s_1342: null, s_1343: null, s_1346: null, s_1351: null, PEP: null, s_1364: null, s_1365: null, s_1376: null, s_1377: null, s_1379: null, s_1386: null, PYR: null, s_1405: null, s_1408: null, s_1413: null, s_1416: null, s_1426: null, s_1427: null, s_1428: null, s_1429: null, s_1445: null, s_1447: null, s_1449: null, s_1454: null, s_1458: null, s_1467: null, s_1469: null, s_1487: null, s_1491: null, s_1520: null, s_1524: null, s_1527: null, s_1533: null, s_1535: null, s_1537: null, s_1538: null, s_1543: null, s_1545: null, s_1559: null, s_1561: null, s_1565: null, s_1569: null, s_1576: null, s_1577: null, s_1578: null, s_1579: null, s_1582: null, s_1583: null, s_1585: null, s_1587: null, s_1589: null, s_1590: null, s_1591: null, s_1593: null, s_1594: null, s_1596: null, s_1598: null, s_1600: null, s_1602: null, s_1604: null, s_1606: null, s_1607: null, s_1608: null, s_1610: null, s_1612: null, s_1614: null, s_1616: null, s_1620: null, F26bP: null};
    this.metadata.outputOrder = null;
  }
  getMetadata() {
    return this.metadata;
  }
}
