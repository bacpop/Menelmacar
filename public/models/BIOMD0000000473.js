export class model {
  constructor(base, user, unusedUserAction) {
    this.base = base;
    this.internal = {};
    var internal = this.internal;
    internal.Camp = 0.084500000000000006;
    internal.Catp = 3;
    internal.cell = 1;
    internal.Cf16 = 0.39700000000000002;
    internal.Cf26 = 0.017399999999999999;
    internal.Ciatp = 100;
    internal.ep0002 = 1.1348;
    internal.ep0004 = 1.1348;
    internal.ep0089 = 0.001583;
    internal.ep0122 = 5.5999999999999999e-05;
    internal.ep0404 = 0.45879999999999999;
    internal.ep0428 = 0.16070000000000001;
    internal.ep0430 = 0.1017;
    internal.ep0432 = 0.29749999999999999;
    internal.ep0526 = 0.044699999999999997;
    internal.ep0542 = 0.0066;
    internal.ep0584 = 0.0035999999999999999;
    internal.ep0589 = 0.0023999999999999998;
    internal.ep0595 = 0.00053559999999999903;
    internal.ep0615 = 0.0023999999999999998;
    internal.ep0649 = 0.0035999999999999999;
    internal.ep0657 = 9.6000000000000002e-05;
    internal.ep0662 = 0.000125;
    internal.ep0666 = 0.0055999999999999999;
    internal.ep0672 = 0.000812;
    internal.ep0700 = 0.00011400000000000001;
    internal.ep0747 = 0.10539999999999999;
    internal.ep0748 = 0.30180000000000001;
    internal.ep0757 = 0.29039999999999999;
    internal.ep0773 = 0.51849999999999996;
    internal.ep0782 = 0.045999999999999999;
    internal.ep0832 = 0.066299999999999998;
    internal.ep0847 = 0.19270000000000001;
    internal.ep0897 = 0.00051707999999999995;
    internal.ep1059 = 3.1999999999999999e-05;
    internal.ep1077 = 0.2964;
    internal.ep1099 = 0.28620000000000001;
    internal.ep1107 = 0.80789999999999995;
    internal.ep1148 = 0.050700000000000002;
    internal.ep1314 = 0.13389999999999999;
    internal.ep1337 = 0.00038999999999999999;
    internal.ep1346 = 0.0028800000000000002;
    internal.ep1351 = 0.00069700000000000003;
    internal.ep1379 = 0.16470000000000001;
    internal.ep1405 = 0.00098999999999999999;
    internal.ep1428 = 0.18540000000000001;
    internal.ep1467 = 0.02;
    internal.ep1491 = 0.19139999999999999;
    internal.ep1520 = 0.023400000000000001;
    internal.ep1524 = 0.00078100000000000001;
    internal.ep1527 = 0.028400000000000002;
    internal.ep1533 = 0.10199999999999999;
    internal.ep1545 = 0.059900000000000002;
    internal.ep1561 = 0.2646;
    internal.ep1569 = 1.5e-05;
    internal.epAMP = 0.045999999999999999;
    internal.epATP = 59.276000000000003;
    internal.extracellular = 1;
    internal.FLUX_VALUE = 0.164683028785161;
    internal.gR = 5.1200000000000001;
    internal.ic0002 = 0.10000000000000001;
    internal.ic0004 = 0.10000000000000001;
    internal.ic0089 = 0.10000000000000001;
    internal.ic0122 = 0.10000000000000001;
    internal.ic0404 = 0.10000000000000001;
    internal.ic0428 = 0.10000000000000001;
    internal.ic0430 = 0.10000000000000001;
    internal.ic0432 = 0.10000000000000001;
    internal.ic0526 = 0.10000000000000001;
    internal.ic0542 = 0.10000000000000001;
    internal.ic0584 = 0.10000000000000001;
    internal.ic0589 = 0.10000000000000001;
    internal.ic0595 = 0.10000000000000001;
    internal.ic0615 = 0.10000000000000001;
    internal.ic0649 = 0.10000000000000001;
    internal.ic0657 = 0.10000000000000001;
    internal.ic0662 = 0.10000000000000001;
    internal.ic0666 = 0.10000000000000001;
    internal.ic0672 = 0.10000000000000001;
    internal.ic0700 = 0.10000000000000001;
    internal.ic0747 = 0.10000000000000001;
    internal.ic0748 = 0.10000000000000001;
    internal.ic0757 = 0.10000000000000001;
    internal.ic0773 = 0.10000000000000001;
    internal.ic0782 = 0.10000000000000001;
    internal.ic0832 = 0.10000000000000001;
    internal.ic0847 = 0.10000000000000001;
    internal.ic0897 = 0.10000000000000001;
    internal.ic1059 = 0.10000000000000001;
    internal.ic1077 = 0.10000000000000001;
    internal.ic1099 = 0.10000000000000001;
    internal.ic1107 = 0.10000000000000001;
    internal.ic1148 = 0.10000000000000001;
    internal.ic1314 = 0.10000000000000001;
    internal.ic1337 = 0.10000000000000001;
    internal.ic1346 = 0.10000000000000001;
    internal.ic1351 = 0.10000000000000001;
    internal.ic1379 = 0.10000000000000001;
    internal.ic1405 = 0.10000000000000001;
    internal.ic1428 = 0.10000000000000001;
    internal.ic1467 = 0.10000000000000001;
    internal.ic1491 = 0.10000000000000001;
    internal.ic1520 = 0.10000000000000001;
    internal.ic1524 = 0.10000000000000001;
    internal.ic1527 = 0.10000000000000001;
    internal.ic1533 = 0.10000000000000001;
    internal.ic1545 = 0.10000000000000001;
    internal.ic1561 = 0.10000000000000001;
    internal.ic1569 = 0.10000000000000001;
    internal.icAMP = 0.29288485332009101;
    internal.icATP = 2.52512746499271;
    internal.Kacald = 1.1100000000000001;
    internal.Kadp = 0.23000000000000001;
    internal.Kamp = 0.099500000000000005;
    internal.Katp = 0.14999999999999999;
    internal.Kbpg = 0.0097999999999999997;
    internal.Kdhap = 2;
    internal.Keq = 36.3062502385472;
    internal.Ketoh = 17;
    internal.Kf16 = 0.111;
    internal.Kf16bp = 0.29999999999999999;
    internal.Kf26 = 0.00068199999999999999;
    internal.Kf6p = 0.29999999999999999;
    internal.Kg6p = 1.3999999999999999;
    internal.Kgap = 2.3999999999999999;
    internal.Kglc = 0.080000000000000002;
    internal.Ki = 0.91000000000000003;
    internal.Kiacald = 1.1000000000000001;
    internal.Kiatp = 0.65000000000000002;
    internal.Kietoh = 90;
    internal.Kigap = 10;
    internal.Kinad = 0.92000000000000004;
    internal.Kinadh = 0.031;
    internal.Km0002 = 0.10000000000000001;
    internal.Km0004 = 0.10000000000000001;
    internal.Km0008 = 0.10000000000000001;
    internal.Km0009 = 0.10000000000000001;
    internal.Km0010 = 0.10000000000000001;
    internal.Km0015 = 0.10000000000000001;
    internal.Km0016 = 0.10000000000000001;
    internal.Km0018 = 0.10000000000000001;
    internal.Km0019 = 0.10000000000000001;
    internal.Km0025 = 0.10000000000000001;
    internal.Km0028 = 0.10000000000000001;
    internal.Km0033 = 0.10000000000000001;
    internal.Km0037 = 0.10000000000000001;
    internal.Km0039 = 0.10000000000000001;
    internal.Km0056 = 0.10000000000000001;
    internal.Km0061 = 0.10000000000000001;
    internal.Km0062 = 0.10000000000000001;
    internal.Km0063 = 0.10000000000000001;
    internal.Km0066 = 0.10000000000000001;
    internal.Km0076 = 0.10000000000000001;
    internal.Km0077 = 0.10000000000000001;
    internal.Km0078 = 0.10000000000000001;
    internal.Km0082 = 0.10000000000000001;
    internal.Km0086 = 0.10000000000000001;
    internal.Km0089 = 0.10000000000000001;
    internal.Km0118 = 0.10000000000000001;
    internal.Km0120 = 0.10000000000000001;
    internal.Km0122 = 0.10000000000000001;
    internal.Km0126 = 0.10000000000000001;
    internal.Km0141 = 0.10000000000000001;
    internal.Km0142 = 0.10000000000000001;
    internal.Km0145 = 0.10000000000000001;
    internal.Km0146 = 0.10000000000000001;
    internal.Km0158 = 0.10000000000000001;
    internal.Km0162 = 0.10000000000000001;
    internal.Km0165 = 0.10000000000000001;
    internal.Km0176 = 0.10000000000000001;
    internal.Km0178 = 0.10000000000000001;
    internal.Km0180 = 0.10000000000000001;
    internal.Km0190 = 0.10000000000000001;
    internal.Km0201 = 0.10000000000000001;
    internal.Km0204 = 0.10000000000000001;
    internal.Km0207 = 0.10000000000000001;
    internal.Km0209 = 0.10000000000000001;
    internal.Km0210 = 0.10000000000000001;
    internal.Km0211 = 0.10000000000000001;
    internal.Km0218 = 0.10000000000000001;
    internal.Km0231 = 0.10000000000000001;
    internal.Km0232 = 0.10000000000000001;
    internal.Km0261 = 0.10000000000000001;
    internal.Km0262 = 0.10000000000000001;
    internal.Km0291 = 0.10000000000000001;
    internal.Km0295 = 0.10000000000000001;
    internal.Km0296 = 0.10000000000000001;
    internal.Km0297 = 0.10000000000000001;
    internal.Km0298 = 0.10000000000000001;
    internal.Km0299 = 0.10000000000000001;
    internal.Km0300 = 0.10000000000000001;
    internal.Km0301 = 0.10000000000000001;
    internal.Km0302 = 0.10000000000000001;
    internal.Km0304 = 0.10000000000000001;
    internal.Km0306 = 0.10000000000000001;
    internal.Km0312 = 0.10000000000000001;
    internal.Km0313 = 0.10000000000000001;
    internal.Km0314 = 0.10000000000000001;
    internal.Km0322 = 0.10000000000000001;
    internal.Km0324 = 0.10000000000000001;
    internal.Km0325 = 0.10000000000000001;
    internal.Km0326 = 0.10000000000000001;
    internal.Km0327 = 0.10000000000000001;
    internal.Km0328 = 0.10000000000000001;
    internal.Km0335 = 0.10000000000000001;
    internal.Km0340 = 0.10000000000000001;
    internal.Km0349 = 0.10000000000000001;
    internal.Km0362 = 0.10000000000000001;
    internal.Km0367 = 0.10000000000000001;
    internal.Km0373 = 0.10000000000000001;
    internal.Km0380 = 0.10000000000000001;
    internal.Km0386 = 0.10000000000000001;
    internal.Km0390 = 0.10000000000000001;
    internal.Km0393 = 0.10000000000000001;
    internal.Km0403 = 0.10000000000000001;
    internal.Km0404 = 0.10000000000000001;
    internal.Km0409 = 0.10000000000000001;
    internal.Km0419 = 0.10000000000000001;
    internal.Km0420 = 1;
    internal.Km0427 = 0.10000000000000001;
    internal.Km0428 = 0.10000000000000001;
    internal.Km0430 = 0.10000000000000001;
    internal.Km0432 = 0.10000000000000001;
    internal.Km0445 = 0.10000000000000001;
    internal.Km0454 = 0.10000000000000001;
    internal.Km0455 = 0.10000000000000001;
    internal.Km0467 = 0.10000000000000001;
    internal.Km0471 = 0.10000000000000001;
    internal.Km0478 = 0.10000000000000001;
    internal.Km0505 = 0.10000000000000001;
    internal.Km0515 = 0.10000000000000001;
    internal.Km0516 = 0.10000000000000001;
    internal.Km0522 = 0.10000000000000001;
    internal.Km0526 = 0.10000000000000001;
    internal.Km0529 = 0.10000000000000001;
    internal.Km0539 = 0.10000000000000001;
    internal.Km0542 = 0.10000000000000001;
    internal.Km0550 = 0.10000000000000001;
    internal.Km0551 = 0.10000000000000001;
    internal.Km0567 = 0.10000000000000001;
    internal.Km0573 = 0.10000000000000001;
    internal.Km0574 = 0.10000000000000001;
    internal.Km0577 = 0.10000000000000001;
    internal.Km0581 = 0.10000000000000001;
    internal.Km0582 = 0.10000000000000001;
    internal.Km0584 = 0.10000000000000001;
    internal.Km0586 = 0.10000000000000001;
    internal.Km0587 = 0.10000000000000001;
    internal.Km0589 = 0.10000000000000001;
    internal.Km0595 = 0.10000000000000001;
    internal.Km0602 = 0.10000000000000001;
    internal.Km0613 = 0.10000000000000001;
    internal.Km0615 = 0.10000000000000001;
    internal.Km0619 = 0.10000000000000001;
    internal.Km0625 = 0.10000000000000001;
    internal.Km0633 = 0.10000000000000001;
    internal.Km0644 = 0.10000000000000001;
    internal.Km0645 = 0.10000000000000001;
    internal.Km0649 = 0.10000000000000001;
    internal.Km0654 = 0.10000000000000001;
    internal.Km0656 = 0.10000000000000001;
    internal.Km0657 = 0.10000000000000001;
    internal.Km0662 = 0.10000000000000001;
    internal.Km0666 = 0.10000000000000001;
    internal.Km0672 = 0.10000000000000001;
    internal.Km0700 = 0.10000000000000001;
    internal.Km0709 = 0.10000000000000001;
    internal.Km0710 = 0.10000000000000001;
    internal.Km0722 = 0.10000000000000001;
    internal.Km0725 = 0.10000000000000001;
    internal.Km0739 = 0.10000000000000001;
    internal.Km0743 = 0.10000000000000001;
    internal.Km0745 = 0.10000000000000001;
    internal.Km0747 = 0.10000000000000001;
    internal.Km0748 = 0.10000000000000001;
    internal.Km0750 = 0.10000000000000001;
    internal.Km0757 = 0.10000000000000001;
    internal.Km0767 = 0.10000000000000001;
    internal.Km0773 = 0.10000000000000001;
    internal.Km0779 = 0.10000000000000001;
    internal.Km0782 = 0.10000000000000001;
    internal.Km0785 = 0.10000000000000001;
    internal.Km0816 = 0.10000000000000001;
    internal.Km0832 = 0.10000000000000001;
    internal.Km0835 = 0.10000000000000001;
    internal.Km0836 = 0.10000000000000001;
    internal.Km0841 = 0.10000000000000001;
    internal.Km0847 = 0.10000000000000001;
    internal.Km0849 = 0.10000000000000001;
    internal.Km0897 = 0.10000000000000001;
    internal.Km0940 = 0.10000000000000001;
    internal.Km0943 = 0.10000000000000001;
    internal.Km0951 = 0.10000000000000001;
    internal.Km0953 = 0.10000000000000001;
    internal.Km0955 = 0.10000000000000001;
    internal.Km0959 = 0.10000000000000001;
    internal.Km0965 = 0.10000000000000001;
    internal.Km0969 = 0.10000000000000001;
    internal.Km0973 = 0.10000000000000001;
    internal.Km0978 = 0.10000000000000001;
    internal.Km0979 = 0.10000000000000001;
    internal.Km0980 = 0.10000000000000001;
    internal.Km0981 = 0.10000000000000001;
    internal.Km0991 = 0.10000000000000001;
    internal.Km0999 = 0.10000000000000001;
    internal.Km1003 = 0.10000000000000001;
    internal.Km1006 = 0.10000000000000001;
    internal.Km1010 = 0.10000000000000001;
    internal.Km1011 = 0.10000000000000001;
    internal.Km1012 = 0.10000000000000001;
    internal.Km1014 = 0.10000000000000001;
    internal.Km1016 = 0.10000000000000001;
    internal.Km1021 = 0.10000000000000001;
    internal.Km1025 = 0.10000000000000001;
    internal.Km1029 = 0.10000000000000001;
    internal.Km1032 = 0.10000000000000001;
    internal.Km1035 = 0.10000000000000001;
    internal.Km1038 = 0.10000000000000001;
    internal.Km1039 = 0.10000000000000001;
    internal.Km1045 = 0.10000000000000001;
    internal.Km1048 = 0.10000000000000001;
    internal.Km1051 = 0.10000000000000001;
    internal.Km1056 = 0.10000000000000001;
    internal.Km1059 = 0.10000000000000001;
    internal.Km1065 = 0.10000000000000001;
    internal.Km1073 = 0.10000000000000001;
    internal.Km1077 = 0.10000000000000001;
    internal.Km1084 = 0.10000000000000001;
    internal.Km1099 = 0.10000000000000001;
    internal.Km1101 = 0.10000000000000001;
    internal.Km1107 = 0.10000000000000001;
    internal.Km1148 = 0.10000000000000001;
    internal.Km1151 = 0.10000000000000001;
    internal.Km1153 = 0.10000000000000001;
    internal.Km1161 = 0.10000000000000001;
    internal.Km1176 = 0.10000000000000001;
    internal.Km1182 = 0.10000000000000001;
    internal.Km1187 = 0.10000000000000001;
    internal.Km1191 = 0.10000000000000001;
    internal.Km1192 = 0.10000000000000001;
    internal.Km1194 = 0.10000000000000001;
    internal.Km1207 = 0.10000000000000001;
    internal.Km1212 = 0.10000000000000001;
    internal.Km1233 = 0.10000000000000001;
    internal.Km1238 = 0.10000000000000001;
    internal.Km1255 = 0.10000000000000001;
    internal.Km1266 = 0.10000000000000001;
    internal.Km1269 = 0.10000000000000001;
    internal.Km1270 = 0.10000000000000001;
    internal.Km1271 = 0.10000000000000001;
    internal.Km1275 = 0.10000000000000001;
    internal.Km1277 = 1;
    internal.Km1286 = 0.10000000000000001;
    internal.Km1302 = 0.10000000000000001;
    internal.Km1314 = 0.10000000000000001;
    internal.Km1324 = 1;
    internal.Km1331 = 0.10000000000000001;
    internal.Km1337 = 0.10000000000000001;
    internal.Km1342 = 0.10000000000000001;
    internal.Km1343 = 0.10000000000000001;
    internal.Km1346 = 0.10000000000000001;
    internal.Km1351 = 0.10000000000000001;
    internal.Km1364 = 0.10000000000000001;
    internal.Km1365 = 0.10000000000000001;
    internal.Km1376 = 0.10000000000000001;
    internal.Km1377 = 0.10000000000000001;
    internal.Km1379 = 0.10000000000000001;
    internal.Km1386 = 0.10000000000000001;
    internal.Km1405 = 0.10000000000000001;
    internal.Km1408 = 0.10000000000000001;
    internal.Km1413 = 0.10000000000000001;
    internal.Km1416 = 0.10000000000000001;
    internal.Km1426 = 0.10000000000000001;
    internal.Km1427 = 0.10000000000000001;
    internal.Km1428 = 0.10000000000000001;
    internal.Km1429 = 0.10000000000000001;
    internal.Km1445 = 0.10000000000000001;
    internal.Km1447 = 0.10000000000000001;
    internal.Km1449 = 0.10000000000000001;
    internal.Km1454 = 0.10000000000000001;
    internal.Km1458 = 0.10000000000000001;
    internal.Km1467 = 0.10000000000000001;
    internal.Km1468 = 1;
    internal.Km1469 = 0.10000000000000001;
    internal.Km1487 = 0.10000000000000001;
    internal.Km1491 = 0.10000000000000001;
    internal.Km1520 = 0.10000000000000001;
    internal.Km1524 = 0.10000000000000001;
    internal.Km1527 = 0.10000000000000001;
    internal.Km1533 = 0.10000000000000001;
    internal.Km1535 = 0.10000000000000001;
    internal.Km1537 = 0.10000000000000001;
    internal.Km1538 = 0.10000000000000001;
    internal.Km1543 = 0.10000000000000001;
    internal.Km1545 = 0.10000000000000001;
    internal.Km1559 = 0.10000000000000001;
    internal.Km1561 = 0.10000000000000001;
    internal.Km1565 = 0.10000000000000001;
    internal.Km1569 = 0.10000000000000001;
    internal.Km1576 = 0.10000000000000001;
    internal.Km1577 = 0.10000000000000001;
    internal.Km1578 = 0.10000000000000001;
    internal.Km1579 = 0.10000000000000001;
    internal.Km1582 = 0.10000000000000001;
    internal.Km1583 = 0.10000000000000001;
    internal.Km1585 = 0.10000000000000001;
    internal.Km1587 = 0.10000000000000001;
    internal.Km1589 = 0.10000000000000001;
    internal.Km1590 = 0.10000000000000001;
    internal.Km1591 = 0.10000000000000001;
    internal.Km1593 = 0.10000000000000001;
    internal.Km1594 = 0.10000000000000001;
    internal.Km1596 = 0.10000000000000001;
    internal.Km1598 = 0.10000000000000001;
    internal.Km1600 = 0.10000000000000001;
    internal.Km1602 = 0.10000000000000001;
    internal.Km1604 = 0.10000000000000001;
    internal.Km1606 = 0.10000000000000001;
    internal.Km1607 = 0.10000000000000001;
    internal.Km1608 = 0.10000000000000001;
    internal.Km1610 = 0.10000000000000001;
    internal.Km1612 = 0.10000000000000001;
    internal.Km1614 = 0.10000000000000001;
    internal.Km1616 = 0.10000000000000001;
    internal.Km1620 = 0.10000000000000001;
    internal.KmAcAld = 0.17814057985065701;
    internal.KmADP = 1.28198768168719;
    internal.KmAMP = 0.29288485332009101;
    internal.KmATP = 2.52512746499271;
    internal.KmCO2 = 1;
    internal.KmDHAP = 1.00415254899644;
    internal.KmEtOH = 50;
    internal.KmF6P = 0.62497640553237299;
    internal.KmG6P = 2.6750401404478699;
    internal.KmGAP = 0.045180917578096301;
    internal.KmGLY = 0.14999999999999999;
    internal.KmNAD = 1.5032903020153101;
    internal.KmNADH = 0.086709697984695203;
    internal.KmPEP = 0.0632352144936527;
    internal.KmPHO = 0.10000000000000001;
    internal.KmPYR = 1.8153125119273601;
    internal.Knad = 0.17000000000000001;
    internal.Knadh = 0.11;
    internal.Kp2g = 0.040000000000000001;
    internal.Kp3g = 0.53000000000000003;
    internal.Kpep = 0.5;
    internal.Kpho = 0.0001;
    internal.Kpyr = 4.3300000000000001;
    internal.kxk = 0.75;
    internal.L0 = 0.66000000000000003;
    internal.nH = 1.8999999999999999;
    internal.v0 = 0.042989494474150999;
    internal.Vmax = 4.9404908635668798;
    internal.zero_flux = 0;
    this.setUser(user, unusedUserAction);
  }
  initial(t) {
    var internal = this.internal;
    var state = Array(713).fill(0);
    state[0] = internal.initial_s_0002;
    state[1] = internal.initial_s_0004;
    state[2] = internal.initial_s_0008;
    state[3] = internal.initial_s_0009;
    state[4] = internal.initial_s_0010;
    state[5] = internal.initial_s_0015;
    state[6] = internal.initial_s_0016;
    state[7] = internal.initial_s_0018;
    state[8] = internal.initial_s_0019;
    state[9] = internal.initial_s_0025;
    state[10] = internal.initial_s_0028;
    state[11] = internal.initial_s_0033;
    state[12] = internal.initial_s_0037;
    state[13] = internal.initial_s_0039;
    state[14] = internal.initial_s_0056;
    state[15] = internal.initial_s_0061;
    state[16] = internal.initial_s_0062;
    state[17] = internal.initial_s_0063;
    state[18] = internal.initial_s_0066;
    state[19] = internal.initial_BPG;
    state[20] = internal.initial_s_0076;
    state[21] = internal.initial_s_0077;
    state[22] = internal.initial_s_0078;
    state[23] = internal.initial_s_0082;
    state[24] = internal.initial_s_0086;
    state[25] = internal.initial_s_0089;
    state[26] = internal.initial_s_0118;
    state[27] = internal.initial_s_0120;
    state[28] = internal.initial_s_0122;
    state[29] = internal.initial_s_0126;
    state[30] = internal.initial_s_0141;
    state[31] = internal.initial_s_0142;
    state[32] = internal.initial_s_0145;
    state[33] = internal.initial_s_0146;
    state[34] = internal.initial_s_0158;
    state[35] = internal.initial_s_0162;
    state[36] = internal.initial_s_0165;
    state[37] = internal.initial_s_0176;
    state[38] = internal.initial_s_0178;
    state[39] = internal.initial_s_0180;
    state[40] = internal.initial_P2G;
    state[41] = internal.initial_s_0190;
    state[42] = internal.initial_s_0201;
    state[43] = internal.initial_s_0204;
    state[44] = internal.initial_s_0207;
    state[45] = internal.initial_s_0209;
    state[46] = internal.initial_s_0210;
    state[47] = internal.initial_s_0211;
    state[48] = internal.initial_s_0218;
    state[49] = internal.initial_s_0231;
    state[50] = internal.initial_s_0232;
    state[51] = internal.initial_P3G;
    state[52] = internal.initial_s_0261;
    state[53] = internal.initial_s_0262;
    state[54] = internal.initial_s_0291;
    state[55] = internal.initial_s_0295;
    state[56] = internal.initial_s_0296;
    state[57] = internal.initial_s_0297;
    state[58] = internal.initial_s_0298;
    state[59] = internal.initial_s_0299;
    state[60] = internal.initial_s_0300;
    state[61] = internal.initial_s_0301;
    state[62] = internal.initial_s_0302;
    state[63] = internal.initial_s_0304;
    state[64] = internal.initial_s_0306;
    state[65] = internal.initial_s_0312;
    state[66] = internal.initial_s_0313;
    state[67] = internal.initial_s_0314;
    state[68] = internal.initial_s_0322;
    state[69] = internal.initial_s_0324;
    state[70] = internal.initial_s_0325;
    state[71] = internal.initial_s_0326;
    state[72] = internal.initial_s_0327;
    state[73] = internal.initial_s_0328;
    state[74] = internal.initial_s_0335;
    state[75] = internal.initial_s_0340;
    state[76] = internal.initial_s_0349;
    state[77] = internal.initial_AcAld;
    state[78] = internal.initial_s_0360;
    state[79] = internal.initial_s_0362;
    state[80] = internal.initial_s_0367;
    state[81] = internal.initial_s_0373;
    state[82] = internal.initial_s_0380;
    state[83] = internal.initial_s_0386;
    state[84] = internal.initial_s_0390;
    state[85] = internal.initial_s_0393;
    state[86] = internal.initial_ADP;
    state[87] = internal.initial_s_0403;
    state[88] = internal.initial_s_0404;
    state[89] = internal.initial_s_0409;
    state[90] = internal.initial_s_0419;
    state[91] = internal.initial_s_0420;
    state[92] = internal.initial_AMP;
    state[93] = internal.initial_s_0427;
    state[94] = internal.initial_s_0428;
    state[95] = internal.initial_s_0430;
    state[96] = internal.initial_s_0432;
    state[97] = internal.initial_ATP;
    state[98] = internal.initial_s_0445;
    state[99] = internal.initial_s_0454;
    state[100] = internal.initial_s_0455;
    state[101] = internal.initial_CO2;
    state[102] = internal.initial_s_0458;
    state[103] = internal.initial_s_0467;
    state[104] = internal.initial_s_0471;
    state[105] = internal.initial_s_0478;
    state[106] = internal.initial_s_0505;
    state[107] = internal.initial_s_0515;
    state[108] = internal.initial_s_0516;
    state[109] = internal.initial_s_0522;
    state[110] = internal.initial_s_0526;
    state[111] = internal.initial_s_0529;
    state[112] = internal.initial_s_0539;
    state[113] = internal.initial_s_0542;
    state[114] = internal.initial_s_0550;
    state[115] = internal.initial_s_0551;
    state[116] = internal.initial_F16bP;
    state[117] = internal.initial_F6P;
    state[118] = internal.initial_GLC;
    state[119] = internal.initial_GLCx;
    state[120] = internal.initial_s_0567;
    state[121] = internal.initial_G6P;
    state[122] = internal.initial_s_0573;
    state[123] = internal.initial_s_0574;
    state[124] = internal.initial_s_0577;
    state[125] = internal.initial_s_0581;
    state[126] = internal.initial_s_0582;
    state[127] = internal.initial_s_0584;
    state[128] = internal.initial_s_0586;
    state[129] = internal.initial_s_0587;
    state[130] = internal.initial_s_0589;
    state[131] = internal.initial_s_0595;
    state[132] = internal.initial_s_0602;
    state[133] = internal.initial_s_0613;
    state[134] = internal.initial_s_0615;
    state[135] = internal.initial_s_0619;
    state[136] = internal.initial_s_0625;
    state[137] = internal.initial_DHAP;
    state[138] = internal.initial_s_0633;
    state[139] = internal.initial_s_0644;
    state[140] = internal.initial_s_0645;
    state[141] = internal.initial_s_0649;
    state[142] = internal.initial_s_0654;
    state[143] = internal.initial_s_0656;
    state[144] = internal.initial_s_0657;
    state[145] = internal.initial_s_0662;
    state[146] = internal.initial_s_0666;
    state[147] = internal.initial_s_0672;
    state[148] = internal.initial_EtOH;
    state[149] = internal.initial_s_0681;
    state[150] = internal.initial_s_0700;
    state[151] = internal.initial_s_0709;
    state[152] = internal.initial_s_0710;
    state[153] = internal.initial_s_0722;
    state[154] = internal.initial_s_0725;
    state[155] = internal.initial_s_0739;
    state[156] = internal.initial_s_0743;
    state[157] = internal.initial_s_0745;
    state[158] = internal.initial_s_0747;
    state[159] = internal.initial_s_0748;
    state[160] = internal.initial_s_0750;
    state[161] = internal.initial_s_0757;
    state[162] = internal.initial_GAP;
    state[163] = internal.initial_GLY;
    state[164] = internal.initial_s_0766;
    state[165] = internal.initial_s_0767;
    state[166] = internal.initial_s_0773;
    state[167] = internal.initial_s_0779;
    state[168] = internal.initial_s_0782;
    state[169] = internal.initial_s_0785;
    state[170] = internal.initial_s_0816;
    state[171] = internal.initial_s_0832;
    state[172] = internal.initial_s_0835;
    state[173] = internal.initial_s_0836;
    state[174] = internal.initial_s_0841;
    state[175] = internal.initial_s_0847;
    state[176] = internal.initial_s_0849;
    state[177] = internal.initial_s_0897;
    state[178] = internal.initial_s_0940;
    state[179] = internal.initial_s_0943;
    state[180] = internal.initial_s_0951;
    state[181] = internal.initial_s_0953;
    state[182] = internal.initial_s_0955;
    state[183] = internal.initial_s_0959;
    state[184] = internal.initial_s_0965;
    state[185] = internal.initial_s_0969;
    state[186] = internal.initial_s_0973;
    state[187] = internal.initial_s_0978;
    state[188] = internal.initial_s_0979;
    state[189] = internal.initial_s_0980;
    state[190] = internal.initial_s_0981;
    state[191] = internal.initial_s_0991;
    state[192] = internal.initial_s_0999;
    state[193] = internal.initial_s_1003;
    state[194] = internal.initial_s_1006;
    state[195] = internal.initial_s_1010;
    state[196] = internal.initial_s_1011;
    state[197] = internal.initial_s_1012;
    state[198] = internal.initial_s_1014;
    state[199] = internal.initial_s_1016;
    state[200] = internal.initial_s_1021;
    state[201] = internal.initial_s_1025;
    state[202] = internal.initial_s_1029;
    state[203] = internal.initial_s_1032;
    state[204] = internal.initial_s_1035;
    state[205] = internal.initial_s_1038;
    state[206] = internal.initial_s_1039;
    state[207] = internal.initial_s_1045;
    state[208] = internal.initial_s_1048;
    state[209] = internal.initial_s_1051;
    state[210] = internal.initial_s_1056;
    state[211] = internal.initial_s_1059;
    state[212] = internal.initial_s_1065;
    state[213] = internal.initial_s_1073;
    state[214] = internal.initial_s_1077;
    state[215] = internal.initial_s_1084;
    state[216] = internal.initial_s_1099;
    state[217] = internal.initial_s_1101;
    state[218] = internal.initial_s_1107;
    state[219] = internal.initial_s_1148;
    state[220] = internal.initial_s_1151;
    state[221] = internal.initial_s_1153;
    state[222] = internal.initial_s_1161;
    state[223] = internal.initial_s_1176;
    state[224] = internal.initial_s_1182;
    state[225] = internal.initial_s_1187;
    state[226] = internal.initial_s_1191;
    state[227] = internal.initial_s_1192;
    state[228] = internal.initial_s_1194;
    state[229] = internal.initial_NAD;
    state[230] = internal.initial_NADH;
    state[231] = internal.initial_s_1207;
    state[232] = internal.initial_s_1212;
    state[233] = internal.initial_s_1233;
    state[234] = internal.initial_s_1238;
    state[235] = internal.initial_s_1255;
    state[236] = internal.initial_s_1266;
    state[237] = internal.initial_s_1269;
    state[238] = internal.initial_s_1270;
    state[239] = internal.initial_s_1271;
    state[240] = internal.initial_s_1275;
    state[241] = internal.initial_s_1277;
    state[242] = internal.initial_s_1286;
    state[243] = internal.initial_s_1302;
    state[244] = internal.initial_s_1314;
    state[245] = internal.initial_PHO;
    state[246] = internal.initial_s_1324;
    state[247] = internal.initial_s_1331;
    state[248] = internal.initial_s_1337;
    state[249] = internal.initial_s_1342;
    state[250] = internal.initial_s_1343;
    state[251] = internal.initial_s_1346;
    state[252] = internal.initial_s_1351;
    state[253] = internal.initial_PEP;
    state[254] = internal.initial_s_1364;
    state[255] = internal.initial_s_1365;
    state[256] = internal.initial_s_1376;
    state[257] = internal.initial_s_1377;
    state[258] = internal.initial_s_1379;
    state[259] = internal.initial_s_1386;
    state[260] = internal.initial_PYR;
    state[261] = internal.initial_s_1405;
    state[262] = internal.initial_s_1408;
    state[263] = internal.initial_s_1413;
    state[264] = internal.initial_s_1416;
    state[265] = internal.initial_s_1426;
    state[266] = internal.initial_s_1427;
    state[267] = internal.initial_s_1428;
    state[268] = internal.initial_s_1429;
    state[269] = internal.initial_s_1445;
    state[270] = internal.initial_s_1447;
    state[271] = internal.initial_s_1449;
    state[272] = internal.initial_s_1454;
    state[273] = internal.initial_s_1458;
    state[274] = internal.initial_s_1459;
    state[275] = internal.initial_s_1467;
    state[276] = internal.initial_s_1468;
    state[277] = internal.initial_s_1469;
    state[278] = internal.initial_s_1487;
    state[279] = internal.initial_s_1491;
    state[280] = internal.initial_s_1520;
    state[281] = internal.initial_s_1524;
    state[282] = internal.initial_s_1527;
    state[283] = internal.initial_s_1533;
    state[284] = internal.initial_s_1535;
    state[285] = internal.initial_s_1537;
    state[286] = internal.initial_s_1538;
    state[287] = internal.initial_s_1543;
    state[288] = internal.initial_s_1545;
    state[289] = internal.initial_s_1559;
    state[290] = internal.initial_s_1561;
    state[291] = internal.initial_s_1565;
    state[292] = internal.initial_s_1569;
    state[293] = internal.initial_s_1576;
    state[294] = internal.initial_s_1577;
    state[295] = internal.initial_s_1578;
    state[296] = internal.initial_s_1579;
    state[297] = internal.initial_s_1582;
    state[298] = internal.initial_s_1583;
    state[299] = internal.initial_s_1585;
    state[300] = internal.initial_s_1587;
    state[301] = internal.initial_s_1589;
    state[302] = internal.initial_s_1590;
    state[303] = internal.initial_s_1591;
    state[304] = internal.initial_s_1593;
    state[305] = internal.initial_s_1594;
    state[306] = internal.initial_s_1596;
    state[307] = internal.initial_s_1598;
    state[308] = internal.initial_s_1600;
    state[309] = internal.initial_s_1602;
    state[310] = internal.initial_s_1604;
    state[311] = internal.initial_s_1606;
    state[312] = internal.initial_s_1607;
    state[313] = internal.initial_s_1608;
    state[314] = internal.initial_s_1610;
    state[315] = internal.initial_s_1612;
    state[316] = internal.initial_s_1614;
    state[317] = internal.initial_s_1616;
    state[318] = internal.initial_s_1620;
    state[319] = internal.initial_e_0001;
    state[320] = internal.initial_e_0002;
    state[321] = internal.initial_e_0003;
    state[322] = internal.initial_e_0004;
    state[323] = internal.initial_e_0005;
    state[324] = internal.initial_e_0006;
    state[325] = internal.initial_e_0007;
    state[326] = internal.initial_e_0008;
    state[327] = internal.initial_e_0010;
    state[328] = internal.initial_e_0011;
    state[329] = internal.initial_e_0012;
    state[330] = internal.initial_e_0017;
    state[331] = internal.initial_e_0020;
    state[332] = internal.initial_e_0022;
    state[333] = internal.initial_e_0025;
    state[334] = internal.initial_e_0026;
    state[335] = internal.initial_e_0028;
    state[336] = internal.initial_e_0030;
    state[337] = internal.initial_e_0031;
    state[338] = internal.initial_e_0033;
    state[339] = internal.initial_e_0038;
    state[340] = internal.initial_e_0045;
    state[341] = internal.initial_e_0051;
    state[342] = internal.initial_e_0053;
    state[343] = internal.initial_e_0054;
    state[344] = internal.initial_e_0057;
    state[345] = internal.initial_e_0062;
    state[346] = internal.initial_e_0063;
    state[347] = internal.initial_e_0064;
    state[348] = internal.initial_e_0065;
    state[349] = internal.initial_e_0066;
    state[350] = internal.initial_e_0069;
    state[351] = internal.initial_e_0071;
    state[352] = internal.initial_e_0074;
    state[353] = internal.initial_e_0079;
    state[354] = internal.initial_e_0084;
    state[355] = internal.initial_e_0087;
    state[356] = internal.initial_e_0088;
    state[357] = internal.initial_e_0089;
    state[358] = internal.initial_e_0090;
    state[359] = internal.initial_e_0091;
    state[360] = internal.initial_e_0092;
    state[361] = internal.initial_e_0100;
    state[362] = internal.initial_e_0101;
    state[363] = internal.initial_e_0103;
    state[364] = internal.initial_e_0106;
    state[365] = internal.initial_e_0107;
    state[366] = internal.initial_e_0109;
    state[367] = internal.initial_e_0111;
    state[368] = internal.initial_e_0113;
    state[369] = internal.initial_e_0117;
    state[370] = internal.initial_e_0122;
    state[371] = internal.initial_e_0124;
    state[372] = internal.initial_e_0127;
    state[373] = internal.initial_e_0128;
    state[374] = internal.initial_e_0129;
    state[375] = internal.initial_e_0133;
    state[376] = internal.initial_e_0134;
    state[377] = internal.initial_e_0135;
    state[378] = internal.initial_e_0136;
    state[379] = internal.initial_e_0137;
    state[380] = internal.initial_e_0141;
    state[381] = internal.initial_e_0142;
    state[382] = internal.initial_e_0146;
    state[383] = internal.initial_e_0151;
    state[384] = internal.initial_e_0152;
    state[385] = internal.initial_e_0154;
    state[386] = internal.initial_e_0155;
    state[387] = internal.initial_e_0160;
    state[388] = internal.initial_e_0165;
    state[389] = internal.initial_e_0167;
    state[390] = internal.initial_e_0168;
    state[391] = internal.initial_e_0169;
    state[392] = internal.initial_e_0171;
    state[393] = internal.initial_e_0175;
    state[394] = internal.initial_e_0176;
    state[395] = internal.initial_e_0177;
    state[396] = internal.initial_e_0179;
    state[397] = internal.initial_e_0182;
    state[398] = internal.initial_e_0183;
    state[399] = internal.initial_e_0186;
    state[400] = internal.initial_e_0188;
    state[401] = internal.initial_e_0194;
    state[402] = internal.initial_e_0196;
    state[403] = internal.initial_e_0202;
    state[404] = internal.initial_e_0203;
    state[405] = internal.initial_e_0204;
    state[406] = internal.initial_e_0207;
    state[407] = internal.initial_e_0213;
    state[408] = internal.initial_e_0214;
    state[409] = internal.initial_e_0218;
    state[410] = internal.initial_e_0219;
    state[411] = internal.initial_e_0220;
    state[412] = internal.initial_e_0223;
    state[413] = internal.initial_e_0231;
    state[414] = internal.initial_e_0234;
    state[415] = internal.initial_e_0237;
    state[416] = internal.initial_e_0239;
    state[417] = internal.initial_e_0243;
    state[418] = internal.initial_e_0249;
    state[419] = internal.initial_e_0250;
    state[420] = internal.initial_e_0251;
    state[421] = internal.initial_e_0255;
    state[422] = internal.initial_e_0260;
    state[423] = internal.initial_e_0263;
    state[424] = internal.initial_e_0268;
    state[425] = internal.initial_e_0269;
    state[426] = internal.initial_e_0271;
    state[427] = internal.initial_e_0273;
    state[428] = internal.initial_e_0276;
    state[429] = internal.initial_e_0278;
    state[430] = internal.initial_e_0280;
    state[431] = internal.initial_e_0281;
    state[432] = internal.initial_e_0283;
    state[433] = internal.initial_e_0288;
    state[434] = internal.initial_e_0289;
    state[435] = internal.initial_e_0290;
    state[436] = internal.initial_e_0291;
    state[437] = internal.initial_e_0293;
    state[438] = internal.initial_e_0295;
    state[439] = internal.initial_e_0296;
    state[440] = internal.initial_e_0297;
    state[441] = internal.initial_e_0298;
    state[442] = internal.initial_e_0299;
    state[443] = internal.initial_e_0303;
    state[444] = internal.initial_e_0311;
    state[445] = internal.initial_e_0312;
    state[446] = internal.initial_e_0313;
    state[447] = internal.initial_e_0314;
    state[448] = internal.initial_e_0317;
    state[449] = internal.initial_e_0320;
    state[450] = internal.initial_e_0321;
    state[451] = internal.initial_e_0322;
    state[452] = internal.initial_e_0325;
    state[453] = internal.initial_e_0326;
    state[454] = internal.initial_e_0328;
    state[455] = internal.initial_e_0329;
    state[456] = internal.initial_e_0330;
    state[457] = internal.initial_e_0334;
    state[458] = internal.initial_e_0340;
    state[459] = internal.initial_e_0342;
    state[460] = internal.initial_e_0343;
    state[461] = internal.initial_e_0346;
    state[462] = internal.initial_e_0347;
    state[463] = internal.initial_e_0348;
    state[464] = internal.initial_e_0352;
    state[465] = internal.initial_e_0353;
    state[466] = internal.initial_e_0355;
    state[467] = internal.initial_e_0356;
    state[468] = internal.initial_e_0362;
    state[469] = internal.initial_e_0364;
    state[470] = internal.initial_e_0365;
    state[471] = internal.initial_e_0367;
    state[472] = internal.initial_e_0368;
    state[473] = internal.initial_e_0370;
    state[474] = internal.initial_e_0372;
    state[475] = internal.initial_e_0376;
    state[476] = internal.initial_e_0379;
    state[477] = internal.initial_e_0380;
    state[478] = internal.initial_e_0381;
    state[479] = internal.initial_e_0382;
    state[480] = internal.initial_e_0385;
    state[481] = internal.initial_e_0387;
    state[482] = internal.initial_e_0389;
    state[483] = internal.initial_e_0390;
    state[484] = internal.initial_e_0392;
    state[485] = internal.initial_e_0396;
    state[486] = internal.initial_e_0398;
    state[487] = internal.initial_e_0401;
    state[488] = internal.initial_e_0404;
    state[489] = internal.initial_e_0405;
    state[490] = internal.initial_e_0407;
    state[491] = internal.initial_e_0409;
    state[492] = internal.initial_e_0417;
    state[493] = internal.initial_e_0418;
    state[494] = internal.initial_e_0422;
    state[495] = internal.initial_e_0424;
    state[496] = internal.initial_e_0425;
    state[497] = internal.initial_e_0426;
    state[498] = internal.initial_e_0427;
    state[499] = internal.initial_e_0428;
    state[500] = internal.initial_e_0429;
    state[501] = internal.initial_e_0431;
    state[502] = internal.initial_e_0432;
    state[503] = internal.initial_e_0434;
    state[504] = internal.initial_e_0435;
    state[505] = internal.initial_e_0436;
    state[506] = internal.initial_e_0440;
    state[507] = internal.initial_e_0447;
    state[508] = internal.initial_e_0448;
    state[509] = internal.initial_e_0452;
    state[510] = internal.initial_e_0453;
    state[511] = internal.initial_e_0454;
    state[512] = internal.initial_e_0455;
    state[513] = internal.initial_e_0456;
    state[514] = internal.initial_e_0457;
    state[515] = internal.initial_e_0458;
    state[516] = internal.initial_e_0462;
    state[517] = internal.initial_e_0465;
    state[518] = internal.initial_e_0466;
    state[519] = internal.initial_e_0467;
    state[520] = internal.initial_e_0470;
    state[521] = internal.initial_e_0472;
    state[522] = internal.initial_e_0475;
    state[523] = internal.initial_e_0476;
    state[524] = internal.initial_e_0489;
    state[525] = internal.initial_e_0492;
    state[526] = internal.initial_e_0494;
    state[527] = internal.initial_e_0495;
    state[528] = internal.initial_e_0496;
    state[529] = internal.initial_e_0499;
    state[530] = internal.initial_e_0506;
    state[531] = internal.initial_e_0508;
    state[532] = internal.initial_e_0510;
    state[533] = internal.initial_e_0512;
    state[534] = internal.initial_e_0514;
    state[535] = internal.initial_e_0515;
    state[536] = internal.initial_e_0525;
    state[537] = internal.initial_e_0528;
    state[538] = internal.initial_e_0531;
    state[539] = internal.initial_e_0536;
    state[540] = internal.initial_e_0540;
    state[541] = internal.initial_e_0541;
    state[542] = internal.initial_e_0542;
    state[543] = internal.initial_e_0544;
    state[544] = internal.initial_e_0545;
    state[545] = internal.initial_e_0547;
    state[546] = internal.initial_e_0548;
    state[547] = internal.initial_e_0549;
    state[548] = internal.initial_e_0550;
    state[549] = internal.initial_e_0556;
    state[550] = internal.initial_e_0557;
    state[551] = internal.initial_e_0558;
    state[552] = internal.initial_e_0559;
    state[553] = internal.initial_e_0561;
    state[554] = internal.initial_e_0565;
    state[555] = internal.initial_e_0567;
    state[556] = internal.initial_e_0568;
    state[557] = internal.initial_e_0569;
    state[558] = internal.initial_e_0571;
    state[559] = internal.initial_e_0574;
    state[560] = internal.initial_e_0576;
    state[561] = internal.initial_e_0578;
    state[562] = internal.initial_e_0579;
    state[563] = internal.initial_e_0581;
    state[564] = internal.initial_e_0582;
    state[565] = internal.initial_e_0585;
    state[566] = internal.initial_e_0586;
    state[567] = internal.initial_e_0588;
    state[568] = internal.initial_e_0591;
    state[569] = internal.initial_e_0594;
    state[570] = internal.initial_e_0601;
    state[571] = internal.initial_e_0603;
    state[572] = internal.initial_e_0607;
    state[573] = internal.initial_e_0610;
    state[574] = internal.initial_e_0611;
    state[575] = internal.initial_e_0612;
    state[576] = internal.initial_e_0613;
    state[577] = internal.initial_e_0615;
    state[578] = internal.initial_e_0619;
    state[579] = internal.initial_e_0621;
    state[580] = internal.initial_e_0629;
    state[581] = internal.initial_e_0631;
    state[582] = internal.initial_e_0632;
    state[583] = internal.initial_e_0633;
    state[584] = internal.initial_e_0636;
    state[585] = internal.initial_e_0638;
    state[586] = internal.initial_e_0639;
    state[587] = internal.initial_e_0642;
    state[588] = internal.initial_e_0644;
    state[589] = internal.initial_e_0647;
    state[590] = internal.initial_e_0658;
    state[591] = internal.initial_e_0667;
    state[592] = internal.initial_e_0671;
    state[593] = internal.initial_e_0674;
    state[594] = internal.initial_e_0675;
    state[595] = internal.initial_e_0682;
    state[596] = internal.initial_e_0684;
    state[597] = internal.initial_e_0685;
    state[598] = internal.initial_e_0686;
    state[599] = internal.initial_e_0687;
    state[600] = internal.initial_e_0690;
    state[601] = internal.initial_e_0692;
    state[602] = internal.initial_e_0693;
    state[603] = internal.initial_e_0695;
    state[604] = internal.initial_e_0697;
    state[605] = internal.initial_e_0698;
    state[606] = internal.initial_e_0699;
    state[607] = internal.initial_e_0704;
    state[608] = internal.initial_e_0705;
    state[609] = internal.initial_e_0708;
    state[610] = internal.initial_e_0709;
    state[611] = internal.initial_e_0711;
    state[612] = internal.initial_e_0712;
    state[613] = internal.initial_e_0716;
    state[614] = internal.initial_e_0727;
    state[615] = internal.initial_e_0729;
    state[616] = internal.initial_e_0730;
    state[617] = internal.initial_e_0733;
    state[618] = internal.initial_e_0734;
    state[619] = internal.initial_e_0736;
    state[620] = internal.initial_e_0740;
    state[621] = internal.initial_e_0741;
    state[622] = internal.initial_e_0742;
    state[623] = internal.initial_e_0743;
    state[624] = internal.initial_e_0744;
    state[625] = internal.initial_e_0745;
    state[626] = internal.initial_e_0746;
    state[627] = internal.initial_e_0747;
    state[628] = internal.initial_e_0750;
    state[629] = internal.initial_e_0752;
    state[630] = internal.initial_e_0753;
    state[631] = internal.initial_e_0754;
    state[632] = internal.initial_e_0755;
    state[633] = internal.initial_e_0757;
    state[634] = internal.initial_e_0761;
    state[635] = internal.initial_e_0762;
    state[636] = internal.initial_e_0763;
    state[637] = internal.initial_e_0765;
    state[638] = internal.initial_e_0769;
    state[639] = internal.initial_e_0771;
    state[640] = internal.initial_e_0774;
    state[641] = internal.initial_e_0778;
    state[642] = internal.initial_e_0788;
    state[643] = internal.initial_e_0791;
    state[644] = internal.initial_e_0792;
    state[645] = internal.initial_e_0793;
    state[646] = internal.initial_e_0799;
    state[647] = internal.initial_e_0800;
    state[648] = internal.initial_e_0802;
    state[649] = internal.initial_e_0805;
    state[650] = internal.initial_e_0808;
    state[651] = internal.initial_e_0812;
    state[652] = internal.initial_e_0813;
    state[653] = internal.initial_e_0826;
    state[654] = internal.initial_e_0827;
    state[655] = internal.initial_e_0829;
    state[656] = internal.initial_e_0830;
    state[657] = internal.initial_e_0832;
    state[658] = internal.initial_e_0834;
    state[659] = internal.initial_e_0836;
    state[660] = internal.initial_e_0838;
    state[661] = internal.initial_e_0840;
    state[662] = internal.initial_e_0841;
    state[663] = internal.initial_e_0842;
    state[664] = internal.initial_e_0846;
    state[665] = internal.initial_e_0848;
    state[666] = internal.initial_e_0850;
    state[667] = internal.initial_e_0851;
    state[668] = internal.initial_e_0852;
    state[669] = internal.initial_e_0855;
    state[670] = internal.initial_e_0860;
    state[671] = internal.initial_e_0862;
    state[672] = internal.initial_e_0867;
    state[673] = internal.initial_e_0869;
    state[674] = internal.initial_e_0875;
    state[675] = internal.initial_e_0880;
    state[676] = internal.initial_e_0883;
    state[677] = internal.initial_e_0884;
    state[678] = internal.initial_e_0888;
    state[679] = internal.initial_e_0889;
    state[680] = internal.initial_e_0890;
    state[681] = internal.initial_e_0892;
    state[682] = internal.initial_e_0894;
    state[683] = internal.initial_e_0895;
    state[684] = internal.initial_e_0898;
    state[685] = internal.initial_e_0903;
    state[686] = internal.initial_e_0904;
    state[687] = internal.initial_e_0911;
    state[688] = internal.initial_e_0913;
    state[689] = internal.initial_e_0915;
    state[690] = internal.initial_e_0922;
    state[691] = internal.initial_e_0924;
    state[692] = internal.initial_e_0926;
    state[693] = internal.initial_e_0934;
    state[694] = internal.initial_e_0935;
    state[695] = internal.initial_e_0940;
    state[696] = internal.initial_e_0944;
    state[697] = internal.initial_e_0947;
    state[698] = internal.initial_e_0950;
    state[699] = internal.initial_e_0953;
    state[700] = internal.initial_e_0955;
    state[701] = internal.initial_e_0956;
    state[702] = internal.initial_e_0959;
    state[703] = internal.initial_e_0962;
    state[704] = internal.initial_e_0963;
    state[705] = internal.initial_e_0964;
    state[706] = internal.initial_e_0970;
    state[707] = internal.initial_e_0973;
    state[708] = internal.initial_e_0975;
    state[709] = internal.initial_e_0976;
    state[710] = internal.initial_e_0978;
    state[711] = internal.initial_e_0980;
    state[712] = internal.initial_F26bP;
    return state;
  }
  setUser(user, unusedUserAction) {
    this.base.user.checkUser(user, ["AcAld_init", "ADP_init", "AMP_init", "ATP_init", "BPG_init", "CO2_init", "DHAP_init", "e_0001_init", "e_0002_init", "e_0003_init", "e_0004_init", "e_0005_init", "e_0006_init", "e_0007_init", "e_0008_init", "e_0010_init", "e_0011_init", "e_0012_init", "e_0017_init", "e_0020_init", "e_0022_init", "e_0025_init", "e_0026_init", "e_0028_init", "e_0030_init", "e_0031_init", "e_0033_init", "e_0038_init", "e_0045_init", "e_0051_init", "e_0053_init", "e_0054_init", "e_0057_init", "e_0062_init", "e_0063_init", "e_0064_init", "e_0065_init", "e_0066_init", "e_0069_init", "e_0071_init", "e_0074_init", "e_0079_init", "e_0084_init", "e_0087_init", "e_0088_init", "e_0089_init", "e_0090_init", "e_0091_init", "e_0092_init", "e_0100_init", "e_0101_init", "e_0103_init", "e_0106_init", "e_0107_init", "e_0109_init", "e_0111_init", "e_0113_init", "e_0117_init", "e_0122_init", "e_0124_init", "e_0127_init", "e_0128_init", "e_0129_init", "e_0133_init", "e_0134_init", "e_0135_init", "e_0136_init", "e_0137_init", "e_0141_init", "e_0142_init", "e_0146_init", "e_0151_init", "e_0152_init", "e_0154_init", "e_0155_init", "e_0160_init", "e_0165_init", "e_0167_init", "e_0168_init", "e_0169_init", "e_0171_init", "e_0175_init", "e_0176_init", "e_0177_init", "e_0179_init", "e_0182_init", "e_0183_init", "e_0186_init", "e_0188_init", "e_0194_init", "e_0196_init", "e_0202_init", "e_0203_init", "e_0204_init", "e_0207_init", "e_0213_init", "e_0214_init", "e_0218_init", "e_0219_init", "e_0220_init", "e_0223_init", "e_0231_init", "e_0234_init", "e_0237_init", "e_0239_init", "e_0243_init", "e_0249_init", "e_0250_init", "e_0251_init", "e_0255_init", "e_0260_init", "e_0263_init", "e_0268_init", "e_0269_init", "e_0271_init", "e_0273_init", "e_0276_init", "e_0278_init", "e_0280_init", "e_0281_init", "e_0283_init", "e_0288_init", "e_0289_init", "e_0290_init", "e_0291_init", "e_0293_init", "e_0295_init", "e_0296_init", "e_0297_init", "e_0298_init", "e_0299_init", "e_0303_init", "e_0311_init", "e_0312_init", "e_0313_init", "e_0314_init", "e_0317_init", "e_0320_init", "e_0321_init", "e_0322_init", "e_0325_init", "e_0326_init", "e_0328_init", "e_0329_init", "e_0330_init", "e_0334_init", "e_0340_init", "e_0342_init", "e_0343_init", "e_0346_init", "e_0347_init", "e_0348_init", "e_0352_init", "e_0353_init", "e_0355_init", "e_0356_init", "e_0362_init", "e_0364_init", "e_0365_init", "e_0367_init", "e_0368_init", "e_0370_init", "e_0372_init", "e_0376_init", "e_0379_init", "e_0380_init", "e_0381_init", "e_0382_init", "e_0385_init", "e_0387_init", "e_0389_init", "e_0390_init", "e_0392_init", "e_0396_init", "e_0398_init", "e_0401_init", "e_0404_init", "e_0405_init", "e_0407_init", "e_0409_init", "e_0417_init", "e_0418_init", "e_0422_init", "e_0424_init", "e_0425_init", "e_0426_init", "e_0427_init", "e_0428_init", "e_0429_init", "e_0431_init", "e_0432_init", "e_0434_init", "e_0435_init", "e_0436_init", "e_0440_init", "e_0447_init", "e_0448_init", "e_0452_init", "e_0453_init", "e_0454_init", "e_0455_init", "e_0456_init", "e_0457_init", "e_0458_init", "e_0462_init", "e_0465_init", "e_0466_init", "e_0467_init", "e_0470_init", "e_0472_init", "e_0475_init", "e_0476_init", "e_0489_init", "e_0492_init", "e_0494_init", "e_0495_init", "e_0496_init", "e_0499_init", "e_0506_init", "e_0508_init", "e_0510_init", "e_0512_init", "e_0514_init", "e_0515_init", "e_0525_init", "e_0528_init", "e_0531_init", "e_0536_init", "e_0540_init", "e_0541_init", "e_0542_init", "e_0544_init", "e_0545_init", "e_0547_init", "e_0548_init", "e_0549_init", "e_0550_init", "e_0556_init", "e_0557_init", "e_0558_init", "e_0559_init", "e_0561_init", "e_0565_init", "e_0567_init", "e_0568_init", "e_0569_init", "e_0571_init", "e_0574_init", "e_0576_init", "e_0578_init", "e_0579_init", "e_0581_init", "e_0582_init", "e_0585_init", "e_0586_init", "e_0588_init", "e_0591_init", "e_0594_init", "e_0601_init", "e_0603_init", "e_0607_init", "e_0610_init", "e_0611_init", "e_0612_init", "e_0613_init", "e_0615_init", "e_0619_init", "e_0621_init", "e_0629_init", "e_0631_init", "e_0632_init", "e_0633_init", "e_0636_init", "e_0638_init", "e_0639_init", "e_0642_init", "e_0644_init", "e_0647_init", "e_0658_init", "e_0667_init", "e_0671_init", "e_0674_init", "e_0675_init", "e_0682_init", "e_0684_init", "e_0685_init", "e_0686_init", "e_0687_init", "e_0690_init", "e_0692_init", "e_0693_init", "e_0695_init", "e_0697_init", "e_0698_init", "e_0699_init", "e_0704_init", "e_0705_init", "e_0708_init", "e_0709_init", "e_0711_init", "e_0712_init", "e_0716_init", "e_0727_init", "e_0729_init", "e_0730_init", "e_0733_init", "e_0734_init", "e_0736_init", "e_0740_init", "e_0741_init", "e_0742_init", "e_0743_init", "e_0744_init", "e_0745_init", "e_0746_init", "e_0747_init", "e_0750_init", "e_0752_init", "e_0753_init", "e_0754_init", "e_0755_init", "e_0757_init", "e_0761_init", "e_0762_init", "e_0763_init", "e_0765_init", "e_0769_init", "e_0771_init", "e_0774_init", "e_0778_init", "e_0788_init", "e_0791_init", "e_0792_init", "e_0793_init", "e_0799_init", "e_0800_init", "e_0802_init", "e_0805_init", "e_0808_init", "e_0812_init", "e_0813_init", "e_0826_init", "e_0827_init", "e_0829_init", "e_0830_init", "e_0832_init", "e_0834_init", "e_0836_init", "e_0838_init", "e_0840_init", "e_0841_init", "e_0842_init", "e_0846_init", "e_0848_init", "e_0850_init", "e_0851_init", "e_0852_init", "e_0855_init", "e_0860_init", "e_0862_init", "e_0867_init", "e_0869_init", "e_0875_init", "e_0880_init", "e_0883_init", "e_0884_init", "e_0888_init", "e_0889_init", "e_0890_init", "e_0892_init", "e_0894_init", "e_0895_init", "e_0898_init", "e_0903_init", "e_0904_init", "e_0911_init", "e_0913_init", "e_0915_init", "e_0922_init", "e_0924_init", "e_0926_init", "e_0934_init", "e_0935_init", "e_0940_init", "e_0944_init", "e_0947_init", "e_0950_init", "e_0953_init", "e_0955_init", "e_0956_init", "e_0959_init", "e_0962_init", "e_0963_init", "e_0964_init", "e_0970_init", "e_0973_init", "e_0975_init", "e_0976_init", "e_0978_init", "e_0980_init", "EtOH_init", "F16bP_init", "F26bP_init", "F6P_init", "G6P_init", "GAP_init", "GLC_init", "GLCx_init", "GLY_init", "NAD_init", "NADH_init", "P2G_init", "P3G_init", "PEP_init", "PHO_init", "PYR_init", "s_0002_init", "s_0004_init", "s_0008_init", "s_0009_init", "s_0010_init", "s_0015_init", "s_0016_init", "s_0018_init", "s_0019_init", "s_0025_init", "s_0028_init", "s_0033_init", "s_0037_init", "s_0039_init", "s_0056_init", "s_0061_init", "s_0062_init", "s_0063_init", "s_0066_init", "s_0076_init", "s_0077_init", "s_0078_init", "s_0082_init", "s_0086_init", "s_0089_init", "s_0118_init", "s_0120_init", "s_0122_init", "s_0126_init", "s_0141_init", "s_0142_init", "s_0145_init", "s_0146_init", "s_0158_init", "s_0162_init", "s_0165_init", "s_0176_init", "s_0178_init", "s_0180_init", "s_0190_init", "s_0201_init", "s_0204_init", "s_0207_init", "s_0209_init", "s_0210_init", "s_0211_init", "s_0218_init", "s_0231_init", "s_0232_init", "s_0261_init", "s_0262_init", "s_0291_init", "s_0295_init", "s_0296_init", "s_0297_init", "s_0298_init", "s_0299_init", "s_0300_init", "s_0301_init", "s_0302_init", "s_0304_init", "s_0306_init", "s_0312_init", "s_0313_init", "s_0314_init", "s_0322_init", "s_0324_init", "s_0325_init", "s_0326_init", "s_0327_init", "s_0328_init", "s_0335_init", "s_0340_init", "s_0349_init", "s_0360_init", "s_0362_init", "s_0367_init", "s_0373_init", "s_0380_init", "s_0386_init", "s_0390_init", "s_0393_init", "s_0403_init", "s_0404_init", "s_0409_init", "s_0419_init", "s_0420_init", "s_0427_init", "s_0428_init", "s_0430_init", "s_0432_init", "s_0445_init", "s_0454_init", "s_0455_init", "s_0458_init", "s_0467_init", "s_0471_init", "s_0478_init", "s_0505_init", "s_0515_init", "s_0516_init", "s_0522_init", "s_0526_init", "s_0529_init", "s_0539_init", "s_0542_init", "s_0550_init", "s_0551_init", "s_0567_init", "s_0573_init", "s_0574_init", "s_0577_init", "s_0581_init", "s_0582_init", "s_0584_init", "s_0586_init", "s_0587_init", "s_0589_init", "s_0595_init", "s_0602_init", "s_0613_init", "s_0615_init", "s_0619_init", "s_0625_init", "s_0633_init", "s_0644_init", "s_0645_init", "s_0649_init", "s_0654_init", "s_0656_init", "s_0657_init", "s_0662_init", "s_0666_init", "s_0672_init", "s_0681_init", "s_0700_init", "s_0709_init", "s_0710_init", "s_0722_init", "s_0725_init", "s_0739_init", "s_0743_init", "s_0745_init", "s_0747_init", "s_0748_init", "s_0750_init", "s_0757_init", "s_0766_init", "s_0767_init", "s_0773_init", "s_0779_init", "s_0782_init", "s_0785_init", "s_0816_init", "s_0832_init", "s_0835_init", "s_0836_init", "s_0841_init", "s_0847_init", "s_0849_init", "s_0897_init", "s_0940_init", "s_0943_init", "s_0951_init", "s_0953_init", "s_0955_init", "s_0959_init", "s_0965_init", "s_0969_init", "s_0973_init", "s_0978_init", "s_0979_init", "s_0980_init", "s_0981_init", "s_0991_init", "s_0999_init", "s_1003_init", "s_1006_init", "s_1010_init", "s_1011_init", "s_1012_init", "s_1014_init", "s_1016_init", "s_1021_init", "s_1025_init", "s_1029_init", "s_1032_init", "s_1035_init", "s_1038_init", "s_1039_init", "s_1045_init", "s_1048_init", "s_1051_init", "s_1056_init", "s_1059_init", "s_1065_init", "s_1073_init", "s_1077_init", "s_1084_init", "s_1099_init", "s_1101_init", "s_1107_init", "s_1148_init", "s_1151_init", "s_1153_init", "s_1161_init", "s_1176_init", "s_1182_init", "s_1187_init", "s_1191_init", "s_1192_init", "s_1194_init", "s_1207_init", "s_1212_init", "s_1233_init", "s_1238_init", "s_1255_init", "s_1266_init", "s_1269_init", "s_1270_init", "s_1271_init", "s_1275_init", "s_1277_init", "s_1286_init", "s_1302_init", "s_1314_init", "s_1324_init", "s_1331_init", "s_1337_init", "s_1342_init", "s_1343_init", "s_1346_init", "s_1351_init", "s_1364_init", "s_1365_init", "s_1376_init", "s_1377_init", "s_1379_init", "s_1386_init", "s_1405_init", "s_1408_init", "s_1413_init", "s_1416_init", "s_1426_init", "s_1427_init", "s_1428_init", "s_1429_init", "s_1445_init", "s_1447_init", "s_1449_init", "s_1454_init", "s_1458_init", "s_1459_init", "s_1467_init", "s_1468_init", "s_1469_init", "s_1487_init", "s_1491_init", "s_1520_init", "s_1524_init", "s_1527_init", "s_1533_init", "s_1535_init", "s_1537_init", "s_1538_init", "s_1543_init", "s_1545_init", "s_1559_init", "s_1561_init", "s_1565_init", "s_1569_init", "s_1576_init", "s_1577_init", "s_1578_init", "s_1579_init", "s_1582_init", "s_1583_init", "s_1585_init", "s_1587_init", "s_1589_init", "s_1590_init", "s_1591_init", "s_1593_init", "s_1594_init", "s_1596_init", "s_1598_init", "s_1600_init", "s_1602_init", "s_1604_init", "s_1606_init", "s_1607_init", "s_1608_init", "s_1610_init", "s_1612_init", "s_1614_init", "s_1616_init", "s_1620_init"], unusedUserAction);
    var internal = this.internal;
    this.base.user.setUserScalar(user, "AcAld_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ADP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "AMP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ATP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "BPG_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "CO2_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "DHAP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0001_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0002_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0003_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0004_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0005_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0006_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0007_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0008_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0010_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0011_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0012_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0017_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0020_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0022_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0025_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0026_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0028_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0030_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0031_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0033_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0038_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0045_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0051_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0053_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0054_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0057_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0062_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0063_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0064_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0065_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0066_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0069_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0071_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0074_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0079_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0084_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0087_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0088_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0089_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0090_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0091_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0092_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0100_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0101_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0103_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0106_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0107_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0109_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0111_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0113_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0117_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0122_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0124_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0127_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0128_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0129_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0133_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0134_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0135_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0136_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0137_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0141_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0142_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0146_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0151_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0152_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0154_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0155_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0160_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0165_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0167_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0168_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0169_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0171_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0175_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0176_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0177_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0179_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0182_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0183_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0186_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0188_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0194_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0196_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0202_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0203_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0204_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0207_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0213_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0214_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0218_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0219_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0220_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0223_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0231_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0234_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0237_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0239_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0243_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0249_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0250_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0251_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0255_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0260_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0263_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0268_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0269_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0271_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0273_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0276_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0278_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0280_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0281_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0283_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0288_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0289_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0290_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0291_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0293_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0295_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0296_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0297_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0298_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0299_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0303_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0311_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0312_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0313_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0314_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0317_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0320_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0321_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0322_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0325_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0326_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0328_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0329_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0330_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0334_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0340_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0342_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0343_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0346_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0347_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0348_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0352_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0353_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0355_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0356_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0362_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0364_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0365_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0367_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0368_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0370_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0372_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0376_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0379_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0380_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0381_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0382_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0385_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0387_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0389_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0390_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0392_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0396_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0398_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0401_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0404_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0405_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0407_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0409_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0417_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0418_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0422_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0424_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0425_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0426_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0427_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0428_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0429_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0431_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0432_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0434_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0435_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0436_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0440_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0447_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0448_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0452_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0453_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0454_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0455_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0456_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0457_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0458_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0462_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0465_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0466_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0467_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0470_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0472_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0475_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0476_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0489_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0492_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0494_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0495_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0496_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0499_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0506_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0508_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0510_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0512_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0514_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0515_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0525_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0528_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0531_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0536_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0540_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0541_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0542_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0544_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0545_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0547_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0548_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0549_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0550_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0556_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0557_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0558_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0559_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0561_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0565_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0567_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0568_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0569_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0571_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0574_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0576_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0578_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0579_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0581_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0582_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0585_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0586_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0588_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0591_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0594_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0601_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0603_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0607_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0610_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0611_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0612_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0613_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0615_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0619_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0621_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0629_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0631_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0632_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0633_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0636_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0638_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0639_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0642_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0644_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0647_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0658_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0667_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0671_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0674_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0675_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0682_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0684_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0685_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0686_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0687_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0690_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0692_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0693_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0695_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0697_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0698_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0699_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0704_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0705_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0708_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0709_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0711_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0712_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0716_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0727_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0729_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0730_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0733_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0734_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0736_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0740_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0741_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0742_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0743_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0744_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0745_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0746_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0747_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0750_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0752_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0753_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0754_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0755_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0757_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0761_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0762_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0763_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0765_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0769_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0771_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0774_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0778_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0788_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0791_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0792_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0793_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0799_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0800_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0802_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0805_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0808_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0812_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0813_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0826_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0827_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0829_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0830_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0832_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0834_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0836_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0838_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0840_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0841_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0842_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0846_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0848_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0850_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0851_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0852_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0855_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0860_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0862_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0867_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0869_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0875_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0880_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0883_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0884_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0888_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0889_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0890_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0892_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0894_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0895_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0898_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0903_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0904_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0911_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0913_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0915_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0922_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0924_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0926_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0934_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0935_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0940_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0944_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0947_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0950_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0953_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0955_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0956_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0959_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0962_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0963_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0964_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0970_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0973_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0975_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0976_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0978_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "e_0980_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "EtOH_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "F16bP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "F26bP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "F6P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "G6P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GAP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GLC_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GLCx_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GLY_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "NAD_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "NADH_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "P2G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "P3G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PEP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PHO_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PYR_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0002_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0004_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0008_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0009_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0010_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0015_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0016_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0018_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0019_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0025_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0028_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0033_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0037_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0039_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0056_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0061_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0062_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0063_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0066_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0076_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0077_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0078_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0082_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0086_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0089_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0118_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0120_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0122_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0126_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0141_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0142_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0145_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0146_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0158_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0162_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0165_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0176_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0178_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0180_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0190_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0201_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0204_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0207_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0209_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0210_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0211_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0218_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0231_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0232_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0261_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0262_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0291_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0295_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0296_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0297_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0298_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0299_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0300_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0301_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0302_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0304_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0306_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0312_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0313_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0314_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0322_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0324_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0325_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0326_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0327_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0328_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0335_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0340_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0349_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0360_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0362_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0367_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0373_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0380_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0386_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0390_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0393_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0403_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0404_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0409_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0419_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0420_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0427_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0428_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0430_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0432_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0445_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0454_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0455_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0458_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0467_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0471_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0478_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0505_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0515_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0516_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0522_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0526_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0529_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0539_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0542_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0550_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0551_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0567_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0573_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0574_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0577_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0581_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0582_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0584_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0586_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0587_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0589_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0595_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0602_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0613_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0615_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0619_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0625_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0633_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0644_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0645_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0649_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0654_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0656_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0657_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0662_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0666_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0672_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0681_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0700_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0709_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0710_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0722_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0725_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0739_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0743_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0745_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0747_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0748_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0750_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0757_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0766_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0767_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0773_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0779_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0782_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0785_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0816_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0832_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0835_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0836_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0841_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0847_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0849_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0897_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0940_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0943_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0951_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0953_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0955_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0959_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0965_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0969_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0973_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0978_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0979_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0980_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0981_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0991_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_0999_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1003_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1006_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1010_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1011_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1012_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1014_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1016_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1021_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1025_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1029_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1032_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1035_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1038_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1039_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1045_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1048_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1051_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1056_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1059_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1065_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1073_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1077_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1084_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1099_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1101_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1107_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1148_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1151_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1153_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1161_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1176_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1182_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1187_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1191_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1192_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1194_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1207_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1212_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1233_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1238_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1255_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1266_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1269_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1270_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1271_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1275_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1277_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1286_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1302_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1314_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1324_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1331_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1337_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1342_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1343_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1346_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1351_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1364_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1365_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1376_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1377_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1379_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1386_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1405_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1408_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1413_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1416_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1426_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1427_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1428_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1429_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1445_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1447_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1449_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1454_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1458_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1459_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1467_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1468_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1469_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1487_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1491_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1520_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1524_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1527_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1533_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1535_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1537_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1538_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1543_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1545_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1559_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1561_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1565_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1569_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1576_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1577_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1578_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1579_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1582_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1583_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1585_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1587_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1589_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1590_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1591_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1593_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1594_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1596_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1598_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1600_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1602_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1604_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1606_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1607_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1608_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1610_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1612_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1614_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1616_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "s_1620_init", internal, 0, -Infinity, Infinity, false);
    internal.initial_AcAld = internal.AcAld_init;
    internal.initial_ADP = internal.ADP_init;
    internal.initial_AMP = internal.AMP_init;
    internal.initial_ATP = internal.ATP_init;
    internal.initial_BPG = internal.BPG_init;
    internal.initial_CO2 = internal.CO2_init;
    internal.initial_DHAP = internal.DHAP_init;
    internal.initial_e_0001 = internal.e_0001_init;
    internal.initial_e_0002 = internal.e_0002_init;
    internal.initial_e_0003 = internal.e_0003_init;
    internal.initial_e_0004 = internal.e_0004_init;
    internal.initial_e_0005 = internal.e_0005_init;
    internal.initial_e_0006 = internal.e_0006_init;
    internal.initial_e_0007 = internal.e_0007_init;
    internal.initial_e_0008 = internal.e_0008_init;
    internal.initial_e_0010 = internal.e_0010_init;
    internal.initial_e_0011 = internal.e_0011_init;
    internal.initial_e_0012 = internal.e_0012_init;
    internal.initial_e_0017 = internal.e_0017_init;
    internal.initial_e_0020 = internal.e_0020_init;
    internal.initial_e_0022 = internal.e_0022_init;
    internal.initial_e_0025 = internal.e_0025_init;
    internal.initial_e_0026 = internal.e_0026_init;
    internal.initial_e_0028 = internal.e_0028_init;
    internal.initial_e_0030 = internal.e_0030_init;
    internal.initial_e_0031 = internal.e_0031_init;
    internal.initial_e_0033 = internal.e_0033_init;
    internal.initial_e_0038 = internal.e_0038_init;
    internal.initial_e_0045 = internal.e_0045_init;
    internal.initial_e_0051 = internal.e_0051_init;
    internal.initial_e_0053 = internal.e_0053_init;
    internal.initial_e_0054 = internal.e_0054_init;
    internal.initial_e_0057 = internal.e_0057_init;
    internal.initial_e_0062 = internal.e_0062_init;
    internal.initial_e_0063 = internal.e_0063_init;
    internal.initial_e_0064 = internal.e_0064_init;
    internal.initial_e_0065 = internal.e_0065_init;
    internal.initial_e_0066 = internal.e_0066_init;
    internal.initial_e_0069 = internal.e_0069_init;
    internal.initial_e_0071 = internal.e_0071_init;
    internal.initial_e_0074 = internal.e_0074_init;
    internal.initial_e_0079 = internal.e_0079_init;
    internal.initial_e_0084 = internal.e_0084_init;
    internal.initial_e_0087 = internal.e_0087_init;
    internal.initial_e_0088 = internal.e_0088_init;
    internal.initial_e_0089 = internal.e_0089_init;
    internal.initial_e_0090 = internal.e_0090_init;
    internal.initial_e_0091 = internal.e_0091_init;
    internal.initial_e_0092 = internal.e_0092_init;
    internal.initial_e_0100 = internal.e_0100_init;
    internal.initial_e_0101 = internal.e_0101_init;
    internal.initial_e_0103 = internal.e_0103_init;
    internal.initial_e_0106 = internal.e_0106_init;
    internal.initial_e_0107 = internal.e_0107_init;
    internal.initial_e_0109 = internal.e_0109_init;
    internal.initial_e_0111 = internal.e_0111_init;
    internal.initial_e_0113 = internal.e_0113_init;
    internal.initial_e_0117 = internal.e_0117_init;
    internal.initial_e_0122 = internal.e_0122_init;
    internal.initial_e_0124 = internal.e_0124_init;
    internal.initial_e_0127 = internal.e_0127_init;
    internal.initial_e_0128 = internal.e_0128_init;
    internal.initial_e_0129 = internal.e_0129_init;
    internal.initial_e_0133 = internal.e_0133_init;
    internal.initial_e_0134 = internal.e_0134_init;
    internal.initial_e_0135 = internal.e_0135_init;
    internal.initial_e_0136 = internal.e_0136_init;
    internal.initial_e_0137 = internal.e_0137_init;
    internal.initial_e_0141 = internal.e_0141_init;
    internal.initial_e_0142 = internal.e_0142_init;
    internal.initial_e_0146 = internal.e_0146_init;
    internal.initial_e_0151 = internal.e_0151_init;
    internal.initial_e_0152 = internal.e_0152_init;
    internal.initial_e_0154 = internal.e_0154_init;
    internal.initial_e_0155 = internal.e_0155_init;
    internal.initial_e_0160 = internal.e_0160_init;
    internal.initial_e_0165 = internal.e_0165_init;
    internal.initial_e_0167 = internal.e_0167_init;
    internal.initial_e_0168 = internal.e_0168_init;
    internal.initial_e_0169 = internal.e_0169_init;
    internal.initial_e_0171 = internal.e_0171_init;
    internal.initial_e_0175 = internal.e_0175_init;
    internal.initial_e_0176 = internal.e_0176_init;
    internal.initial_e_0177 = internal.e_0177_init;
    internal.initial_e_0179 = internal.e_0179_init;
    internal.initial_e_0182 = internal.e_0182_init;
    internal.initial_e_0183 = internal.e_0183_init;
    internal.initial_e_0186 = internal.e_0186_init;
    internal.initial_e_0188 = internal.e_0188_init;
    internal.initial_e_0194 = internal.e_0194_init;
    internal.initial_e_0196 = internal.e_0196_init;
    internal.initial_e_0202 = internal.e_0202_init;
    internal.initial_e_0203 = internal.e_0203_init;
    internal.initial_e_0204 = internal.e_0204_init;
    internal.initial_e_0207 = internal.e_0207_init;
    internal.initial_e_0213 = internal.e_0213_init;
    internal.initial_e_0214 = internal.e_0214_init;
    internal.initial_e_0218 = internal.e_0218_init;
    internal.initial_e_0219 = internal.e_0219_init;
    internal.initial_e_0220 = internal.e_0220_init;
    internal.initial_e_0223 = internal.e_0223_init;
    internal.initial_e_0231 = internal.e_0231_init;
    internal.initial_e_0234 = internal.e_0234_init;
    internal.initial_e_0237 = internal.e_0237_init;
    internal.initial_e_0239 = internal.e_0239_init;
    internal.initial_e_0243 = internal.e_0243_init;
    internal.initial_e_0249 = internal.e_0249_init;
    internal.initial_e_0250 = internal.e_0250_init;
    internal.initial_e_0251 = internal.e_0251_init;
    internal.initial_e_0255 = internal.e_0255_init;
    internal.initial_e_0260 = internal.e_0260_init;
    internal.initial_e_0263 = internal.e_0263_init;
    internal.initial_e_0268 = internal.e_0268_init;
    internal.initial_e_0269 = internal.e_0269_init;
    internal.initial_e_0271 = internal.e_0271_init;
    internal.initial_e_0273 = internal.e_0273_init;
    internal.initial_e_0276 = internal.e_0276_init;
    internal.initial_e_0278 = internal.e_0278_init;
    internal.initial_e_0280 = internal.e_0280_init;
    internal.initial_e_0281 = internal.e_0281_init;
    internal.initial_e_0283 = internal.e_0283_init;
    internal.initial_e_0288 = internal.e_0288_init;
    internal.initial_e_0289 = internal.e_0289_init;
    internal.initial_e_0290 = internal.e_0290_init;
    internal.initial_e_0291 = internal.e_0291_init;
    internal.initial_e_0293 = internal.e_0293_init;
    internal.initial_e_0295 = internal.e_0295_init;
    internal.initial_e_0296 = internal.e_0296_init;
    internal.initial_e_0297 = internal.e_0297_init;
    internal.initial_e_0298 = internal.e_0298_init;
    internal.initial_e_0299 = internal.e_0299_init;
    internal.initial_e_0303 = internal.e_0303_init;
    internal.initial_e_0311 = internal.e_0311_init;
    internal.initial_e_0312 = internal.e_0312_init;
    internal.initial_e_0313 = internal.e_0313_init;
    internal.initial_e_0314 = internal.e_0314_init;
    internal.initial_e_0317 = internal.e_0317_init;
    internal.initial_e_0320 = internal.e_0320_init;
    internal.initial_e_0321 = internal.e_0321_init;
    internal.initial_e_0322 = internal.e_0322_init;
    internal.initial_e_0325 = internal.e_0325_init;
    internal.initial_e_0326 = internal.e_0326_init;
    internal.initial_e_0328 = internal.e_0328_init;
    internal.initial_e_0329 = internal.e_0329_init;
    internal.initial_e_0330 = internal.e_0330_init;
    internal.initial_e_0334 = internal.e_0334_init;
    internal.initial_e_0340 = internal.e_0340_init;
    internal.initial_e_0342 = internal.e_0342_init;
    internal.initial_e_0343 = internal.e_0343_init;
    internal.initial_e_0346 = internal.e_0346_init;
    internal.initial_e_0347 = internal.e_0347_init;
    internal.initial_e_0348 = internal.e_0348_init;
    internal.initial_e_0352 = internal.e_0352_init;
    internal.initial_e_0353 = internal.e_0353_init;
    internal.initial_e_0355 = internal.e_0355_init;
    internal.initial_e_0356 = internal.e_0356_init;
    internal.initial_e_0362 = internal.e_0362_init;
    internal.initial_e_0364 = internal.e_0364_init;
    internal.initial_e_0365 = internal.e_0365_init;
    internal.initial_e_0367 = internal.e_0367_init;
    internal.initial_e_0368 = internal.e_0368_init;
    internal.initial_e_0370 = internal.e_0370_init;
    internal.initial_e_0372 = internal.e_0372_init;
    internal.initial_e_0376 = internal.e_0376_init;
    internal.initial_e_0379 = internal.e_0379_init;
    internal.initial_e_0380 = internal.e_0380_init;
    internal.initial_e_0381 = internal.e_0381_init;
    internal.initial_e_0382 = internal.e_0382_init;
    internal.initial_e_0385 = internal.e_0385_init;
    internal.initial_e_0387 = internal.e_0387_init;
    internal.initial_e_0389 = internal.e_0389_init;
    internal.initial_e_0390 = internal.e_0390_init;
    internal.initial_e_0392 = internal.e_0392_init;
    internal.initial_e_0396 = internal.e_0396_init;
    internal.initial_e_0398 = internal.e_0398_init;
    internal.initial_e_0401 = internal.e_0401_init;
    internal.initial_e_0404 = internal.e_0404_init;
    internal.initial_e_0405 = internal.e_0405_init;
    internal.initial_e_0407 = internal.e_0407_init;
    internal.initial_e_0409 = internal.e_0409_init;
    internal.initial_e_0417 = internal.e_0417_init;
    internal.initial_e_0418 = internal.e_0418_init;
    internal.initial_e_0422 = internal.e_0422_init;
    internal.initial_e_0424 = internal.e_0424_init;
    internal.initial_e_0425 = internal.e_0425_init;
    internal.initial_e_0426 = internal.e_0426_init;
    internal.initial_e_0427 = internal.e_0427_init;
    internal.initial_e_0428 = internal.e_0428_init;
    internal.initial_e_0429 = internal.e_0429_init;
    internal.initial_e_0431 = internal.e_0431_init;
    internal.initial_e_0432 = internal.e_0432_init;
    internal.initial_e_0434 = internal.e_0434_init;
    internal.initial_e_0435 = internal.e_0435_init;
    internal.initial_e_0436 = internal.e_0436_init;
    internal.initial_e_0440 = internal.e_0440_init;
    internal.initial_e_0447 = internal.e_0447_init;
    internal.initial_e_0448 = internal.e_0448_init;
    internal.initial_e_0452 = internal.e_0452_init;
    internal.initial_e_0453 = internal.e_0453_init;
    internal.initial_e_0454 = internal.e_0454_init;
    internal.initial_e_0455 = internal.e_0455_init;
    internal.initial_e_0456 = internal.e_0456_init;
    internal.initial_e_0457 = internal.e_0457_init;
    internal.initial_e_0458 = internal.e_0458_init;
    internal.initial_e_0462 = internal.e_0462_init;
    internal.initial_e_0465 = internal.e_0465_init;
    internal.initial_e_0466 = internal.e_0466_init;
    internal.initial_e_0467 = internal.e_0467_init;
    internal.initial_e_0470 = internal.e_0470_init;
    internal.initial_e_0472 = internal.e_0472_init;
    internal.initial_e_0475 = internal.e_0475_init;
    internal.initial_e_0476 = internal.e_0476_init;
    internal.initial_e_0489 = internal.e_0489_init;
    internal.initial_e_0492 = internal.e_0492_init;
    internal.initial_e_0494 = internal.e_0494_init;
    internal.initial_e_0495 = internal.e_0495_init;
    internal.initial_e_0496 = internal.e_0496_init;
    internal.initial_e_0499 = internal.e_0499_init;
    internal.initial_e_0506 = internal.e_0506_init;
    internal.initial_e_0508 = internal.e_0508_init;
    internal.initial_e_0510 = internal.e_0510_init;
    internal.initial_e_0512 = internal.e_0512_init;
    internal.initial_e_0514 = internal.e_0514_init;
    internal.initial_e_0515 = internal.e_0515_init;
    internal.initial_e_0525 = internal.e_0525_init;
    internal.initial_e_0528 = internal.e_0528_init;
    internal.initial_e_0531 = internal.e_0531_init;
    internal.initial_e_0536 = internal.e_0536_init;
    internal.initial_e_0540 = internal.e_0540_init;
    internal.initial_e_0541 = internal.e_0541_init;
    internal.initial_e_0542 = internal.e_0542_init;
    internal.initial_e_0544 = internal.e_0544_init;
    internal.initial_e_0545 = internal.e_0545_init;
    internal.initial_e_0547 = internal.e_0547_init;
    internal.initial_e_0548 = internal.e_0548_init;
    internal.initial_e_0549 = internal.e_0549_init;
    internal.initial_e_0550 = internal.e_0550_init;
    internal.initial_e_0556 = internal.e_0556_init;
    internal.initial_e_0557 = internal.e_0557_init;
    internal.initial_e_0558 = internal.e_0558_init;
    internal.initial_e_0559 = internal.e_0559_init;
    internal.initial_e_0561 = internal.e_0561_init;
    internal.initial_e_0565 = internal.e_0565_init;
    internal.initial_e_0567 = internal.e_0567_init;
    internal.initial_e_0568 = internal.e_0568_init;
    internal.initial_e_0569 = internal.e_0569_init;
    internal.initial_e_0571 = internal.e_0571_init;
    internal.initial_e_0574 = internal.e_0574_init;
    internal.initial_e_0576 = internal.e_0576_init;
    internal.initial_e_0578 = internal.e_0578_init;
    internal.initial_e_0579 = internal.e_0579_init;
    internal.initial_e_0581 = internal.e_0581_init;
    internal.initial_e_0582 = internal.e_0582_init;
    internal.initial_e_0585 = internal.e_0585_init;
    internal.initial_e_0586 = internal.e_0586_init;
    internal.initial_e_0588 = internal.e_0588_init;
    internal.initial_e_0591 = internal.e_0591_init;
    internal.initial_e_0594 = internal.e_0594_init;
    internal.initial_e_0601 = internal.e_0601_init;
    internal.initial_e_0603 = internal.e_0603_init;
    internal.initial_e_0607 = internal.e_0607_init;
    internal.initial_e_0610 = internal.e_0610_init;
    internal.initial_e_0611 = internal.e_0611_init;
    internal.initial_e_0612 = internal.e_0612_init;
    internal.initial_e_0613 = internal.e_0613_init;
    internal.initial_e_0615 = internal.e_0615_init;
    internal.initial_e_0619 = internal.e_0619_init;
    internal.initial_e_0621 = internal.e_0621_init;
    internal.initial_e_0629 = internal.e_0629_init;
    internal.initial_e_0631 = internal.e_0631_init;
    internal.initial_e_0632 = internal.e_0632_init;
    internal.initial_e_0633 = internal.e_0633_init;
    internal.initial_e_0636 = internal.e_0636_init;
    internal.initial_e_0638 = internal.e_0638_init;
    internal.initial_e_0639 = internal.e_0639_init;
    internal.initial_e_0642 = internal.e_0642_init;
    internal.initial_e_0644 = internal.e_0644_init;
    internal.initial_e_0647 = internal.e_0647_init;
    internal.initial_e_0658 = internal.e_0658_init;
    internal.initial_e_0667 = internal.e_0667_init;
    internal.initial_e_0671 = internal.e_0671_init;
    internal.initial_e_0674 = internal.e_0674_init;
    internal.initial_e_0675 = internal.e_0675_init;
    internal.initial_e_0682 = internal.e_0682_init;
    internal.initial_e_0684 = internal.e_0684_init;
    internal.initial_e_0685 = internal.e_0685_init;
    internal.initial_e_0686 = internal.e_0686_init;
    internal.initial_e_0687 = internal.e_0687_init;
    internal.initial_e_0690 = internal.e_0690_init;
    internal.initial_e_0692 = internal.e_0692_init;
    internal.initial_e_0693 = internal.e_0693_init;
    internal.initial_e_0695 = internal.e_0695_init;
    internal.initial_e_0697 = internal.e_0697_init;
    internal.initial_e_0698 = internal.e_0698_init;
    internal.initial_e_0699 = internal.e_0699_init;
    internal.initial_e_0704 = internal.e_0704_init;
    internal.initial_e_0705 = internal.e_0705_init;
    internal.initial_e_0708 = internal.e_0708_init;
    internal.initial_e_0709 = internal.e_0709_init;
    internal.initial_e_0711 = internal.e_0711_init;
    internal.initial_e_0712 = internal.e_0712_init;
    internal.initial_e_0716 = internal.e_0716_init;
    internal.initial_e_0727 = internal.e_0727_init;
    internal.initial_e_0729 = internal.e_0729_init;
    internal.initial_e_0730 = internal.e_0730_init;
    internal.initial_e_0733 = internal.e_0733_init;
    internal.initial_e_0734 = internal.e_0734_init;
    internal.initial_e_0736 = internal.e_0736_init;
    internal.initial_e_0740 = internal.e_0740_init;
    internal.initial_e_0741 = internal.e_0741_init;
    internal.initial_e_0742 = internal.e_0742_init;
    internal.initial_e_0743 = internal.e_0743_init;
    internal.initial_e_0744 = internal.e_0744_init;
    internal.initial_e_0745 = internal.e_0745_init;
    internal.initial_e_0746 = internal.e_0746_init;
    internal.initial_e_0747 = internal.e_0747_init;
    internal.initial_e_0750 = internal.e_0750_init;
    internal.initial_e_0752 = internal.e_0752_init;
    internal.initial_e_0753 = internal.e_0753_init;
    internal.initial_e_0754 = internal.e_0754_init;
    internal.initial_e_0755 = internal.e_0755_init;
    internal.initial_e_0757 = internal.e_0757_init;
    internal.initial_e_0761 = internal.e_0761_init;
    internal.initial_e_0762 = internal.e_0762_init;
    internal.initial_e_0763 = internal.e_0763_init;
    internal.initial_e_0765 = internal.e_0765_init;
    internal.initial_e_0769 = internal.e_0769_init;
    internal.initial_e_0771 = internal.e_0771_init;
    internal.initial_e_0774 = internal.e_0774_init;
    internal.initial_e_0778 = internal.e_0778_init;
    internal.initial_e_0788 = internal.e_0788_init;
    internal.initial_e_0791 = internal.e_0791_init;
    internal.initial_e_0792 = internal.e_0792_init;
    internal.initial_e_0793 = internal.e_0793_init;
    internal.initial_e_0799 = internal.e_0799_init;
    internal.initial_e_0800 = internal.e_0800_init;
    internal.initial_e_0802 = internal.e_0802_init;
    internal.initial_e_0805 = internal.e_0805_init;
    internal.initial_e_0808 = internal.e_0808_init;
    internal.initial_e_0812 = internal.e_0812_init;
    internal.initial_e_0813 = internal.e_0813_init;
    internal.initial_e_0826 = internal.e_0826_init;
    internal.initial_e_0827 = internal.e_0827_init;
    internal.initial_e_0829 = internal.e_0829_init;
    internal.initial_e_0830 = internal.e_0830_init;
    internal.initial_e_0832 = internal.e_0832_init;
    internal.initial_e_0834 = internal.e_0834_init;
    internal.initial_e_0836 = internal.e_0836_init;
    internal.initial_e_0838 = internal.e_0838_init;
    internal.initial_e_0840 = internal.e_0840_init;
    internal.initial_e_0841 = internal.e_0841_init;
    internal.initial_e_0842 = internal.e_0842_init;
    internal.initial_e_0846 = internal.e_0846_init;
    internal.initial_e_0848 = internal.e_0848_init;
    internal.initial_e_0850 = internal.e_0850_init;
    internal.initial_e_0851 = internal.e_0851_init;
    internal.initial_e_0852 = internal.e_0852_init;
    internal.initial_e_0855 = internal.e_0855_init;
    internal.initial_e_0860 = internal.e_0860_init;
    internal.initial_e_0862 = internal.e_0862_init;
    internal.initial_e_0867 = internal.e_0867_init;
    internal.initial_e_0869 = internal.e_0869_init;
    internal.initial_e_0875 = internal.e_0875_init;
    internal.initial_e_0880 = internal.e_0880_init;
    internal.initial_e_0883 = internal.e_0883_init;
    internal.initial_e_0884 = internal.e_0884_init;
    internal.initial_e_0888 = internal.e_0888_init;
    internal.initial_e_0889 = internal.e_0889_init;
    internal.initial_e_0890 = internal.e_0890_init;
    internal.initial_e_0892 = internal.e_0892_init;
    internal.initial_e_0894 = internal.e_0894_init;
    internal.initial_e_0895 = internal.e_0895_init;
    internal.initial_e_0898 = internal.e_0898_init;
    internal.initial_e_0903 = internal.e_0903_init;
    internal.initial_e_0904 = internal.e_0904_init;
    internal.initial_e_0911 = internal.e_0911_init;
    internal.initial_e_0913 = internal.e_0913_init;
    internal.initial_e_0915 = internal.e_0915_init;
    internal.initial_e_0922 = internal.e_0922_init;
    internal.initial_e_0924 = internal.e_0924_init;
    internal.initial_e_0926 = internal.e_0926_init;
    internal.initial_e_0934 = internal.e_0934_init;
    internal.initial_e_0935 = internal.e_0935_init;
    internal.initial_e_0940 = internal.e_0940_init;
    internal.initial_e_0944 = internal.e_0944_init;
    internal.initial_e_0947 = internal.e_0947_init;
    internal.initial_e_0950 = internal.e_0950_init;
    internal.initial_e_0953 = internal.e_0953_init;
    internal.initial_e_0955 = internal.e_0955_init;
    internal.initial_e_0956 = internal.e_0956_init;
    internal.initial_e_0959 = internal.e_0959_init;
    internal.initial_e_0962 = internal.e_0962_init;
    internal.initial_e_0963 = internal.e_0963_init;
    internal.initial_e_0964 = internal.e_0964_init;
    internal.initial_e_0970 = internal.e_0970_init;
    internal.initial_e_0973 = internal.e_0973_init;
    internal.initial_e_0975 = internal.e_0975_init;
    internal.initial_e_0976 = internal.e_0976_init;
    internal.initial_e_0978 = internal.e_0978_init;
    internal.initial_e_0980 = internal.e_0980_init;
    internal.initial_EtOH = internal.EtOH_init;
    internal.initial_F16bP = internal.F16bP_init;
    internal.initial_F26bP = internal.F26bP_init;
    internal.initial_F6P = internal.F6P_init;
    internal.initial_G6P = internal.G6P_init;
    internal.initial_GAP = internal.GAP_init;
    internal.initial_GLC = internal.GLC_init;
    internal.initial_GLCx = internal.GLCx_init;
    internal.initial_GLY = internal.GLY_init;
    internal.initial_NAD = internal.NAD_init;
    internal.initial_NADH = internal.NADH_init;
    internal.initial_P2G = internal.P2G_init;
    internal.initial_P3G = internal.P3G_init;
    internal.initial_PEP = internal.PEP_init;
    internal.initial_PHO = internal.PHO_init;
    internal.initial_PYR = internal.PYR_init;
    internal.initial_s_0002 = internal.s_0002_init;
    internal.initial_s_0004 = internal.s_0004_init;
    internal.initial_s_0008 = internal.s_0008_init;
    internal.initial_s_0009 = internal.s_0009_init;
    internal.initial_s_0010 = internal.s_0010_init;
    internal.initial_s_0015 = internal.s_0015_init;
    internal.initial_s_0016 = internal.s_0016_init;
    internal.initial_s_0018 = internal.s_0018_init;
    internal.initial_s_0019 = internal.s_0019_init;
    internal.initial_s_0025 = internal.s_0025_init;
    internal.initial_s_0028 = internal.s_0028_init;
    internal.initial_s_0033 = internal.s_0033_init;
    internal.initial_s_0037 = internal.s_0037_init;
    internal.initial_s_0039 = internal.s_0039_init;
    internal.initial_s_0056 = internal.s_0056_init;
    internal.initial_s_0061 = internal.s_0061_init;
    internal.initial_s_0062 = internal.s_0062_init;
    internal.initial_s_0063 = internal.s_0063_init;
    internal.initial_s_0066 = internal.s_0066_init;
    internal.initial_s_0076 = internal.s_0076_init;
    internal.initial_s_0077 = internal.s_0077_init;
    internal.initial_s_0078 = internal.s_0078_init;
    internal.initial_s_0082 = internal.s_0082_init;
    internal.initial_s_0086 = internal.s_0086_init;
    internal.initial_s_0089 = internal.s_0089_init;
    internal.initial_s_0118 = internal.s_0118_init;
    internal.initial_s_0120 = internal.s_0120_init;
    internal.initial_s_0122 = internal.s_0122_init;
    internal.initial_s_0126 = internal.s_0126_init;
    internal.initial_s_0141 = internal.s_0141_init;
    internal.initial_s_0142 = internal.s_0142_init;
    internal.initial_s_0145 = internal.s_0145_init;
    internal.initial_s_0146 = internal.s_0146_init;
    internal.initial_s_0158 = internal.s_0158_init;
    internal.initial_s_0162 = internal.s_0162_init;
    internal.initial_s_0165 = internal.s_0165_init;
    internal.initial_s_0176 = internal.s_0176_init;
    internal.initial_s_0178 = internal.s_0178_init;
    internal.initial_s_0180 = internal.s_0180_init;
    internal.initial_s_0190 = internal.s_0190_init;
    internal.initial_s_0201 = internal.s_0201_init;
    internal.initial_s_0204 = internal.s_0204_init;
    internal.initial_s_0207 = internal.s_0207_init;
    internal.initial_s_0209 = internal.s_0209_init;
    internal.initial_s_0210 = internal.s_0210_init;
    internal.initial_s_0211 = internal.s_0211_init;
    internal.initial_s_0218 = internal.s_0218_init;
    internal.initial_s_0231 = internal.s_0231_init;
    internal.initial_s_0232 = internal.s_0232_init;
    internal.initial_s_0261 = internal.s_0261_init;
    internal.initial_s_0262 = internal.s_0262_init;
    internal.initial_s_0291 = internal.s_0291_init;
    internal.initial_s_0295 = internal.s_0295_init;
    internal.initial_s_0296 = internal.s_0296_init;
    internal.initial_s_0297 = internal.s_0297_init;
    internal.initial_s_0298 = internal.s_0298_init;
    internal.initial_s_0299 = internal.s_0299_init;
    internal.initial_s_0300 = internal.s_0300_init;
    internal.initial_s_0301 = internal.s_0301_init;
    internal.initial_s_0302 = internal.s_0302_init;
    internal.initial_s_0304 = internal.s_0304_init;
    internal.initial_s_0306 = internal.s_0306_init;
    internal.initial_s_0312 = internal.s_0312_init;
    internal.initial_s_0313 = internal.s_0313_init;
    internal.initial_s_0314 = internal.s_0314_init;
    internal.initial_s_0322 = internal.s_0322_init;
    internal.initial_s_0324 = internal.s_0324_init;
    internal.initial_s_0325 = internal.s_0325_init;
    internal.initial_s_0326 = internal.s_0326_init;
    internal.initial_s_0327 = internal.s_0327_init;
    internal.initial_s_0328 = internal.s_0328_init;
    internal.initial_s_0335 = internal.s_0335_init;
    internal.initial_s_0340 = internal.s_0340_init;
    internal.initial_s_0349 = internal.s_0349_init;
    internal.initial_s_0360 = internal.s_0360_init;
    internal.initial_s_0362 = internal.s_0362_init;
    internal.initial_s_0367 = internal.s_0367_init;
    internal.initial_s_0373 = internal.s_0373_init;
    internal.initial_s_0380 = internal.s_0380_init;
    internal.initial_s_0386 = internal.s_0386_init;
    internal.initial_s_0390 = internal.s_0390_init;
    internal.initial_s_0393 = internal.s_0393_init;
    internal.initial_s_0403 = internal.s_0403_init;
    internal.initial_s_0404 = internal.s_0404_init;
    internal.initial_s_0409 = internal.s_0409_init;
    internal.initial_s_0419 = internal.s_0419_init;
    internal.initial_s_0420 = internal.s_0420_init;
    internal.initial_s_0427 = internal.s_0427_init;
    internal.initial_s_0428 = internal.s_0428_init;
    internal.initial_s_0430 = internal.s_0430_init;
    internal.initial_s_0432 = internal.s_0432_init;
    internal.initial_s_0445 = internal.s_0445_init;
    internal.initial_s_0454 = internal.s_0454_init;
    internal.initial_s_0455 = internal.s_0455_init;
    internal.initial_s_0458 = internal.s_0458_init;
    internal.initial_s_0467 = internal.s_0467_init;
    internal.initial_s_0471 = internal.s_0471_init;
    internal.initial_s_0478 = internal.s_0478_init;
    internal.initial_s_0505 = internal.s_0505_init;
    internal.initial_s_0515 = internal.s_0515_init;
    internal.initial_s_0516 = internal.s_0516_init;
    internal.initial_s_0522 = internal.s_0522_init;
    internal.initial_s_0526 = internal.s_0526_init;
    internal.initial_s_0529 = internal.s_0529_init;
    internal.initial_s_0539 = internal.s_0539_init;
    internal.initial_s_0542 = internal.s_0542_init;
    internal.initial_s_0550 = internal.s_0550_init;
    internal.initial_s_0551 = internal.s_0551_init;
    internal.initial_s_0567 = internal.s_0567_init;
    internal.initial_s_0573 = internal.s_0573_init;
    internal.initial_s_0574 = internal.s_0574_init;
    internal.initial_s_0577 = internal.s_0577_init;
    internal.initial_s_0581 = internal.s_0581_init;
    internal.initial_s_0582 = internal.s_0582_init;
    internal.initial_s_0584 = internal.s_0584_init;
    internal.initial_s_0586 = internal.s_0586_init;
    internal.initial_s_0587 = internal.s_0587_init;
    internal.initial_s_0589 = internal.s_0589_init;
    internal.initial_s_0595 = internal.s_0595_init;
    internal.initial_s_0602 = internal.s_0602_init;
    internal.initial_s_0613 = internal.s_0613_init;
    internal.initial_s_0615 = internal.s_0615_init;
    internal.initial_s_0619 = internal.s_0619_init;
    internal.initial_s_0625 = internal.s_0625_init;
    internal.initial_s_0633 = internal.s_0633_init;
    internal.initial_s_0644 = internal.s_0644_init;
    internal.initial_s_0645 = internal.s_0645_init;
    internal.initial_s_0649 = internal.s_0649_init;
    internal.initial_s_0654 = internal.s_0654_init;
    internal.initial_s_0656 = internal.s_0656_init;
    internal.initial_s_0657 = internal.s_0657_init;
    internal.initial_s_0662 = internal.s_0662_init;
    internal.initial_s_0666 = internal.s_0666_init;
    internal.initial_s_0672 = internal.s_0672_init;
    internal.initial_s_0681 = internal.s_0681_init;
    internal.initial_s_0700 = internal.s_0700_init;
    internal.initial_s_0709 = internal.s_0709_init;
    internal.initial_s_0710 = internal.s_0710_init;
    internal.initial_s_0722 = internal.s_0722_init;
    internal.initial_s_0725 = internal.s_0725_init;
    internal.initial_s_0739 = internal.s_0739_init;
    internal.initial_s_0743 = internal.s_0743_init;
    internal.initial_s_0745 = internal.s_0745_init;
    internal.initial_s_0747 = internal.s_0747_init;
    internal.initial_s_0748 = internal.s_0748_init;
    internal.initial_s_0750 = internal.s_0750_init;
    internal.initial_s_0757 = internal.s_0757_init;
    internal.initial_s_0766 = internal.s_0766_init;
    internal.initial_s_0767 = internal.s_0767_init;
    internal.initial_s_0773 = internal.s_0773_init;
    internal.initial_s_0779 = internal.s_0779_init;
    internal.initial_s_0782 = internal.s_0782_init;
    internal.initial_s_0785 = internal.s_0785_init;
    internal.initial_s_0816 = internal.s_0816_init;
    internal.initial_s_0832 = internal.s_0832_init;
    internal.initial_s_0835 = internal.s_0835_init;
    internal.initial_s_0836 = internal.s_0836_init;
    internal.initial_s_0841 = internal.s_0841_init;
    internal.initial_s_0847 = internal.s_0847_init;
    internal.initial_s_0849 = internal.s_0849_init;
    internal.initial_s_0897 = internal.s_0897_init;
    internal.initial_s_0940 = internal.s_0940_init;
    internal.initial_s_0943 = internal.s_0943_init;
    internal.initial_s_0951 = internal.s_0951_init;
    internal.initial_s_0953 = internal.s_0953_init;
    internal.initial_s_0955 = internal.s_0955_init;
    internal.initial_s_0959 = internal.s_0959_init;
    internal.initial_s_0965 = internal.s_0965_init;
    internal.initial_s_0969 = internal.s_0969_init;
    internal.initial_s_0973 = internal.s_0973_init;
    internal.initial_s_0978 = internal.s_0978_init;
    internal.initial_s_0979 = internal.s_0979_init;
    internal.initial_s_0980 = internal.s_0980_init;
    internal.initial_s_0981 = internal.s_0981_init;
    internal.initial_s_0991 = internal.s_0991_init;
    internal.initial_s_0999 = internal.s_0999_init;
    internal.initial_s_1003 = internal.s_1003_init;
    internal.initial_s_1006 = internal.s_1006_init;
    internal.initial_s_1010 = internal.s_1010_init;
    internal.initial_s_1011 = internal.s_1011_init;
    internal.initial_s_1012 = internal.s_1012_init;
    internal.initial_s_1014 = internal.s_1014_init;
    internal.initial_s_1016 = internal.s_1016_init;
    internal.initial_s_1021 = internal.s_1021_init;
    internal.initial_s_1025 = internal.s_1025_init;
    internal.initial_s_1029 = internal.s_1029_init;
    internal.initial_s_1032 = internal.s_1032_init;
    internal.initial_s_1035 = internal.s_1035_init;
    internal.initial_s_1038 = internal.s_1038_init;
    internal.initial_s_1039 = internal.s_1039_init;
    internal.initial_s_1045 = internal.s_1045_init;
    internal.initial_s_1048 = internal.s_1048_init;
    internal.initial_s_1051 = internal.s_1051_init;
    internal.initial_s_1056 = internal.s_1056_init;
    internal.initial_s_1059 = internal.s_1059_init;
    internal.initial_s_1065 = internal.s_1065_init;
    internal.initial_s_1073 = internal.s_1073_init;
    internal.initial_s_1077 = internal.s_1077_init;
    internal.initial_s_1084 = internal.s_1084_init;
    internal.initial_s_1099 = internal.s_1099_init;
    internal.initial_s_1101 = internal.s_1101_init;
    internal.initial_s_1107 = internal.s_1107_init;
    internal.initial_s_1148 = internal.s_1148_init;
    internal.initial_s_1151 = internal.s_1151_init;
    internal.initial_s_1153 = internal.s_1153_init;
    internal.initial_s_1161 = internal.s_1161_init;
    internal.initial_s_1176 = internal.s_1176_init;
    internal.initial_s_1182 = internal.s_1182_init;
    internal.initial_s_1187 = internal.s_1187_init;
    internal.initial_s_1191 = internal.s_1191_init;
    internal.initial_s_1192 = internal.s_1192_init;
    internal.initial_s_1194 = internal.s_1194_init;
    internal.initial_s_1207 = internal.s_1207_init;
    internal.initial_s_1212 = internal.s_1212_init;
    internal.initial_s_1233 = internal.s_1233_init;
    internal.initial_s_1238 = internal.s_1238_init;
    internal.initial_s_1255 = internal.s_1255_init;
    internal.initial_s_1266 = internal.s_1266_init;
    internal.initial_s_1269 = internal.s_1269_init;
    internal.initial_s_1270 = internal.s_1270_init;
    internal.initial_s_1271 = internal.s_1271_init;
    internal.initial_s_1275 = internal.s_1275_init;
    internal.initial_s_1277 = internal.s_1277_init;
    internal.initial_s_1286 = internal.s_1286_init;
    internal.initial_s_1302 = internal.s_1302_init;
    internal.initial_s_1314 = internal.s_1314_init;
    internal.initial_s_1324 = internal.s_1324_init;
    internal.initial_s_1331 = internal.s_1331_init;
    internal.initial_s_1337 = internal.s_1337_init;
    internal.initial_s_1342 = internal.s_1342_init;
    internal.initial_s_1343 = internal.s_1343_init;
    internal.initial_s_1346 = internal.s_1346_init;
    internal.initial_s_1351 = internal.s_1351_init;
    internal.initial_s_1364 = internal.s_1364_init;
    internal.initial_s_1365 = internal.s_1365_init;
    internal.initial_s_1376 = internal.s_1376_init;
    internal.initial_s_1377 = internal.s_1377_init;
    internal.initial_s_1379 = internal.s_1379_init;
    internal.initial_s_1386 = internal.s_1386_init;
    internal.initial_s_1405 = internal.s_1405_init;
    internal.initial_s_1408 = internal.s_1408_init;
    internal.initial_s_1413 = internal.s_1413_init;
    internal.initial_s_1416 = internal.s_1416_init;
    internal.initial_s_1426 = internal.s_1426_init;
    internal.initial_s_1427 = internal.s_1427_init;
    internal.initial_s_1428 = internal.s_1428_init;
    internal.initial_s_1429 = internal.s_1429_init;
    internal.initial_s_1445 = internal.s_1445_init;
    internal.initial_s_1447 = internal.s_1447_init;
    internal.initial_s_1449 = internal.s_1449_init;
    internal.initial_s_1454 = internal.s_1454_init;
    internal.initial_s_1458 = internal.s_1458_init;
    internal.initial_s_1459 = internal.s_1459_init;
    internal.initial_s_1467 = internal.s_1467_init;
    internal.initial_s_1468 = internal.s_1468_init;
    internal.initial_s_1469 = internal.s_1469_init;
    internal.initial_s_1487 = internal.s_1487_init;
    internal.initial_s_1491 = internal.s_1491_init;
    internal.initial_s_1520 = internal.s_1520_init;
    internal.initial_s_1524 = internal.s_1524_init;
    internal.initial_s_1527 = internal.s_1527_init;
    internal.initial_s_1533 = internal.s_1533_init;
    internal.initial_s_1535 = internal.s_1535_init;
    internal.initial_s_1537 = internal.s_1537_init;
    internal.initial_s_1538 = internal.s_1538_init;
    internal.initial_s_1543 = internal.s_1543_init;
    internal.initial_s_1545 = internal.s_1545_init;
    internal.initial_s_1559 = internal.s_1559_init;
    internal.initial_s_1561 = internal.s_1561_init;
    internal.initial_s_1565 = internal.s_1565_init;
    internal.initial_s_1569 = internal.s_1569_init;
    internal.initial_s_1576 = internal.s_1576_init;
    internal.initial_s_1577 = internal.s_1577_init;
    internal.initial_s_1578 = internal.s_1578_init;
    internal.initial_s_1579 = internal.s_1579_init;
    internal.initial_s_1582 = internal.s_1582_init;
    internal.initial_s_1583 = internal.s_1583_init;
    internal.initial_s_1585 = internal.s_1585_init;
    internal.initial_s_1587 = internal.s_1587_init;
    internal.initial_s_1589 = internal.s_1589_init;
    internal.initial_s_1590 = internal.s_1590_init;
    internal.initial_s_1591 = internal.s_1591_init;
    internal.initial_s_1593 = internal.s_1593_init;
    internal.initial_s_1594 = internal.s_1594_init;
    internal.initial_s_1596 = internal.s_1596_init;
    internal.initial_s_1598 = internal.s_1598_init;
    internal.initial_s_1600 = internal.s_1600_init;
    internal.initial_s_1602 = internal.s_1602_init;
    internal.initial_s_1604 = internal.s_1604_init;
    internal.initial_s_1606 = internal.s_1606_init;
    internal.initial_s_1607 = internal.s_1607_init;
    internal.initial_s_1608 = internal.s_1608_init;
    internal.initial_s_1610 = internal.s_1610_init;
    internal.initial_s_1612 = internal.s_1612_init;
    internal.initial_s_1614 = internal.s_1614_init;
    internal.initial_s_1616 = internal.s_1616_init;
    internal.initial_s_1620 = internal.s_1620_init;
    this.updateMetadata();
  }
  getInternal() {
    return this.internal;
  }
  rhs(t, state, dstatedt) {
    var internal = this.internal;
    const s_0002 = state[0];
    const s_0004 = state[1];
    const s_0008 = state[2];
    const s_0009 = state[3];
    const s_0010 = state[4];
    const s_0015 = state[5];
    const s_0016 = state[6];
    const s_0018 = state[7];
    const s_0019 = state[8];
    const s_0025 = state[9];
    const s_0028 = state[10];
    const s_0033 = state[11];
    const s_0037 = state[12];
    const s_0039 = state[13];
    const s_0056 = state[14];
    const s_0061 = state[15];
    const s_0062 = state[16];
    const s_0063 = state[17];
    const s_0066 = state[18];
    const BPG = state[19];
    const s_0076 = state[20];
    const s_0077 = state[21];
    const s_0078 = state[22];
    const s_0082 = state[23];
    const s_0086 = state[24];
    const s_0089 = state[25];
    const s_0118 = state[26];
    const s_0120 = state[27];
    const s_0122 = state[28];
    const s_0126 = state[29];
    const s_0141 = state[30];
    const s_0142 = state[31];
    const s_0145 = state[32];
    const s_0146 = state[33];
    const s_0158 = state[34];
    const s_0162 = state[35];
    const s_0165 = state[36];
    const s_0176 = state[37];
    const s_0178 = state[38];
    const s_0180 = state[39];
    const P2G = state[40];
    const s_0190 = state[41];
    const s_0201 = state[42];
    const s_0204 = state[43];
    const s_0207 = state[44];
    const s_0209 = state[45];
    const s_0210 = state[46];
    const s_0211 = state[47];
    const s_0218 = state[48];
    const s_0231 = state[49];
    const s_0232 = state[50];
    const P3G = state[51];
    const s_0261 = state[52];
    const s_0262 = state[53];
    const s_0291 = state[54];
    const s_0295 = state[55];
    const s_0296 = state[56];
    const s_0297 = state[57];
    const s_0298 = state[58];
    const s_0299 = state[59];
    const s_0300 = state[60];
    const s_0301 = state[61];
    const s_0302 = state[62];
    const s_0304 = state[63];
    const s_0306 = state[64];
    const s_0312 = state[65];
    const s_0313 = state[66];
    const s_0314 = state[67];
    const s_0322 = state[68];
    const s_0324 = state[69];
    const s_0325 = state[70];
    const s_0326 = state[71];
    const s_0327 = state[72];
    const s_0328 = state[73];
    const s_0335 = state[74];
    const s_0340 = state[75];
    const s_0349 = state[76];
    const AcAld = state[77];
    const s_0362 = state[79];
    const s_0367 = state[80];
    const s_0373 = state[81];
    const s_0380 = state[82];
    const s_0386 = state[83];
    const s_0390 = state[84];
    const s_0393 = state[85];
    const ADP = state[86];
    const s_0403 = state[87];
    const s_0404 = state[88];
    const s_0409 = state[89];
    const s_0419 = state[90];
    const s_0420 = state[91];
    const AMP = state[92];
    const s_0427 = state[93];
    const s_0428 = state[94];
    const s_0430 = state[95];
    const s_0432 = state[96];
    const ATP = state[97];
    const s_0445 = state[98];
    const s_0454 = state[99];
    const s_0455 = state[100];
    const CO2 = state[101];
    const s_0467 = state[103];
    const s_0471 = state[104];
    const s_0478 = state[105];
    const s_0505 = state[106];
    const s_0515 = state[107];
    const s_0516 = state[108];
    const s_0522 = state[109];
    const s_0526 = state[110];
    const s_0529 = state[111];
    const s_0539 = state[112];
    const s_0542 = state[113];
    const s_0550 = state[114];
    const s_0551 = state[115];
    const F16bP = state[116];
    const F6P = state[117];
    const GLC = state[118];
    const GLCx = state[119];
    const s_0567 = state[120];
    const G6P = state[121];
    const s_0573 = state[122];
    const s_0574 = state[123];
    const s_0577 = state[124];
    const s_0581 = state[125];
    const s_0582 = state[126];
    const s_0584 = state[127];
    const s_0586 = state[128];
    const s_0587 = state[129];
    const s_0589 = state[130];
    const s_0595 = state[131];
    const s_0602 = state[132];
    const s_0613 = state[133];
    const s_0615 = state[134];
    const s_0619 = state[135];
    const s_0625 = state[136];
    const DHAP = state[137];
    const s_0633 = state[138];
    const s_0644 = state[139];
    const s_0645 = state[140];
    const s_0649 = state[141];
    const s_0654 = state[142];
    const s_0656 = state[143];
    const s_0657 = state[144];
    const s_0662 = state[145];
    const s_0666 = state[146];
    const s_0672 = state[147];
    const EtOH = state[148];
    const s_0700 = state[150];
    const s_0709 = state[151];
    const s_0710 = state[152];
    const s_0722 = state[153];
    const s_0725 = state[154];
    const s_0739 = state[155];
    const s_0743 = state[156];
    const s_0745 = state[157];
    const s_0747 = state[158];
    const s_0748 = state[159];
    const s_0750 = state[160];
    const s_0757 = state[161];
    const GAP = state[162];
    const GLY = state[163];
    const s_0767 = state[165];
    const s_0773 = state[166];
    const s_0779 = state[167];
    const s_0782 = state[168];
    const s_0785 = state[169];
    const s_0816 = state[170];
    const s_0832 = state[171];
    const s_0835 = state[172];
    const s_0836 = state[173];
    const s_0841 = state[174];
    const s_0847 = state[175];
    const s_0849 = state[176];
    const s_0897 = state[177];
    const s_0940 = state[178];
    const s_0943 = state[179];
    const s_0951 = state[180];
    const s_0953 = state[181];
    const s_0955 = state[182];
    const s_0959 = state[183];
    const s_0965 = state[184];
    const s_0969 = state[185];
    const s_0973 = state[186];
    const s_0978 = state[187];
    const s_0979 = state[188];
    const s_0980 = state[189];
    const s_0981 = state[190];
    const s_0991 = state[191];
    const s_0999 = state[192];
    const s_1003 = state[193];
    const s_1006 = state[194];
    const s_1010 = state[195];
    const s_1011 = state[196];
    const s_1012 = state[197];
    const s_1014 = state[198];
    const s_1016 = state[199];
    const s_1021 = state[200];
    const s_1025 = state[201];
    const s_1029 = state[202];
    const s_1032 = state[203];
    const s_1035 = state[204];
    const s_1038 = state[205];
    const s_1039 = state[206];
    const s_1045 = state[207];
    const s_1048 = state[208];
    const s_1051 = state[209];
    const s_1056 = state[210];
    const s_1059 = state[211];
    const s_1065 = state[212];
    const s_1073 = state[213];
    const s_1077 = state[214];
    const s_1084 = state[215];
    const s_1099 = state[216];
    const s_1101 = state[217];
    const s_1107 = state[218];
    const s_1148 = state[219];
    const s_1151 = state[220];
    const s_1153 = state[221];
    const s_1161 = state[222];
    const s_1176 = state[223];
    const s_1182 = state[224];
    const s_1187 = state[225];
    const s_1191 = state[226];
    const s_1192 = state[227];
    const s_1194 = state[228];
    const NAD = state[229];
    const NADH = state[230];
    const s_1207 = state[231];
    const s_1212 = state[232];
    const s_1233 = state[233];
    const s_1238 = state[234];
    const s_1255 = state[235];
    const s_1266 = state[236];
    const s_1269 = state[237];
    const s_1270 = state[238];
    const s_1271 = state[239];
    const s_1275 = state[240];
    const s_1277 = state[241];
    const s_1286 = state[242];
    const s_1302 = state[243];
    const s_1314 = state[244];
    const PHO = state[245];
    const s_1324 = state[246];
    const s_1331 = state[247];
    const s_1337 = state[248];
    const s_1342 = state[249];
    const s_1343 = state[250];
    const s_1346 = state[251];
    const s_1351 = state[252];
    const PEP = state[253];
    const s_1364 = state[254];
    const s_1365 = state[255];
    const s_1376 = state[256];
    const s_1377 = state[257];
    const s_1379 = state[258];
    const s_1386 = state[259];
    const PYR = state[260];
    const s_1405 = state[261];
    const s_1408 = state[262];
    const s_1413 = state[263];
    const s_1416 = state[264];
    const s_1426 = state[265];
    const s_1427 = state[266];
    const s_1428 = state[267];
    const s_1429 = state[268];
    const s_1445 = state[269];
    const s_1447 = state[270];
    const s_1449 = state[271];
    const s_1454 = state[272];
    const s_1458 = state[273];
    const s_1467 = state[275];
    const s_1468 = state[276];
    const s_1469 = state[277];
    const s_1487 = state[278];
    const s_1491 = state[279];
    const s_1520 = state[280];
    const s_1524 = state[281];
    const s_1527 = state[282];
    const s_1533 = state[283];
    const s_1535 = state[284];
    const s_1537 = state[285];
    const s_1538 = state[286];
    const s_1543 = state[287];
    const s_1545 = state[288];
    const s_1559 = state[289];
    const s_1561 = state[290];
    const s_1565 = state[291];
    const s_1569 = state[292];
    const s_1576 = state[293];
    const s_1577 = state[294];
    const s_1578 = state[295];
    const s_1579 = state[296];
    const s_1582 = state[297];
    const s_1583 = state[298];
    const s_1585 = state[299];
    const s_1587 = state[300];
    const s_1589 = state[301];
    const s_1590 = state[302];
    const s_1591 = state[303];
    const s_1593 = state[304];
    const s_1594 = state[305];
    const s_1596 = state[306];
    const s_1598 = state[307];
    const s_1600 = state[308];
    const s_1602 = state[309];
    const s_1604 = state[310];
    const s_1606 = state[311];
    const s_1607 = state[312];
    const s_1608 = state[313];
    const s_1610 = state[314];
    const s_1612 = state[315];
    const s_1614 = state[316];
    const s_1616 = state[317];
    const s_1620 = state[318];
    const F26bP = state[712];
    dstatedt[319] = 0;
    dstatedt[320] = 0;
    dstatedt[321] = 0;
    dstatedt[322] = 0;
    dstatedt[323] = 0;
    dstatedt[324] = 0;
    dstatedt[325] = 0;
    dstatedt[326] = 0;
    dstatedt[327] = 0;
    dstatedt[328] = 0;
    dstatedt[329] = 0;
    dstatedt[330] = 0;
    dstatedt[331] = 0;
    dstatedt[332] = 0;
    dstatedt[333] = 0;
    dstatedt[334] = 0;
    dstatedt[335] = 0;
    dstatedt[336] = 0;
    dstatedt[337] = 0;
    dstatedt[338] = 0;
    dstatedt[339] = 0;
    dstatedt[340] = 0;
    dstatedt[341] = 0;
    dstatedt[342] = 0;
    dstatedt[343] = 0;
    dstatedt[344] = 0;
    dstatedt[345] = 0;
    dstatedt[346] = 0;
    dstatedt[347] = 0;
    dstatedt[348] = 0;
    dstatedt[349] = 0;
    dstatedt[350] = 0;
    dstatedt[351] = 0;
    dstatedt[352] = 0;
    dstatedt[353] = 0;
    dstatedt[354] = 0;
    dstatedt[355] = 0;
    dstatedt[356] = 0;
    dstatedt[357] = 0;
    dstatedt[358] = 0;
    dstatedt[359] = 0;
    dstatedt[360] = 0;
    dstatedt[361] = 0;
    dstatedt[362] = 0;
    dstatedt[363] = 0;
    dstatedt[364] = 0;
    dstatedt[365] = 0;
    dstatedt[366] = 0;
    dstatedt[367] = 0;
    dstatedt[368] = 0;
    dstatedt[369] = 0;
    dstatedt[370] = 0;
    dstatedt[371] = 0;
    dstatedt[372] = 0;
    dstatedt[373] = 0;
    dstatedt[374] = 0;
    dstatedt[375] = 0;
    dstatedt[376] = 0;
    dstatedt[377] = 0;
    dstatedt[378] = 0;
    dstatedt[379] = 0;
    dstatedt[380] = 0;
    dstatedt[381] = 0;
    dstatedt[382] = 0;
    dstatedt[383] = 0;
    dstatedt[384] = 0;
    dstatedt[385] = 0;
    dstatedt[386] = 0;
    dstatedt[387] = 0;
    dstatedt[388] = 0;
    dstatedt[389] = 0;
    dstatedt[390] = 0;
    dstatedt[391] = 0;
    dstatedt[392] = 0;
    dstatedt[393] = 0;
    dstatedt[394] = 0;
    dstatedt[395] = 0;
    dstatedt[396] = 0;
    dstatedt[397] = 0;
    dstatedt[398] = 0;
    dstatedt[399] = 0;
    dstatedt[400] = 0;
    dstatedt[401] = 0;
    dstatedt[402] = 0;
    dstatedt[403] = 0;
    dstatedt[404] = 0;
    dstatedt[405] = 0;
    dstatedt[406] = 0;
    dstatedt[407] = 0;
    dstatedt[408] = 0;
    dstatedt[409] = 0;
    dstatedt[410] = 0;
    dstatedt[411] = 0;
    dstatedt[412] = 0;
    dstatedt[413] = 0;
    dstatedt[414] = 0;
    dstatedt[415] = 0;
    dstatedt[416] = 0;
    dstatedt[417] = 0;
    dstatedt[418] = 0;
    dstatedt[419] = 0;
    dstatedt[420] = 0;
    dstatedt[421] = 0;
    dstatedt[422] = 0;
    dstatedt[423] = 0;
    dstatedt[424] = 0;
    dstatedt[425] = 0;
    dstatedt[426] = 0;
    dstatedt[427] = 0;
    dstatedt[428] = 0;
    dstatedt[429] = 0;
    dstatedt[430] = 0;
    dstatedt[431] = 0;
    dstatedt[432] = 0;
    dstatedt[433] = 0;
    dstatedt[434] = 0;
    dstatedt[435] = 0;
    dstatedt[436] = 0;
    dstatedt[437] = 0;
    dstatedt[438] = 0;
    dstatedt[439] = 0;
    dstatedt[440] = 0;
    dstatedt[441] = 0;
    dstatedt[442] = 0;
    dstatedt[443] = 0;
    dstatedt[444] = 0;
    dstatedt[445] = 0;
    dstatedt[446] = 0;
    dstatedt[447] = 0;
    dstatedt[448] = 0;
    dstatedt[449] = 0;
    dstatedt[450] = 0;
    dstatedt[451] = 0;
    dstatedt[452] = 0;
    dstatedt[453] = 0;
    dstatedt[454] = 0;
    dstatedt[455] = 0;
    dstatedt[456] = 0;
    dstatedt[457] = 0;
    dstatedt[458] = 0;
    dstatedt[459] = 0;
    dstatedt[460] = 0;
    dstatedt[461] = 0;
    dstatedt[462] = 0;
    dstatedt[463] = 0;
    dstatedt[464] = 0;
    dstatedt[465] = 0;
    dstatedt[466] = 0;
    dstatedt[467] = 0;
    dstatedt[468] = 0;
    dstatedt[469] = 0;
    dstatedt[470] = 0;
    dstatedt[471] = 0;
    dstatedt[472] = 0;
    dstatedt[473] = 0;
    dstatedt[474] = 0;
    dstatedt[475] = 0;
    dstatedt[476] = 0;
    dstatedt[477] = 0;
    dstatedt[478] = 0;
    dstatedt[479] = 0;
    dstatedt[480] = 0;
    dstatedt[481] = 0;
    dstatedt[482] = 0;
    dstatedt[483] = 0;
    dstatedt[484] = 0;
    dstatedt[485] = 0;
    dstatedt[486] = 0;
    dstatedt[487] = 0;
    dstatedt[488] = 0;
    dstatedt[489] = 0;
    dstatedt[490] = 0;
    dstatedt[491] = 0;
    dstatedt[492] = 0;
    dstatedt[493] = 0;
    dstatedt[494] = 0;
    dstatedt[495] = 0;
    dstatedt[496] = 0;
    dstatedt[497] = 0;
    dstatedt[498] = 0;
    dstatedt[499] = 0;
    dstatedt[500] = 0;
    dstatedt[501] = 0;
    dstatedt[502] = 0;
    dstatedt[503] = 0;
    dstatedt[504] = 0;
    dstatedt[505] = 0;
    dstatedt[506] = 0;
    dstatedt[507] = 0;
    dstatedt[508] = 0;
    dstatedt[509] = 0;
    dstatedt[510] = 0;
    dstatedt[511] = 0;
    dstatedt[512] = 0;
    dstatedt[513] = 0;
    dstatedt[514] = 0;
    dstatedt[515] = 0;
    dstatedt[516] = 0;
    dstatedt[517] = 0;
    dstatedt[518] = 0;
    dstatedt[519] = 0;
    dstatedt[520] = 0;
    dstatedt[521] = 0;
    dstatedt[522] = 0;
    dstatedt[523] = 0;
    dstatedt[524] = 0;
    dstatedt[525] = 0;
    dstatedt[526] = 0;
    dstatedt[527] = 0;
    dstatedt[528] = 0;
    dstatedt[529] = 0;
    dstatedt[530] = 0;
    dstatedt[531] = 0;
    dstatedt[532] = 0;
    dstatedt[533] = 0;
    dstatedt[534] = 0;
    dstatedt[535] = 0;
    dstatedt[536] = 0;
    dstatedt[537] = 0;
    dstatedt[538] = 0;
    dstatedt[539] = 0;
    dstatedt[540] = 0;
    dstatedt[541] = 0;
    dstatedt[542] = 0;
    dstatedt[543] = 0;
    dstatedt[544] = 0;
    dstatedt[545] = 0;
    dstatedt[546] = 0;
    dstatedt[547] = 0;
    dstatedt[548] = 0;
    dstatedt[549] = 0;
    dstatedt[550] = 0;
    dstatedt[551] = 0;
    dstatedt[552] = 0;
    dstatedt[553] = 0;
    dstatedt[554] = 0;
    dstatedt[555] = 0;
    dstatedt[556] = 0;
    dstatedt[557] = 0;
    dstatedt[558] = 0;
    dstatedt[559] = 0;
    dstatedt[560] = 0;
    dstatedt[561] = 0;
    dstatedt[562] = 0;
    dstatedt[563] = 0;
    dstatedt[564] = 0;
    dstatedt[565] = 0;
    dstatedt[566] = 0;
    dstatedt[567] = 0;
    dstatedt[568] = 0;
    dstatedt[569] = 0;
    dstatedt[570] = 0;
    dstatedt[571] = 0;
    dstatedt[572] = 0;
    dstatedt[573] = 0;
    dstatedt[574] = 0;
    dstatedt[575] = 0;
    dstatedt[576] = 0;
    dstatedt[577] = 0;
    dstatedt[578] = 0;
    dstatedt[579] = 0;
    dstatedt[580] = 0;
    dstatedt[581] = 0;
    dstatedt[582] = 0;
    dstatedt[583] = 0;
    dstatedt[584] = 0;
    dstatedt[585] = 0;
    dstatedt[586] = 0;
    dstatedt[587] = 0;
    dstatedt[588] = 0;
    dstatedt[589] = 0;
    dstatedt[590] = 0;
    dstatedt[591] = 0;
    dstatedt[592] = 0;
    dstatedt[593] = 0;
    dstatedt[594] = 0;
    dstatedt[595] = 0;
    dstatedt[596] = 0;
    dstatedt[597] = 0;
    dstatedt[598] = 0;
    dstatedt[599] = 0;
    dstatedt[600] = 0;
    dstatedt[601] = 0;
    dstatedt[602] = 0;
    dstatedt[603] = 0;
    dstatedt[604] = 0;
    dstatedt[605] = 0;
    dstatedt[606] = 0;
    dstatedt[607] = 0;
    dstatedt[608] = 0;
    dstatedt[609] = 0;
    dstatedt[610] = 0;
    dstatedt[611] = 0;
    dstatedt[612] = 0;
    dstatedt[613] = 0;
    dstatedt[614] = 0;
    dstatedt[615] = 0;
    dstatedt[616] = 0;
    dstatedt[617] = 0;
    dstatedt[618] = 0;
    dstatedt[619] = 0;
    dstatedt[620] = 0;
    dstatedt[621] = 0;
    dstatedt[622] = 0;
    dstatedt[623] = 0;
    dstatedt[624] = 0;
    dstatedt[625] = 0;
    dstatedt[626] = 0;
    dstatedt[627] = 0;
    dstatedt[628] = 0;
    dstatedt[629] = 0;
    dstatedt[630] = 0;
    dstatedt[631] = 0;
    dstatedt[632] = 0;
    dstatedt[633] = 0;
    dstatedt[634] = 0;
    dstatedt[635] = 0;
    dstatedt[636] = 0;
    dstatedt[637] = 0;
    dstatedt[638] = 0;
    dstatedt[639] = 0;
    dstatedt[640] = 0;
    dstatedt[641] = 0;
    dstatedt[642] = 0;
    dstatedt[643] = 0;
    dstatedt[644] = 0;
    dstatedt[645] = 0;
    dstatedt[646] = 0;
    dstatedt[647] = 0;
    dstatedt[648] = 0;
    dstatedt[649] = 0;
    dstatedt[650] = 0;
    dstatedt[651] = 0;
    dstatedt[652] = 0;
    dstatedt[653] = 0;
    dstatedt[654] = 0;
    dstatedt[655] = 0;
    dstatedt[656] = 0;
    dstatedt[657] = 0;
    dstatedt[658] = 0;
    dstatedt[659] = 0;
    dstatedt[660] = 0;
    dstatedt[661] = 0;
    dstatedt[662] = 0;
    dstatedt[663] = 0;
    dstatedt[664] = 0;
    dstatedt[665] = 0;
    dstatedt[666] = 0;
    dstatedt[667] = 0;
    dstatedt[668] = 0;
    dstatedt[669] = 0;
    dstatedt[670] = 0;
    dstatedt[671] = 0;
    dstatedt[672] = 0;
    dstatedt[673] = 0;
    dstatedt[674] = 0;
    dstatedt[675] = 0;
    dstatedt[676] = 0;
    dstatedt[677] = 0;
    dstatedt[678] = 0;
    dstatedt[679] = 0;
    dstatedt[680] = 0;
    dstatedt[681] = 0;
    dstatedt[682] = 0;
    dstatedt[683] = 0;
    dstatedt[684] = 0;
    dstatedt[685] = 0;
    dstatedt[686] = 0;
    dstatedt[687] = 0;
    dstatedt[688] = 0;
    dstatedt[689] = 0;
    dstatedt[690] = 0;
    dstatedt[691] = 0;
    dstatedt[692] = 0;
    dstatedt[693] = 0;
    dstatedt[694] = 0;
    dstatedt[695] = 0;
    dstatedt[696] = 0;
    dstatedt[697] = 0;
    dstatedt[698] = 0;
    dstatedt[699] = 0;
    dstatedt[700] = 0;
    dstatedt[701] = 0;
    dstatedt[702] = 0;
    dstatedt[703] = 0;
    dstatedt[704] = 0;
    dstatedt[705] = 0;
    dstatedt[706] = 0;
    dstatedt[707] = 0;
    dstatedt[708] = 0;
    dstatedt[709] = 0;
    dstatedt[710] = 0;
    dstatedt[711] = 0;
    dstatedt[712] = 0;
    dstatedt[119] = 0;
    dstatedt[78] = 0;
    dstatedt[91] = 0;
    dstatedt[102] = 0;
    dstatedt[149] = 0;
    dstatedt[164] = 0;
    dstatedt[241] = 0;
    dstatedt[246] = 0;
    dstatedt[274] = 0;
    dstatedt[276] = 0;
    dstatedt[77] = 0 - 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) - 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * (internal.Vmax * Math.pow((PYR / internal.Kpyr), (internal.nH)) / (1 + Math.pow((PYR / internal.Kpyr), (internal.nH)))) + 1 * internal.cell * internal.Vmax * (s_1045 - AcAld * s_1003 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + AcAld / internal.KmAcAld) * (1 + s_1003 / internal.Km1003) - 1) - 1 * internal.cell * internal.Vmax * AcAld / internal.KmAcAld / (1 + AcAld / internal.KmAcAld);
    dstatedt[86] = 0 + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) + 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) - 2 * internal.cell * internal.kxk * (ADP * ADP - AMP * ATP / internal.Keq) + 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ADP * PHO - ATP / internal.Keq) / (internal.KmADP * internal.KmPHO) / ((1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) + 1 + ATP / internal.KmATP - 1) + 1 * internal.cell * internal.kxk * ATP + 2 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) + 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) + 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) + 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) + 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2)))) - 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) + 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1) + 59.276000000000003 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[92] = 0 + 1 * internal.cell * internal.Vmax * (s_0390 - AMP * PHO / internal.Keq) / internal.Km0390 / (1 + s_0390 / internal.Km0390 + (1 + AMP / internal.KmAMP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) + 1 * internal.cell * internal.kxk * (ADP * ADP - AMP * ATP / internal.Keq) - 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0393 - AMP * s_0725 / internal.Keq) / internal.Km0393 / (1 + s_0393 / internal.Km0393 + (1 + AMP / internal.KmAMP) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) - 0.045999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[97] = 0 - 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) - 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) + 1 * internal.cell * internal.kxk * (ADP * ADP - AMP * ATP / internal.Keq) - 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ADP * PHO - ATP / internal.Keq) / (internal.KmADP * internal.KmPHO) / ((1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) + 1 + ATP / internal.KmATP - 1) - 1 * internal.cell * internal.kxk * ATP - 2 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) - 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) - 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) - 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2)))) + 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1) - 59.276000000000003 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[19] = 0 + 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) - 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp)));
    dstatedt[101] = 0 + 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0010 - s_0291 * CO2 / internal.Keq) / internal.Km0010 / (1 + s_0010 / internal.Km0010 + (1 + s_0291 / internal.Km0291) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((PYR), (2)) - s_0146 * CO2 / internal.Keq) / Math.pow((internal.KmPYR), (2)) / (Math.pow((1 + PYR / internal.KmPYR), (2)) + (1 + s_0146 / internal.Km0146) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) + 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) + 3 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 3 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) + 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0076 - s_0086 * CO2 / internal.Keq) / internal.Km0076 / (1 + s_0076 / internal.Km0076 + (1 + s_0086 / internal.Km0086) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1270 - CO2 * s_1545 / internal.Keq) / internal.Km1270 / (1 + s_1270 / internal.Km1270 + (1 + CO2 / internal.KmCO2) * (1 + s_1545 / internal.Km1545) - 1) + 1 * internal.cell * internal.Vmax * (s_1337 - CO2 * s_1351 / internal.Keq) / internal.Km1337 / (1 + s_1337 / internal.Km1337 + (1 + CO2 / internal.KmCO2) * (1 + s_1351 / internal.Km1351) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) + 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1377 - CO2 * s_0951 / internal.Keq) / internal.Km1377 / (1 + s_1377 / internal.Km1377 + (1 + CO2 / internal.KmCO2) * (1 + s_0951 / internal.Km0951) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * (internal.Vmax * Math.pow((PYR / internal.Kpyr), (internal.nH)) / (1 + Math.pow((PYR / internal.Kpyr), (internal.nH)))) + 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (CO2 - s_0445 / internal.Keq) / internal.KmCO2 / (1 + CO2 / internal.KmCO2 + 1 + s_0445 / internal.Km0445 - 1) - 1 * internal.cell * internal.Vmax * CO2 / internal.KmCO2 / (1 + CO2 / internal.KmCO2);
    dstatedt[137] = 0 + 1 * internal.cell * (internal.Vmax * (F16bP / internal.Kf16bp - DHAP * GAP / (internal.Kf16bp * internal.Keq)) / (1 + F16bP / internal.Kf16bp + DHAP / internal.Kdhap + GAP / internal.Kgap + F16bP * GAP / (internal.Kf16bp * internal.Kigap) + DHAP * GAP / (internal.Kdhap * internal.Kgap))) - 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * DHAP - s_1426 / internal.Keq) / (internal.Km0551 * internal.KmDHAP) / ((1 + s_0551 / internal.Km0551) * (1 + DHAP / internal.KmDHAP) + 1 + s_1426 / internal.Km1426 - 1) - 1 * internal.cell * internal.kxk * (DHAP - GAP / internal.Keq) - 1 * internal.cell * internal.Vmax * (DHAP - s_1151 * PHO / internal.Keq) / internal.KmDHAP / (1 + DHAP / internal.KmDHAP + (1 + s_1151 / internal.Km1151) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[148] = 0 + 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) - 1 * internal.cell * internal.Vmax * EtOH / internal.KmEtOH / (1 + EtOH / internal.KmEtOH);
    dstatedt[116] = 0 - 1 * internal.cell * (internal.Vmax * (F16bP / internal.Kf16bp - DHAP * GAP / (internal.Kf16bp * internal.Keq)) / (1 + F16bP / internal.Kf16bp + DHAP / internal.Kdhap + GAP / internal.Kgap + F16bP * GAP / (internal.Kf16bp * internal.Kigap) + DHAP * GAP / (internal.Kdhap * internal.Kgap))) + 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2))));
    dstatedt[117] = 0 + 1 * internal.cell * (internal.Vmax * (G6P / internal.Kg6p - F6P / (internal.Kg6p * internal.Keq)) / (1 + G6P / internal.Kg6p + F6P / internal.Kf6p)) - 1 * internal.cell * internal.Vmax * (F6P - s_0574 / internal.Keq) / internal.KmF6P / (1 + F6P / internal.KmF6P + 1 + s_0574 / internal.Km0574 - 1) - 1 * internal.cell * internal.Vmax * (internal.gR * (F6P / internal.Kf6p) * (ATP / internal.Katp) * (1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp) / (Math.pow((1 + F6P / internal.Kf6p + ATP / internal.Katp + internal.gR * F6P / internal.Kf6p * ATP / internal.Katp), (2)) + internal.L0 * Math.pow(((1 + internal.Ciatp * ATP / internal.Kiatp) / (1 + ATP / internal.Kiatp)), (2)) * Math.pow(((1 + internal.Camp * AMP / internal.Kamp) / (1 + AMP / internal.Kamp)), (2)) * Math.pow(((1 + internal.Cf26 * F26bP / internal.Kf26 + internal.Cf16 * F16bP / internal.Kf16) / (1 + F26bP / internal.Kf26 + F16bP / internal.Kf16)), (2)) * Math.pow((1 + internal.Catp * ATP / internal.Katp), (2)))) + 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) + 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1);
    dstatedt[121] = 0 - 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * (internal.Vmax * (G6P / internal.Kg6p - F6P / (internal.Kg6p * internal.Keq)) / (1 + G6P / internal.Kg6p + F6P / internal.Kf6p)) + 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) - 1 * internal.cell * internal.Vmax * (G6P - s_0126 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0126 / internal.Km0126 - 1) - 1 * internal.cell * internal.Vmax * (G6P - s_0567 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0567 / internal.Km0567 - 1);
    dstatedt[162] = 0 + 1 * internal.cell * (internal.Vmax * (F16bP / internal.Kf16bp - DHAP * GAP / (internal.Kf16bp * internal.Keq)) / (1 + F16bP / internal.Kf16bp + DHAP / internal.Kdhap + GAP / internal.Kgap + F16bP * GAP / (internal.Kf16bp * internal.Kigap) + DHAP * GAP / (internal.Kdhap * internal.Kgap))) - 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) - 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) + 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1) + 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1) + 1 * internal.cell * internal.kxk * (DHAP - GAP / internal.Keq) + 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1);
    dstatedt[118] = 0 - 1 * internal.cell * (internal.Vmax * (GLC * ATP / (internal.Kglc * internal.Katp) - G6P * ADP / (internal.Kglc * internal.Katp * internal.Keq)) / ((1 + GLC / internal.Kglc + G6P / internal.Kg6p) * (1 + ATP / internal.Katp + ADP / internal.Kadp))) + 1 * internal.cell * (internal.Vmax * (GLCx - GLC) / internal.Kglc / (1 + GLCx / internal.Kglc + GLC / internal.Kglc + internal.Ki * GLCx / internal.Kglc * GLC / internal.Kglc));
    dstatedt[163] = 0 + 1 * internal.cell * internal.Vmax * (s_0767 - GLY * PHO / internal.Keq) / internal.Km0767 / (1 + s_0767 / internal.Km0767 + (1 + GLY / internal.KmGLY) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * GLY / internal.KmGLY / (1 + GLY / internal.KmGLY);
    dstatedt[229] = 0 + 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) - 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) + 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 2 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1) + 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[230] = 0 - 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * (internal.Vmax * (AcAld * NADH / (internal.Kacald * internal.Kinadh) - EtOH * NAD / (internal.Kacald * internal.Kinadh * internal.Keq)) / (1 + NADH / internal.Kinadh + AcAld * internal.Knadh / (internal.Kinadh * internal.Kacald) + EtOH * internal.Knad / (internal.Kinad * internal.Ketoh) + NAD / internal.Kinad + AcAld * NADH / (internal.Kinadh * internal.Kacald) + NADH * EtOH * internal.Knad / (internal.Kinadh * internal.Kinad * internal.Ketoh) + AcAld * NAD * internal.Knadh / (internal.Kinadh * internal.Kinad * internal.Kacald) + EtOH * NAD / (internal.Ketoh * internal.Kinad) + AcAld * NADH * EtOH / (internal.Kinadh * internal.Kietoh * internal.Kacald) + AcAld * EtOH * NAD / (internal.Kiacald * internal.Kinad * internal.Ketoh))) + 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) - 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 2 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1) - 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[40] = 0 - 1 * internal.cell * (internal.Vmax * (P2G / internal.Kp2g - PEP / (internal.Kp2g * internal.Keq)) / (1 + P2G / internal.Kp2g + PEP / internal.Kpep)) + 1 * internal.cell * (internal.Vmax * (P3G / internal.Kp3g - P2G / (internal.Kp3g * internal.Keq)) / (1 + P3G / internal.Kp3g + P2G / internal.Kp2g));
    dstatedt[51] = 0 + 1 * internal.cell * (internal.Vmax * (BPG * ADP / (internal.Kbpg * internal.Kadp) - P3G * ATP / (internal.Kbpg * internal.Kadp * internal.Keq)) / ((1 + BPG / internal.Kbpg + P3G / internal.Kp3g) * (1 + ADP / internal.Kadp + ATP / internal.Katp))) - 1 * internal.cell * (internal.Vmax * (P3G / internal.Kp3g - P2G / (internal.Kp3g * internal.Keq)) / (1 + P3G / internal.Kp3g + P2G / internal.Kp2g));
    dstatedt[253] = 0 - 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * (internal.Vmax * (P2G / internal.Kp2g - PEP / (internal.Kp2g * internal.Keq)) / (1 + P2G / internal.Kp2g + PEP / internal.Kpep)) + 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) - 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp)));
    dstatedt[245] = 0 + 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0390 - AMP * PHO / internal.Keq) / internal.Km0390 / (1 + s_0390 / internal.Km0390 + (1 + AMP / internal.KmAMP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0349 - s_0210 * PHO / internal.Keq) / internal.Km0349 / (1 + s_0349 / internal.Km0349 + (1 + s_0210 / internal.Km0210) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ADP * PHO - ATP / internal.Keq) / (internal.KmADP * internal.KmPHO) / ((1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) + 1 + ATP / internal.KmATP - 1) + 1 * internal.cell * internal.kxk * ATP + 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0324 - s_0515 * PHO / internal.Keq) / internal.Km0324 / (1 + s_0324 / internal.Km0324 + (1 + s_0515 / internal.Km0515) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1331 - s_0619 * PHO / internal.Keq) / internal.Km1331 / (1 + s_1331 / internal.Km1331 + (1 + s_0619 / internal.Km0619) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax / (internal.Kgap * internal.Knad * internal.Kpho) * (GAP * NAD * PHO - BPG * NADH / internal.Keq) / ((1 + PHO / internal.Kpho) * (1 + GAP / internal.Kgap + BPG / internal.Kbpg) * (1 + NAD / internal.Knad + NADH / internal.Knadh)) + 1 * internal.cell * internal.Vmax * (s_0767 - GLY * PHO / internal.Keq) / internal.Km0767 / (1 + s_0767 / internal.Km0767 + (1 + GLY / internal.KmGLY) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1011 - s_1010 * PHO / internal.Keq) / internal.Km1011 / (1 + s_1011 / internal.Km1011 + (1 + s_1010 / internal.Km1010) * (1 + PHO / internal.KmPHO) - 1) + 2 * internal.cell * internal.Vmax * (s_0633 - Math.pow((PHO), (2)) / internal.Keq) / internal.Km0633 / (1 + s_0633 / internal.Km0633 + Math.pow((1 + PHO / internal.KmPHO), (2)) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0126 - s_1153 * PHO / internal.Keq) / internal.Km0126 / (1 + s_0126 / internal.Km0126 + (1 + s_1153 / internal.Km1153) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0467 - s_0526 * PHO / internal.Keq) / internal.Km0467 / (1 + s_0467 / internal.Km0467 + (1 + s_0526 / internal.Km0526) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1238 - s_1045 * PHO / internal.Keq) / internal.Km1238 / (1 + s_1238 / internal.Km1238 + (1 + s_1045 / internal.Km1045) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0409 - PHO * s_1520 / internal.Keq) / internal.Km0409 / (1 + s_0409 / internal.Km0409 + (1 + PHO / internal.KmPHO) * (1 + s_1520 / internal.Km1520) - 1) + 1 * internal.cell * internal.Vmax * (s_1324 - PHO) / internal.Km1324 / (1 + s_1324 / internal.Km1324 + 1 + PHO / internal.KmPHO - 1) + 1 * internal.cell * internal.Vmax * (DHAP - s_1151 * PHO / internal.Keq) / internal.KmDHAP / (1 + DHAP / internal.KmDHAP + (1 + s_1151 / internal.Km1151) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0313 - s_0314 * PHO / internal.Keq) / internal.Km0313 / (1 + s_0313 / internal.Km0313 + (1 + s_0314 / internal.Km0314) * (1 + PHO / internal.KmPHO) - 1) + 58.700009999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux) + 1 * internal.cell * internal.Vmax * (s_1426 - s_1427 * PHO / internal.Keq) / internal.Km1426 / (1 + s_1426 / internal.Km1426 + (1 + s_1427 / internal.Km1427) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[260] = 0 + 1 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((PYR), (2)) - s_0146 * CO2 / internal.Keq) / Math.pow((internal.KmPYR), (2)) / (Math.pow((1 + PYR / internal.KmPYR), (2)) + (1 + s_0146 / internal.Km0146) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * (internal.Vmax * Math.pow((PYR / internal.Kpyr), (internal.nH)) / (1 + Math.pow((PYR / internal.Kpyr), (internal.nH)))) + 1 * internal.cell * (internal.Vmax * (PEP * ADP / (internal.Kpep * internal.Kadp) - PYR * ATP / (internal.Kpep * internal.Kadp * internal.Keq)) / ((1 + PEP / internal.Kpep + PYR / internal.Kpyr) * (1 + ADP / internal.Kadp + ATP / internal.Katp)));
    dstatedt[0] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0002 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0002 / internal.Km0002) * (1 + s_1538 / internal.Km1538) - 1) - 1.1348 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[1] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0004 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0004 / internal.Km0004) * (1 + s_1538 / internal.Km1538) - 1) - 1.1348 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[2] = 0 - 1 * internal.cell * internal.Vmax * (s_0008 - s_0056 / internal.Keq) / internal.Km0008 / (1 + s_0008 / internal.Km0008 + 1 + s_0056 / internal.Km0056 - 1) + 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[3] = 0 + 1 * internal.cell * internal.Vmax * (s_0165 - s_0009 / internal.Keq) / internal.Km0165 / (1 + s_0165 / internal.Km0165 + 1 + s_0009 / internal.Km0009 - 1) - 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[4] = 0 - 1 * internal.cell * internal.Vmax * (s_0010 - s_0291 * CO2 / internal.Keq) / internal.Km0010 / (1 + s_0010 / internal.Km0010 + (1 + s_0291 / internal.Km0291) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0009 * NAD - s_0010 * NADH / internal.Keq) / (internal.Km0009 * internal.KmNAD) / ((1 + s_0009 / internal.Km0009) * (1 + NAD / internal.KmNAD) + (1 + s_0010 / internal.Km0010) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[5] = 0 - 1 * internal.cell * internal.Vmax * (s_0015 - s_0725 * s_0965 / internal.Keq) / internal.Km0015 / (1 + s_0015 / internal.Km0015 + (1 + s_0725 / internal.Km0725) * (1 + s_0965 / internal.Km0965) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[6] = 0 + 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0016 - s_0232 / internal.Keq) / internal.Km0016 / (1 + s_0016 / internal.Km0016 + 1 + s_0232 / internal.Km0232 - 1);
    dstatedt[7] = 0 - 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[8] = 0 + 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1) - 1 * internal.cell * internal.Vmax * (s_0019 * ATP - s_0018 * ADP / internal.Keq) / (internal.Km0019 * internal.KmATP) / ((1 + s_0019 / internal.Km0019) * (1 + ATP / internal.KmATP) + (1 + s_0018 / internal.Km0018) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[9] = 0 - 1 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0033 - s_0025 * s_0750 / internal.Keq) / internal.Km0033 / (1 + s_0033 / internal.Km0033 + (1 + s_0025 / internal.Km0025) * (1 + s_0750 / internal.Km0750) - 1);
    dstatedt[10] = 0 + 1 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * ATP - s_0019 * ADP / internal.Keq) / (internal.Km0028 * internal.KmATP) / ((1 + s_0028 / internal.Km0028) * (1 + ATP / internal.KmATP) + (1 + s_0019 / internal.Km0019) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1);
    dstatedt[11] = 0 - 1 * internal.cell * internal.Vmax * (s_0033 - s_0025 * s_0750 / internal.Keq) / internal.Km0033 / (1 + s_0033 / internal.Km0033 + (1 + s_0025 / internal.Km0025) * (1 + s_0750 / internal.Km0750) - 1) + 1 * internal.cell * internal.Vmax * (s_0750 * s_1151 - s_0033 / internal.Keq) / (internal.Km0750 * internal.Km1151) / ((1 + s_0750 / internal.Km0750) * (1 + s_1151 / internal.Km1151) + 1 + s_0033 / internal.Km0033 - 1);
    dstatedt[12] = 0 - 1 * internal.cell * internal.Vmax * (s_0037 - s_1059 / internal.Keq) / internal.Km0037 / (1 + s_0037 / internal.Km0037 + 1 + s_1059 / internal.Km1059 - 1) + 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1);
    dstatedt[13] = 0 + 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[14] = 0 + 1 * internal.cell * internal.Vmax * (s_0008 - s_0056 / internal.Keq) / internal.Km0008 / (1 + s_0008 / internal.Km0008 + 1 + s_0056 / internal.Km0056 - 1) - 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1);
    dstatedt[15] = 0 + 1 * internal.cell * internal.Vmax * (s_1194 - s_0061 / internal.Keq) / internal.Km1194 / (1 + s_1194 / internal.Km1194 + 1 + s_0061 / internal.Km0061 - 1) - 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[16] = 0 + 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[17] = 0 - 1 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0062 * NAD - s_0063 * NADH / internal.Keq) / (internal.Km0062 * internal.KmNAD) / ((1 + s_0062 / internal.Km0062) * (1 + NAD / internal.KmNAD) + (1 + s_0063 / internal.Km0063) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[18] = 0 + 1 * internal.cell * internal.Vmax * (s_0725 - s_0066 / internal.Keq) / internal.Km0725 / (1 + s_0725 / internal.Km0725 + 1 + s_0066 / internal.Km0066 - 1) - 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1);
    dstatedt[20] = 0 - 1 * internal.cell * internal.Vmax * (s_0076 - s_0086 * CO2 / internal.Keq) / internal.Km0076 / (1 + s_0076 / internal.Km0076 + (1 + s_0086 / internal.Km0086) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_1187 - s_0076 / internal.Keq) / internal.Km1187 / (1 + s_1187 / internal.Km1187 + 1 + s_0076 / internal.Km0076 - 1);
    dstatedt[21] = 0 - 1 * internal.cell * internal.Vmax * (s_0077 - s_0312 / internal.Keq) / internal.Km0077 / (1 + s_0077 / internal.Km0077 + 1 + s_0312 / internal.Km0312 - 1) + 1 * internal.cell * internal.Vmax * (s_0078 - s_0077 / internal.Keq) / internal.Km0078 / (1 + s_0078 / internal.Km0078 + 1 + s_0077 / internal.Km0077 - 1);
    dstatedt[22] = 0 - 1 * internal.cell * internal.Vmax * (s_0078 - s_0077 / internal.Keq) / internal.Km0078 / (1 + s_0078 / internal.Km0078 + 1 + s_0077 / internal.Km0077 - 1) + 1 * internal.cell * internal.Vmax * (s_0326 - s_0078 * s_0633 / internal.Keq) / internal.Km0326 / (1 + s_0326 / internal.Km0326 + (1 + s_0078 / internal.Km0078) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[23] = 0 - 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) + 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[24] = 0 + 1 * internal.cell * internal.Vmax * (s_0076 - s_0086 * CO2 / internal.Keq) / internal.Km0076 / (1 + s_0076 / internal.Km0076 + (1 + s_0086 / internal.Km0086) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1);
    dstatedt[25] = 0 - 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1) - 0.001583 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[26] = 0 + 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[27] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0304 - s_0120 / internal.Keq) / internal.Km0304 / (1 + s_0304 / internal.Km0304 + 1 + s_0120 / internal.Km0120 - 1) - 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[28] = 0 + 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 5.5999999999999999e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[29] = 0 - 1 * internal.cell * internal.Vmax * (s_0126 - s_1153 * PHO / internal.Keq) / internal.Km0126 / (1 + s_0126 / internal.Km0126 + (1 + s_1153 / internal.Km1153) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (G6P - s_0126 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0126 / internal.Km0126 - 1);
    dstatedt[30] = 0 - 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1);
    dstatedt[31] = 0 - 1 * internal.cell * internal.Vmax * (s_0142 - s_0313 * s_0419 / internal.Keq) / internal.Km0142 / (1 + s_0142 / internal.Km0142 + (1 + s_0313 / internal.Km0313) * (1 + s_0419 / internal.Km0419) - 1) + 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[32] = 0 - 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) + 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[33] = 0 - 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((PYR), (2)) - s_0146 * CO2 / internal.Keq) / Math.pow((internal.KmPYR), (2)) / (Math.pow((1 + PYR / internal.KmPYR), (2)) + (1 + s_0146 / internal.Km0146) * (1 + CO2 / internal.KmCO2) - 1);
    dstatedt[34] = 0 + 1 * internal.cell * internal.Vmax * (s_0577 - s_0158 * s_0722 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + (1 + s_0158 / internal.Km0158) * (1 + s_0722 / internal.Km0722) - 1) - 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[35] = 0 - 1 * internal.cell * internal.Vmax * (s_0162 - s_0165 / internal.Keq) / internal.Km0162 / (1 + s_0162 / internal.Km0162 + 1 + s_0165 / internal.Km0165 - 1) + 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[36] = 0 + 1 * internal.cell * internal.Vmax * (s_0162 - s_0165 / internal.Keq) / internal.Km0162 / (1 + s_0162 / internal.Km0162 + 1 + s_0165 / internal.Km0165 - 1) - 1 * internal.cell * internal.Vmax * (s_0165 - s_0009 / internal.Keq) / internal.Km0165 / (1 + s_0165 / internal.Km0165 + 1 + s_0009 / internal.Km0009 - 1);
    dstatedt[37] = 0 - 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) + 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1);
    dstatedt[38] = 0 - 1 * internal.cell * internal.Vmax * (s_0178 * PYR - s_0039 * CO2 / internal.Keq) / (internal.Km0178 * internal.KmPYR) / ((1 + s_0178 / internal.Km0178) * (1 + PYR / internal.KmPYR) + (1 + s_0039 / internal.Km0039) * (1 + CO2 / internal.KmCO2) - 1) + 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) + 1 * internal.cell * internal.Vmax * (s_1045 - s_0178 * s_0419 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) - 1);
    dstatedt[39] = 0 + 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) + 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1) + 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1) + 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) + 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1) + 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1);
    dstatedt[41] = 0 + 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1);
    dstatedt[42] = 0 + 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[43] = 0 + 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1);
    dstatedt[44] = 0 - 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1) + 1 * internal.cell * internal.Vmax * (s_0550 - s_0207 / internal.Keq) / internal.Km0550 / (1 + s_0550 / internal.Km0550 + 1 + s_0207 / internal.Km0207 - 1);
    dstatedt[45] = 0 + 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[46] = 0 - 1 * internal.cell * internal.Vmax * (s_0210 - s_0211 / internal.Keq) / internal.Km0210 / (1 + s_0210 / internal.Km0210 + 1 + s_0211 / internal.Km0211 - 1) + 1 * internal.cell * internal.Vmax * (s_0349 - s_0210 * PHO / internal.Keq) / internal.Km0349 / (1 + s_0349 / internal.Km0349 + (1 + s_0210 / internal.Km0210) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[47] = 0 + 1 * internal.cell * internal.Vmax * (s_0210 - s_0211 / internal.Keq) / internal.Km0210 / (1 + s_0210 / internal.Km0210 + 1 + s_0211 / internal.Km0211 - 1) - 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1);
    dstatedt[48] = 0 - 1 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[49] = 0 - 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) + 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[50] = 0 - 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0016 - s_0232 / internal.Keq) / internal.Km0016 / (1 + s_0016 / internal.Km0016 + 1 + s_0232 / internal.Km0232 - 1) - 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1);
    dstatedt[52] = 0 - 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[53] = 0 - 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[54] = 0 + 1 * internal.cell * internal.Vmax * (s_0010 - s_0291 * CO2 / internal.Keq) / internal.Km0010 / (1 + s_0010 / internal.Km0010 + (1 + s_0291 / internal.Km0291) * (1 + CO2 / internal.KmCO2) - 1) - 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1);
    dstatedt[55] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) - 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[56] = 0 + 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1);
    dstatedt[57] = 0 - 1 * internal.cell * internal.Vmax * (s_0297 * NAD - s_0209 * CO2 * NADH / internal.Keq) / (internal.Km0297 * internal.KmNAD) / ((1 + s_0297 / internal.Km0297) * (1 + NAD / internal.KmNAD) + (1 + s_0209 / internal.Km0209) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[58] = 0 - 1 * internal.cell * internal.Vmax * (s_0298 * ATP - s_0201 * ADP / internal.Keq) / (internal.Km0298 * internal.KmATP) / ((1 + s_0298 / internal.Km0298) * (1 + ATP / internal.KmATP) + (1 + s_0201 / internal.Km0201) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[59] = 0 - 1 * internal.cell * internal.Vmax * (s_0299 - s_0403 * s_0725 / internal.Keq) / internal.Km0299 / (1 + s_0299 / internal.Km0299 + (1 + s_0403 / internal.Km0403) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[60] = 0 + 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[61] = 0 - 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[62] = 0 + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0302 * ATP - s_0300 * ADP * PHO / internal.Keq) / (internal.Km0302 * internal.KmATP) / ((1 + s_0302 / internal.Km0302) * (1 + ATP / internal.KmATP) + (1 + s_0300 / internal.Km0300) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[63] = 0 - 1 * internal.cell * internal.Vmax * (s_0304 - s_0120 / internal.Keq) / internal.Km0304 / (1 + s_0304 / internal.Km0304 + 1 + s_0120 / internal.Km0120 - 1) - 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[64] = 0 - 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0304 * NADH - s_0306 * NAD / internal.Keq) / (internal.Km0304 * internal.KmNADH) / ((1 + s_0304 / internal.Km0304) * (1 + NADH / internal.KmNADH) + (1 + s_0306 / internal.Km0306) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1);
    dstatedt[65] = 0 + 1 * internal.cell * internal.Vmax * (s_0077 - s_0312 / internal.Keq) / internal.Km0077 / (1 + s_0077 / internal.Km0077 + 1 + s_0312 / internal.Km0312 - 1) - 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1);
    dstatedt[66] = 0 + 1 * internal.cell * internal.Vmax * (s_0142 - s_0313 * s_0419 / internal.Keq) / internal.Km0142 / (1 + s_0142 / internal.Km0142 + (1 + s_0313 / internal.Km0313) * (1 + s_0419 / internal.Km0419) - 1) - 1 * internal.cell * internal.Vmax * (s_0313 - s_0314 * PHO / internal.Keq) / internal.Km0313 / (1 + s_0313 / internal.Km0313 + (1 + s_0314 / internal.Km0314) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[67] = 0 - 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0328), (2)) - s_0314 * s_1405 / internal.Keq) / Math.pow((internal.Km0328), (2)) / (Math.pow((1 + s_0328 / internal.Km0328), (2)) + (1 + s_0314 / internal.Km0314) * (1 + s_1405 / internal.Km1405) - 1) + 1 * internal.cell * internal.Vmax * (s_0313 - s_0314 * PHO / internal.Keq) / internal.Km0313 / (1 + s_0313 / internal.Km0313 + (1 + s_0314 / internal.Km0314) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[68] = 0 + 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[69] = 0 + 1 * internal.cell * internal.Vmax * (s_0261 * PEP - s_0324 * PHO / internal.Keq) / (internal.Km0261 * internal.KmPEP) / ((1 + s_0261 / internal.Km0261) * (1 + PEP / internal.KmPEP) + (1 + s_0324 / internal.Km0324) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0324 - s_0515 * PHO / internal.Keq) / internal.Km0324 / (1 + s_0324 / internal.Km0324 + (1 + s_0515 / internal.Km0515) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[70] = 0 - 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[71] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_0326 - s_0078 * s_0633 / internal.Keq) / internal.Km0326 / (1 + s_0326 / internal.Km0326 + (1 + s_0078 / internal.Km0078) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[72] = 0 - 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1);
    dstatedt[73] = 0 + 1 * internal.cell * internal.Vmax * (s_0158 * s_0314 - s_0328 * PHO / internal.Keq) / (internal.Km0158 * internal.Km0314) / ((1 + s_0158 / internal.Km0158) * (1 + s_0314 / internal.Km0314) + (1 + s_0328 / internal.Km0328) * (1 + PHO / internal.KmPHO) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0328), (2)) - s_0314 * s_1405 / internal.Keq) / Math.pow((internal.Km0328), (2)) / (Math.pow((1 + s_0328 / internal.Km0328), (2)) + (1 + s_0314 / internal.Km0314) * (1 + s_1405 / internal.Km1405) - 1);
    dstatedt[74] = 0 - 1 * internal.cell * internal.Vmax * (s_0335 - s_0340 / internal.Keq) / internal.Km0335 / (1 + s_0335 / internal.Km0335 + 1 + s_0340 / internal.Km0340 - 1) + 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[75] = 0 + 1 * internal.cell * internal.Vmax * (s_0335 - s_0340 / internal.Keq) / internal.Km0335 / (1 + s_0335 / internal.Km0335 + 1 + s_0340 / internal.Km0340 - 1) - 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[76] = 0 + 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0349 - s_0210 * PHO / internal.Keq) / internal.Km0349 / (1 + s_0349 / internal.Km0349 + (1 + s_0210 / internal.Km0210) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[79] = 0 - 1 * internal.cell * internal.Vmax * (s_0362 * s_0529 - s_0373 / internal.Keq) / (internal.Km0362 * internal.Km0529) / ((1 + s_0362 / internal.Km0362) * (1 + s_0529 / internal.Km0529) + 1 + s_0373 / internal.Km0373 - 1) + 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (AcAld * NAD - s_0362 * NADH / internal.Keq) / (internal.KmAcAld * internal.KmNAD) / ((1 + AcAld / internal.KmAcAld) * (1 + NAD / internal.KmNAD) + (1 + s_0362 / internal.Km0362) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1) + 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[80] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_0373), (2)) - s_0367 * s_0529 / internal.Keq) / Math.pow((internal.Km0373), (2)) / (Math.pow((1 + s_0373 / internal.Km0373), (2)) + (1 + s_0367 / internal.Km0367) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[81] = 0 - 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0373), (2)) - s_0367 * s_0529 / internal.Keq) / Math.pow((internal.Km0373), (2)) / (Math.pow((1 + s_0373 / internal.Km0373), (2)) + (1 + s_0367 / internal.Km0367) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0362 * s_0529 - s_0373 / internal.Keq) / (internal.Km0362 * internal.Km0529) / ((1 + s_0362 / internal.Km0362) * (1 + s_0529 / internal.Km0529) + 1 + s_0373 / internal.Km0373 - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1) - 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[82] = 0 - 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) + 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) - 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[83] = 0 - 1 * internal.cell * internal.Vmax * (s_0386 * ATP - ADP * AMP / internal.Keq) / (internal.Km0386 * internal.KmATP) / ((1 + s_0386 / internal.Km0386) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + AMP / internal.KmAMP) - 1) + 1 * internal.cell * internal.Vmax * (s_1413 - s_0386 * s_1012 / internal.Keq) / internal.Km1413 / (1 + s_1413 / internal.Km1413 + (1 + s_0386 / internal.Km0386) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[84] = 0 - 1 * internal.cell * internal.Vmax * (s_0390 - AMP * PHO / internal.Keq) / internal.Km0390 / (1 + s_0390 / internal.Km0390 + (1 + AMP / internal.KmAMP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[85] = 0 - 1 * internal.cell * internal.Vmax * (s_0393 - AMP * s_0725 / internal.Keq) / internal.Km0393 / (1 + s_0393 / internal.Km0393 + (1 + AMP / internal.KmAMP) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[87] = 0 + 1 * internal.cell * internal.Vmax * (s_0299 - s_0403 * s_0725 / internal.Keq) / internal.Km0299 / (1 + s_0299 / internal.Km0299 + (1 + s_0403 / internal.Km0403) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[88] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 0.45879999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[89] = 0 + 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (s_0409 - PHO * s_1520 / internal.Keq) / internal.Km0409 / (1 + s_0409 / internal.Km0409 + (1 + PHO / internal.KmPHO) * (1 + s_1520 / internal.Km1520) - 1);
    dstatedt[90] = 0 + 1 * internal.cell * internal.Vmax * (s_0142 - s_0313 * s_0419 / internal.Keq) / internal.Km0142 / (1 + s_0142 / internal.Km0142 + (1 + s_0313 / internal.Km0313) * (1 + s_0419 / internal.Km0419) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) + 1 * internal.cell * internal.Vmax * (s_0589 - s_0419 * s_0654 / internal.Keq) / internal.Km0589 / (1 + s_0589 / internal.Km0589 + (1 + s_0419 / internal.Km0419) * (1 + s_0654 / internal.Km0654) - 1) - 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_1045 - s_0178 * s_0419 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) - 1) + 1 * internal.cell * internal.Vmax * (s_0420 - s_0419) / internal.Km0420 / (1 + s_0420 / internal.Km0420 + 1 + s_0419 / internal.Km0419 - 1);
    dstatedt[93] = 0 - 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) + 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1);
    dstatedt[94] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) - 0.16070000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[95] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) - 0.1017 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[96] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) - 0.29749999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[98] = 0 - 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (CO2 - s_0445 / internal.Keq) / internal.KmCO2 / (1 + CO2 / internal.KmCO2 + 1 + s_0445 / internal.Km0445 - 1);
    dstatedt[99] = 0 + 1 * internal.cell * internal.Vmax * (s_0835 - s_0454 / internal.Keq) / internal.Km0835 / (1 + s_0835 / internal.Km0835 + 1 + s_0454 / internal.Km0454 - 1) - 1 * internal.cell * internal.Vmax * (s_0454 - s_0836 / internal.Keq) / internal.Km0454 / (1 + s_0454 / internal.Km0454 + 1 + s_0836 / internal.Km0836 - 1);
    dstatedt[100] = 0 - 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[103] = 0 + 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1) - 1 * internal.cell * internal.Vmax * (s_0467 - s_0526 * PHO / internal.Keq) / internal.Km0467 / (1 + s_0467 / internal.Km0467 + (1 + s_0526 / internal.Km0526) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[104] = 0 + 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1);
    dstatedt[105] = 0 + 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1);
    dstatedt[106] = 0 + 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1);
    dstatedt[107] = 0 - 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_0515 - s_1377 / internal.Keq) / internal.Km0515 / (1 + s_0515 / internal.Km0515 + 1 + s_1377 / internal.Km1377 - 1) + 1 * internal.cell * internal.Vmax * (s_0324 - s_0515 * PHO / internal.Keq) / internal.Km0324 / (1 + s_0324 / internal.Km0324 + (1 + s_0515 / internal.Km0515) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[108] = 0 - 1 * internal.cell * internal.Vmax * (s_0516 - s_0940 / internal.Keq) / internal.Km0516 / (1 + s_0516 / internal.Km0516 + 1 + s_0940 / internal.Km0940 - 1) + 1 * internal.cell * internal.Vmax * (s_0522 - s_0516 / internal.Keq) / internal.Km0522 / (1 + s_0522 / internal.Km0522 + 1 + s_0516 / internal.Km0516 - 1);
    dstatedt[109] = 0 + 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0522 - s_0516 / internal.Keq) / internal.Km0522 / (1 + s_0522 / internal.Km0522 + 1 + s_0516 / internal.Km0516 - 1);
    dstatedt[110] = 0 + 1 * internal.cell * internal.Vmax * (s_0467 - s_0526 * PHO / internal.Keq) / internal.Km0467 / (1 + s_0467 / internal.Km0467 + (1 + s_0526 / internal.Km0526) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1) - 0.044699999999999997 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[111] = 0 + 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) + 1 * internal.cell * internal.Vmax * (s_0232 * s_0373 - s_0162 * s_0529 / internal.Keq) / (internal.Km0232 * internal.Km0373) / ((1 + s_0232 / internal.Km0232) * (1 + s_0373 / internal.Km0373) + (1 + s_0162 / internal.Km0162) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0373), (2)) - s_0367 * s_0529 / internal.Keq) / Math.pow((internal.Km0373), (2)) / (Math.pow((1 + s_0373 / internal.Km0373), (2)) + (1 + s_0367 / internal.Km0367) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0362 * s_0529 - s_0373 / internal.Keq) / (internal.Km0362 * internal.Km0529) / ((1 + s_0362 / internal.Km0362) * (1 + s_0529 / internal.Km0529) + 1 + s_0373 / internal.Km0373 - 1) + 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) + 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) + 3 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 3 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) + 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1) + 1 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0367 * s_0373 - s_0218 * s_0529 / internal.Keq) / (internal.Km0367 * internal.Km0373) / ((1 + s_0367 / internal.Km0367) * (1 + s_0373 / internal.Km0373) + (1 + s_0218 / internal.Km0218) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[112] = 0 - 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0028 * s_0539 - s_0019 * s_0467 / internal.Keq) / (internal.Km0028 * internal.Km0539) / ((1 + s_0028 / internal.Km0028) * (1 + s_0539 / internal.Km0539) + (1 + s_0019 / internal.Km0019) * (1 + s_0467 / internal.Km0467) - 1);
    dstatedt[113] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) - 0.0066 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[114] = 0 + 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0550 - s_0207 / internal.Keq) / internal.Km0550 / (1 + s_0550 / internal.Km0550 + 1 + s_0207 / internal.Km0207 - 1);
    dstatedt[115] = 0 - 1 * internal.cell * internal.Vmax * (s_0551 * PEP - s_0349 * PHO / internal.Keq) / (internal.Km0551 * internal.KmPEP) / ((1 + s_0551 / internal.Km0551) * (1 + PEP / internal.KmPEP) + (1 + s_0349 / internal.Km0349) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * DHAP - s_1426 / internal.Keq) / (internal.Km0551 * internal.KmDHAP) / ((1 + s_0551 / internal.Km0551) * (1 + DHAP / internal.KmDHAP) + 1 + s_1426 / internal.Km1426 - 1) + 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1);
    dstatedt[120] = 0 + 1 * internal.cell * internal.Vmax * (G6P - s_0567 / internal.Keq) / internal.KmG6P / (1 + G6P / internal.KmG6P + 1 + s_0567 / internal.Km0567 - 1) - 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1);
    dstatedt[122] = 0 - 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1) + 1 * internal.cell * internal.Vmax * (s_0574 - s_0573 / internal.Keq) / internal.Km0574 / (1 + s_0574 / internal.Km0574 + 1 + s_0573 / internal.Km0573 - 1);
    dstatedt[123] = 0 + 1 * internal.cell * internal.Vmax * (F6P - s_0574 / internal.Keq) / internal.KmF6P / (1 + F6P / internal.KmF6P + 1 + s_0574 / internal.Km0574 - 1) - 1 * internal.cell * internal.Vmax * (s_0574 - s_0573 / internal.Keq) / internal.Km0574 / (1 + s_0574 / internal.Km0574 + 1 + s_0573 / internal.Km0573 - 1);
    dstatedt[124] = 0 - 1 * internal.cell * internal.Vmax * (s_0577 - s_0158 * s_0722 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + (1 + s_0158 / internal.Km0158) * (1 + s_0722 / internal.Km0722) - 1) + 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0577 - s_1408 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_1408 / internal.Km1408 - 1) - 1 * internal.cell * internal.Vmax * (s_0577 - s_0581 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_0581 / internal.Km0581 - 1);
    dstatedt[125] = 0 + 1 * internal.cell * internal.Vmax * (s_0577 - s_0581 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_0581 / internal.Km0581 - 1) - 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1) - 1 * internal.cell * internal.Vmax * (s_0551 * s_0581 - F6P * GAP / internal.Keq) / (internal.Km0551 * internal.Km0581) / ((1 + s_0551 / internal.Km0551) * (1 + s_0581 / internal.Km0581) + (1 + F6P / internal.KmF6P) * (1 + GAP / internal.KmGAP) - 1);
    dstatedt[126] = 0 + 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1);
    dstatedt[127] = 0 + 1 * internal.cell * internal.Vmax * (ADP * s_0582 - ATP * s_0584 / internal.Keq) / (internal.KmADP * internal.Km0582) / ((1 + ADP / internal.KmADP) * (1 + s_0582 / internal.Km0582) + (1 + ATP / internal.KmATP) * (1 + s_0584 / internal.Km0584) - 1) - 0.0035999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[128] = 0 - 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[129] = 0 + 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1);
    dstatedt[130] = 0 - 1 * internal.cell * internal.Vmax * (s_0589 - s_0419 * s_0654 / internal.Keq) / internal.Km0589 / (1 + s_0589 / internal.Km0589 + (1 + s_0419 / internal.Km0419) * (1 + s_0654 / internal.Km0654) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_0587 - ATP * s_0589 / internal.Keq) / (internal.KmADP * internal.Km0587) / ((1 + ADP / internal.KmADP) * (1 + s_0587 / internal.Km0587) + (1 + ATP / internal.KmATP) * (1 + s_0589 / internal.Km0589) - 1) - 0.0023999999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[131] = 0 - 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1.8 * internal.cell * internal.Vmax * (s_0666 * s_0595 - s_0672 / internal.Keq) / (internal.Km0666 * internal.Km0595) / ((1 + s_0666 / internal.Km0666) * (1 + s_0595 / internal.Km0595) + 1 + s_0672 / internal.Km0672 - 1) - 2.6000000000000001 * internal.cell * internal.Vmax * (s_0619 * s_0595 - s_1524 / internal.Keq) / (internal.Km0619 * internal.Km0595) / ((1 + s_0619 / internal.Km0619) * (1 + s_0595 / internal.Km0595) + 1 + s_1524 / internal.Km1524 - 1) - 0.00053559999999999903 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[132] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) - 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1);
    dstatedt[133] = 0 - 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) + 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[134] = 0 + 1 * internal.cell * internal.Vmax * (ADP * s_0613 - ATP * s_0615 / internal.Keq) / (internal.KmADP * internal.Km0613) / ((1 + ADP / internal.KmADP) * (1 + s_0613 / internal.Km0613) + (1 + ATP / internal.KmATP) * (1 + s_0615 / internal.Km0615) - 1) - 0.0023999999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[135] = 0 + 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) + 1 * internal.cell * internal.Vmax * (s_1331 - s_0619 * PHO / internal.Keq) / internal.Km1331 / (1 + s_1331 / internal.Km1331 + (1 + s_0619 / internal.Km0619) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1) - 1 * internal.cell * internal.Vmax * (s_0619 * s_0595 - s_1524 / internal.Keq) / (internal.Km0619 * internal.Km0595) / ((1 + s_0619 / internal.Km0619) * (1 + s_0595 / internal.Km0595) + 1 + s_1524 / internal.Km1524 - 1);
    dstatedt[136] = 0 - 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1);
    dstatedt[138] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) + 1 * internal.cell * internal.Vmax * (s_0656 - s_0633 * s_0654 / internal.Keq) / internal.Km0656 / (1 + s_0656 / internal.Km0656 + (1 + s_0633 / internal.Km0633) * (1 + s_0654 / internal.Km0654) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0602 * s_0633 - ATP * s_0529 * s_0595 / internal.Keq) / (internal.KmAMP * internal.Km0602 * internal.Km0633) / ((1 + AMP / internal.KmAMP) * (1 + s_0602 / internal.Km0602) * (1 + s_0633 / internal.Km0633) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_0595 / internal.Km0595) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1) - 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) - 1 * internal.cell * internal.Vmax * (s_0633 - Math.pow((PHO), (2)) / internal.Keq) / internal.Km0633 / (1 + s_0633 / internal.Km0633 + Math.pow((1 + PHO / internal.KmPHO), (2)) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) + 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) + 1 * internal.cell * internal.Vmax * (s_0326 - s_0078 * s_0633 / internal.Keq) / internal.Km0326 / (1 + s_0326 / internal.Km0326 + (1 + s_0078 / internal.Km0078) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) + 2 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) + 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1);
    dstatedt[139] = 0 + 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (s_0644 - s_0645 * s_1107 / internal.Keq) / internal.Km0644 / (1 + s_0644 / internal.Km0644 + (1 + s_0645 / internal.Km0645) * (1 + s_1107 / internal.Km1107) - 1);
    dstatedt[140] = 0 - 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0644 - s_0645 * s_1107 / internal.Keq) / internal.Km0644 / (1 + s_0644 / internal.Km0644 + (1 + s_0645 / internal.Km0645) * (1 + s_1107 / internal.Km1107) - 1);
    dstatedt[141] = 0 + 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1) - 0.0035999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[142] = 0 + 1 * internal.cell * internal.Vmax * (s_0589 - s_0419 * s_0654 / internal.Keq) / internal.Km0589 / (1 + s_0589 / internal.Km0589 + (1 + s_0419 / internal.Km0419) * (1 + s_0654 / internal.Km0654) - 1) + 1 * internal.cell * internal.Vmax * (s_0656 - s_0633 * s_0654 / internal.Keq) / internal.Km0656 / (1 + s_0656 / internal.Km0656 + (1 + s_0633 / internal.Km0633) * (1 + s_0654 / internal.Km0654) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_0654 - s_0625 * s_0649 / internal.Keq) / (internal.Km0306 * internal.Km0654) / ((1 + s_0306 / internal.Km0306) * (1 + s_0654 / internal.Km0654) + (1 + s_0625 / internal.Km0625) * (1 + s_0649 / internal.Km0649) - 1);
    dstatedt[143] = 0 - 1 * internal.cell * internal.Vmax * (s_0656 - s_0633 * s_0654 / internal.Keq) / internal.Km0656 / (1 + s_0656 / internal.Km0656 + (1 + s_0633 / internal.Km0633) * (1 + s_0654 / internal.Km0654) - 1) + 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[144] = 0 + 1 * internal.cell * internal.Vmax * (s_0700 - s_0657 / internal.Keq) / internal.Km0700 / (1 + s_0700 / internal.Km0700 + 1 + s_0657 / internal.Km0657 - 1) - 9.6000000000000002e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[145] = 0 - 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1) - 0.000125 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[146] = 0 + 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0666 * s_0595 - s_0672 / internal.Keq) / (internal.Km0666 * internal.Km0595) / ((1 + s_0666 / internal.Km0666) * (1 + s_0595 / internal.Km0595) + 1 + s_0672 / internal.Km0672 - 1) - 0.0055999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[147] = 0 + 1 * internal.cell * internal.Vmax * (s_0666 * s_0595 - s_0672 / internal.Keq) / (internal.Km0666 * internal.Km0595) / ((1 + s_0666 / internal.Km0666) * (1 + s_0595 / internal.Km0595) + 1 + s_0672 / internal.Km0672 - 1) - 0.000812 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[150] = 0 - 1 * internal.cell * internal.Vmax * (s_0700 - s_0657 / internal.Keq) / internal.Km0700 / (1 + s_0700 / internal.Km0700 + 1 + s_0657 / internal.Km0657 - 1) + 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) - 0.00011400000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[151] = 0 - 2 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) - 2 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 4 * internal.cell * internal.Vmax * (Math.pow((s_0710), (4)) * s_1275 - Math.pow((s_0709), (4)) / internal.Keq) / (Math.pow((internal.Km0710), (4)) * internal.Km1275) / (Math.pow((1 + s_0710 / internal.Km0710), (4)) * (1 + s_1275 / internal.Km1275) + Math.pow((1 + s_0709 / internal.Km0709), (4)) - 1) - 2 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1);
    dstatedt[152] = 0 + 2 * internal.cell * internal.Vmax * (s_0025 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0025 * Math.pow((internal.Km0709), (2))) / ((1 + s_0025 / internal.Km0025) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) + 2 * internal.cell * internal.Vmax * (s_0063 * Math.pow((s_0709), (2)) - Math.pow((s_0710), (2)) * PYR / internal.Keq) / (internal.Km0063 * Math.pow((internal.Km0709), (2))) / ((1 + s_0063 / internal.Km0063) * Math.pow((1 + s_0709 / internal.Km0709), (2)) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + PYR / internal.KmPYR) - 1) - 4 * internal.cell * internal.Vmax * (Math.pow((s_0710), (4)) * s_1275 - Math.pow((s_0709), (4)) / internal.Keq) / (Math.pow((internal.Km0710), (4)) * internal.Km1275) / (Math.pow((1 + s_0710 / internal.Km0710), (4)) * (1 + s_1275 / internal.Km1275) + Math.pow((1 + s_0709 / internal.Km0709), (4)) - 1) + 2 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1);
    dstatedt[153] = 0 + 1 * internal.cell * internal.Vmax * (s_0577 - s_0158 * s_0722 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + (1 + s_0158 / internal.Km0158) * (1 + s_0722 / internal.Km0722) - 1) + 1 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1);
    dstatedt[154] = 0 + 1 * internal.cell * internal.Vmax * (s_0299 - s_0403 * s_0725 / internal.Keq) / internal.Km0299 / (1 + s_0299 / internal.Km0299 + (1 + s_0403 / internal.Km0403) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0393 - AMP * s_0725 / internal.Keq) / internal.Km0393 / (1 + s_0393 / internal.Km0393 + (1 + AMP / internal.KmAMP) * (1 + s_0725 / internal.Km0725) - 1) + 1 * internal.cell * internal.Vmax * (s_0015 - s_0725 * s_0965 / internal.Keq) / internal.Km0015 / (1 + s_0015 / internal.Km0015 + (1 + s_0725 / internal.Km0725) * (1 + s_0965 / internal.Km0965) - 1) - 1 * internal.cell * internal.Vmax * (s_0725 - s_0066 / internal.Keq) / internal.Km0725 / (1 + s_0725 / internal.Km0725 + 1 + s_0066 / internal.Km0066 - 1) + 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1);
    dstatedt[155] = 0 + 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1) - 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1);
    dstatedt[156] = 0 - 1 * internal.cell * internal.Vmax * (s_0645 * s_0743 - s_0644 * s_0739 / internal.Keq) / (internal.Km0645 * internal.Km0743) / ((1 + s_0645 / internal.Km0645) * (1 + s_0743 / internal.Km0743) + (1 + s_0644 / internal.Km0644) * (1 + s_0739 / internal.Km0739) - 1) + 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1);
    dstatedt[157] = 0 + 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) - 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[158] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) - 0.10539999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[159] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) - 0.30180000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[160] = 0 + 1 * internal.cell * internal.Vmax * (s_0033 - s_0025 * s_0750 / internal.Keq) / internal.Km0033 / (1 + s_0033 / internal.Km0033 + (1 + s_0025 / internal.Km0025) * (1 + s_0750 / internal.Km0750) - 1) - 1 * internal.cell * internal.Vmax * (s_0750 * s_1151 - s_0033 / internal.Keq) / (internal.Km0750 * internal.Km1151) / ((1 + s_0750 / internal.Km0750) * (1 + s_1151 / internal.Km1151) + 1 + s_0033 / internal.Km0033 - 1);
    dstatedt[161] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) - 0.29039999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[165] = 0 - 1 * internal.cell * internal.Vmax * (s_0767 - GLY * PHO / internal.Keq) / internal.Km0767 / (1 + s_0767 / internal.Km0767 + (1 + GLY / internal.KmGLY) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (DHAP * NADH - s_0767 * NAD / internal.Keq) / (internal.KmDHAP * internal.KmNADH) / ((1 + DHAP / internal.KmDHAP) * (1 + NADH / internal.KmNADH) + (1 + s_0767 / internal.Km0767) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0380 * s_0767 - s_0082 * s_0529 / internal.Keq) / (internal.Km0380 * internal.Km0767) / ((1 + s_0380 / internal.Km0380) * (1 + s_0767 / internal.Km0767) + (1 + s_0082 / internal.Km0082) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[166] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0773 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0773 / internal.Km0773) * (1 + s_1538 / internal.Km1538) - 1) - 0.51849999999999996 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[167] = 0 - 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 - s_0779 * s_1458 / internal.Keq) / internal.Km0940 / (1 + s_0940 / internal.Km0940 + (1 + s_0779 / internal.Km0779) * (1 + s_1458 / internal.Km1458) - 1);
    dstatedt[168] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0782 - ADP * s_0739 / internal.Keq) / (internal.KmATP * internal.Km0782) / ((1 + ATP / internal.KmATP) * (1 + s_0782 / internal.Km0782) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (s_0586 * s_0782 - s_0582 * s_0739 / internal.Keq) / (internal.Km0586 * internal.Km0782) / ((1 + s_0586 / internal.Km0586) * (1 + s_0782 / internal.Km0782) + (1 + s_0582 / internal.Km0582) * (1 + s_0739 / internal.Km0739) - 1) - 0.045999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[169] = 0 - 1 * internal.cell * internal.Vmax * (AMP * s_0785 - ADP * s_0739 / internal.Keq) / (internal.KmAMP * internal.Km0785) / ((1 + AMP / internal.KmAMP) * (1 + s_0785 / internal.Km0785) + (1 + ADP / internal.KmADP) * (1 + s_0739 / internal.Km0739) - 1) - 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0785 - s_0141 * s_0633 * s_0722 / internal.Keq) / internal.Km0785 / (1 + s_0785 / internal.Km0785 + (1 + s_0141 / internal.Km0141) * (1 + s_0633 / internal.Km0633) * (1 + s_0722 / internal.Km0722) - 1) - 1 * internal.cell * internal.Vmax * (s_0573 * s_0785 - s_0633 * s_0743 / internal.Keq) / (internal.Km0573 * internal.Km0785) / ((1 + s_0573 / internal.Km0573) * (1 + s_0785 / internal.Km0785) + (1 + s_0633 / internal.Km0633) * (1 + s_0743 / internal.Km0743) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0739 - ADP * s_0785 / internal.Keq) / (internal.KmATP * internal.Km0739) / ((1 + ATP / internal.KmATP) * (1 + s_0739 / internal.Km0739) + (1 + ADP / internal.KmADP) * (1 + s_0785 / internal.Km0785) - 1);
    dstatedt[170] = 0 - 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0505 * s_0529 - AMP * s_0633 * s_0816 / internal.Keq) / (internal.KmATP * internal.Km0505 * internal.Km0529) / ((1 + ATP / internal.KmATP) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0816 / internal.Km0816) - 1);
    dstatedt[171] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) - 0.066299999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[172] = 0 - 1 * internal.cell * internal.Vmax * (s_0835 - s_0454 / internal.Keq) / internal.Km0835 / (1 + s_0835 / internal.Km0835 + 1 + s_0454 / internal.Km0454 - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0373 - s_0529 * s_0835 / internal.Keq) / (internal.Km0180 * internal.Km0373) / ((1 + s_0180 / internal.Km0180) * (1 + s_0373 / internal.Km0373) + (1 + s_0529 / internal.Km0529) * (1 + s_0835 / internal.Km0835) - 1);
    dstatedt[173] = 0 + 1 * internal.cell * internal.Vmax * (s_0454 - s_0836 / internal.Keq) / internal.Km0454 / (1 + s_0454 / internal.Km0454 + 1 + s_0836 / internal.Km0836 - 1) - 1 * internal.cell * internal.Vmax * (s_0836 * NAD - s_0176 * NADH * CO2 / internal.Keq) / (internal.Km0836 * internal.KmNAD) / ((1 + s_0836 / internal.Km0836) * (1 + NAD / internal.KmNAD) + (1 + s_0176 / internal.Km0176) * (1 + NADH / internal.KmNADH) * (1 + CO2 / internal.KmCO2) - 1);
    dstatedt[174] = 0 - 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[175] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) - 0.19270000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[176] = 0 - 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1) + 1 * internal.cell * internal.Vmax * (s_1365 - s_0849 / internal.Keq) / internal.Km1365 / (1 + s_1365 / internal.Km1365 + 1 + s_0849 / internal.Km0849 - 1);
    dstatedt[177] = 0 + 1 * internal.cell * internal.Vmax * (s_0089 * s_0478 - s_0619 * s_0897 / internal.Keq) / (internal.Km0089 * internal.Km0478) / ((1 + s_0089 / internal.Km0089) * (1 + s_0478 / internal.Km0478) + (1 + s_0619 / internal.Km0619) * (1 + s_0897 / internal.Km0897) - 1) - 0.00051707999999999995 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[178] = 0 + 1 * internal.cell * internal.Vmax * (s_0516 - s_0940 / internal.Keq) / internal.Km0516 / (1 + s_0516 / internal.Km0516 + 1 + s_0940 / internal.Km0940 - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * NAD - s_0180 * CO2 * NADH / internal.Keq) / (internal.Km0940 * internal.KmNAD) / ((1 + s_0940 / internal.Km0940) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 - s_0779 * s_1458 / internal.Keq) / internal.Km0940 / (1 + s_0940 / internal.Km0940 + (1 + s_0779 / internal.Km0779) * (1 + s_1458 / internal.Km1458) - 1);
    dstatedt[179] = 0 - 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) - 1 * internal.cell * internal.Vmax * (s_0745 * s_0943 - s_0190 * s_0633 / internal.Keq) / (internal.Km0745 * internal.Km0943) / ((1 + s_0745 / internal.Km0745) * (1 + s_0943 / internal.Km0943) + (1 + s_0190 / internal.Km0190) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_0943 - s_1376 / internal.Keq) / internal.Km0943 / (1 + s_0943 / internal.Km0943 + 1 + s_1376 / internal.Km1376 - 1) + 1 * internal.cell * internal.Vmax * (s_0018 * ATP - ADP * CO2 * s_0943 * PHO / internal.Keq) / (internal.Km0018 * internal.KmATP) / ((1 + s_0018 / internal.Km0018) * (1 + ATP / internal.KmATP) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + s_0943 / internal.Km0943) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[180] = 0 - 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) + 1 * internal.cell * internal.Vmax * (s_1377 - CO2 * s_0951 / internal.Keq) / internal.Km1377 / (1 + s_1377 / internal.Km1377 + (1 + CO2 / internal.KmCO2) * (1 + s_0951 / internal.Km0951) - 1);
    dstatedt[181] = 0 + 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) - 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[182] = 0 - 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1);
    dstatedt[183] = 0 + 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[184] = 0 + 1 * internal.cell * internal.Vmax * (s_0015 - s_0725 * s_0965 / internal.Keq) / internal.Km0015 / (1 + s_0015 / internal.Km0015 + (1 + s_0725 / internal.Km0725) * (1 + s_0965 / internal.Km0965) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[185] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[186] = 0 - 1 * internal.cell * internal.Vmax * (s_0785 * s_0849 * s_0973 - s_0393 * s_0739 * PHO / internal.Keq) / (internal.Km0785 * internal.Km0849 * internal.Km0973) / ((1 + s_0785 / internal.Km0785) * (1 + s_0849 / internal.Km0849) * (1 + s_0973 / internal.Km0973) + (1 + s_0393 / internal.Km0393) * (1 + s_0739 / internal.Km0739) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 - s_0295 * ADP / internal.Keq) / (internal.KmATP * internal.Km0973) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) + (1 + s_0295 / internal.Km0295) * (1 + ADP / internal.KmADP) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[187] = 0 + 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[188] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0979 - s_0015 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0979) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0979 / internal.Km0979) + (1 + s_0015 / internal.Km0015) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[189] = 0 + 1 * internal.cell * internal.Vmax * (s_1012 * s_1039 - s_0980 / internal.Keq) / (internal.Km1012 * internal.Km1039) / ((1 + s_1012 / internal.Km1012) * (1 + s_1039 / internal.Km1039) + 1 + s_0980 / internal.Km0980 - 1) - 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) + 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1);
    dstatedt[190] = 0 + 1 * internal.cell * internal.Vmax * (s_0980 - s_0178 * s_0419 * s_0981 / internal.Keq) / internal.Km0980 / (1 + s_0980 / internal.Km0980 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) * (1 + s_0981 / internal.Km0981) - 1) - 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1);
    dstatedt[191] = 0 - 1 * internal.cell * internal.Vmax * (s_0991 * NADH - s_0118 * NAD / internal.Keq) / (internal.Km0991 * internal.KmNADH) / ((1 + s_0991 / internal.Km0991) * (1 + NADH / internal.KmNADH) + (1 + s_0118 / internal.Km0118) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0176 * s_0991 - s_0180 * s_0953 / internal.Keq) / (internal.Km0176 * internal.Km0991) / ((1 + s_0176 / internal.Km0176) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_0953 / internal.Km0953) - 1) + 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) + 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0180 * s_0419 * NADH - s_0991 * NAD / internal.Keq) / (internal.Km0180 * internal.Km0419 * internal.KmNADH) / ((1 + s_0180 / internal.Km0180) * (1 + s_0419 / internal.Km0419) * (1 + NADH / internal.KmNADH) + (1 + s_0991 / internal.Km0991) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1) + 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * PYR - s_0180 * s_0955 / internal.Keq) / (internal.Km0991 * internal.KmPYR) / ((1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) + (1 + s_0180 / internal.Km0180) * (1 + s_0955 / internal.Km0955) - 1) - 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1) - 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) + 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1) - 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1);
    dstatedt[192] = 0 - 1 * internal.cell * internal.Vmax * (s_0301 * ATP * s_0999 - s_0302 * ADP * s_0991 * PHO / internal.Keq) / (internal.Km0301 * internal.KmATP * internal.Km0999) / ((1 + s_0301 / internal.Km0301) * (1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) + (1 + s_0302 / internal.Km0302) * (1 + ADP / internal.KmADP) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0515 * s_0999 - s_0427 * s_0991 * PYR / internal.Keq) / (internal.Km0515 * internal.Km0999) / ((1 + s_0515 / internal.Km0515) * (1 + s_0999 / internal.Km0999) + (1 + s_0427 / internal.Km0427) * (1 + s_0991 / internal.Km0991) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_0999 - AMP * s_0633 * s_0969 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km0999) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_0999 / internal.Km0999) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0969 / internal.Km0969) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((ATP), (2)) * s_0445 * s_0999 - Math.pow((ADP), (2)) * s_0455 * s_0991 * PHO / internal.Keq) / (Math.pow((internal.KmATP), (2)) * internal.Km0445 * internal.Km0999) / (Math.pow((1 + ATP / internal.KmATP), (2)) * (1 + s_0445 / internal.Km0445) * (1 + s_0999 / internal.Km0999) + Math.pow((1 + ADP / internal.KmADP), (2)) * (1 + s_0455 / internal.Km0455) * (1 + s_0991 / internal.Km0991) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_0991 - ADP * s_0999 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km0991) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) + (1 + ADP / internal.KmADP) * (1 + s_0999 / internal.Km0999) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0312 * s_0999 - s_0403 * s_0550 * s_0991 / internal.Keq) / (internal.Km0312 * internal.Km0999) / ((1 + s_0312 / internal.Km0312) * (1 + s_0999 / internal.Km0999) + (1 + s_0403 / internal.Km0403) * (1 + s_0550 / internal.Km0550) * (1 + s_0991 / internal.Km0991) - 1) - 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1);
    dstatedt[193] = 0 + 1 * internal.cell * internal.Vmax * (s_0779 * s_0955 - s_1003 * PYR / internal.Keq) / (internal.Km0779 * internal.Km0955) / ((1 + s_0779 / internal.Km0779) * (1 + s_0955 / internal.Km0955) + (1 + s_1003 / internal.Km1003) * (1 + PYR / internal.KmPYR) - 1) - 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) - 1 * internal.cell * internal.Vmax * (s_0327 * ATP * s_1003 - s_0325 * ADP * PHO / internal.Keq) / (internal.Km0327 * internal.KmATP * internal.Km1003) / ((1 + s_0327 / internal.Km0327) * (1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) + (1 + s_0325 / internal.Km0325) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1045 - AcAld * s_1003 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + AcAld / internal.KmAcAld) * (1 + s_1003 / internal.Km1003) - 1);
    dstatedt[194] = 0 + 1 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1);
    dstatedt[195] = 0 - 1 * internal.cell * internal.Vmax * (s_1010 * Math.pow((NAD), (2)) - s_1006 * Math.pow((NADH), (2)) / internal.Keq) / (internal.Km1010 * Math.pow((internal.KmNAD), (2))) / ((1 + s_1010 / internal.Km1010) * Math.pow((1 + NAD / internal.KmNAD), (2)) + (1 + s_1006 / internal.Km1006) * Math.pow((1 + NADH / internal.KmNADH), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_1011 - s_1010 * PHO / internal.Keq) / internal.Km1011 / (1 + s_1011 / internal.Km1011 + (1 + s_1010 / internal.Km1010) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[196] = 0 - 1 * internal.cell * internal.Vmax * (s_1011 - s_1010 * PHO / internal.Keq) / internal.Km1011 / (1 + s_1011 / internal.Km1011 + (1 + s_1010 / internal.Km1010) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0207 * s_0991 - s_0180 * s_1011 / internal.Keq) / (internal.Km0207 * internal.Km0991) / ((1 + s_0207 / internal.Km0207) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1011 / internal.Km1011) - 1);
    dstatedt[197] = 0 + 1 * internal.cell * internal.Vmax * (s_1413 - s_0386 * s_1012 / internal.Keq) / internal.Km1413 / (1 + s_1413 / internal.Km1413 + (1 + s_0386 / internal.Km0386) * (1 + s_1012 / internal.Km1012) - 1) - 1 * internal.cell * internal.Vmax * (s_1012 * s_1039 - s_0980 / internal.Keq) / (internal.Km1012 * internal.Km1039) / ((1 + s_1012 / internal.Km1012) * (1 + s_1039 / internal.Km1039) + 1 + s_0980 / internal.Km0980 - 1) - 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[198] = 0 + 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1);
    dstatedt[199] = 0 + 1 * internal.cell * internal.Vmax * (s_0056 * s_0991 - s_0180 * s_1016 / internal.Keq) / (internal.Km0056 * internal.Km0991) / ((1 + s_0056 / internal.Km0056) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1016 / internal.Km1016) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1);
    dstatedt[200] = 0 + 1 * internal.cell * internal.Vmax * (s_0291 * s_0991 - s_0180 * s_1021 / internal.Keq) / (internal.Km0291 * internal.Km0991) / ((1 + s_0291 / internal.Km0291) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1021 / internal.Km1021) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1);
    dstatedt[201] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[202] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) + 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1);
    dstatedt[203] = 0 + 1 * internal.cell * internal.Vmax * (s_0951 * s_0991 - s_0180 * s_1032 / internal.Keq) / (internal.Km0951 * internal.Km0991) / ((1 + s_0951 / internal.Km0951) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1032 / internal.Km1032) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1);
    dstatedt[204] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[205] = 0 - 1 * internal.cell * internal.Vmax * (s_1038 * NAD - s_0180 * s_1025 * NADH / internal.Keq) / (internal.Km1038 * internal.KmNAD) / ((1 + s_1038 / internal.Km1038) * (1 + NAD / internal.KmNAD) + (1 + s_0180 / internal.Km0180) * (1 + s_1025 / internal.Km1025) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1);
    dstatedt[206] = 0 - 1 * internal.cell * internal.Vmax * (s_1012 * s_1039 - s_0980 / internal.Keq) / (internal.Km1012 * internal.Km1039) / ((1 + s_1012 / internal.Km1012) * (1 + s_1039 / internal.Km1039) + 1 + s_0980 / internal.Km0980 - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1) - 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) - 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1);
    dstatedt[207] = 0 - 1 * internal.cell * internal.Vmax * (s_1045 - s_0178 * s_0419 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + s_0178 / internal.Km0178) * (1 + s_0419 / internal.Km0419) - 1) - 1 * internal.cell * internal.Vmax * (s_1045 - AcAld * s_1003 / internal.Keq) / internal.Km1045 / (1 + s_1045 / internal.Km1045 + (1 + AcAld / internal.KmAcAld) * (1 + s_1003 / internal.Km1003) - 1) + 1 * internal.cell * internal.Vmax * (s_1238 - s_1045 * PHO / internal.Keq) / internal.Km1238 / (1 + s_1238 / internal.Km1238 + (1 + s_1045 / internal.Km1045) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1);
    dstatedt[208] = 0 + 1 * internal.cell * internal.Vmax * (s_0086 * s_1039 - GAP * s_1048 / internal.Keq) / (internal.Km0086 * internal.Km1039) / ((1 + s_0086 / internal.Km0086) * (1 + s_1039 / internal.Km1039) + (1 + GAP / internal.KmGAP) * (1 + s_1048 / internal.Km1048) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1);
    dstatedt[209] = 0 + 1 * internal.cell * internal.Vmax * (s_0204 * s_0991 - s_0180 * s_1051 / internal.Keq) / (internal.Km0204 * internal.Km0991) / ((1 + s_0204 / internal.Km0204) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1051 / internal.Km1051) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1);
    dstatedt[210] = 0 + 1 * internal.cell * internal.Vmax * (s_0232 * s_0991 - s_0180 * s_1056 / internal.Keq) / (internal.Km0232 * internal.Km0991) / ((1 + s_0232 / internal.Km0232) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1056 / internal.Km1056) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1);
    dstatedt[211] = 0 - 1 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_0037 - s_1059 / internal.Keq) / internal.Km0037 / (1 + s_0037 / internal.Km0037 + 1 + s_1059 / internal.Km1059 - 1) - 3.1999999999999999e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[212] = 0 + 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1);
    dstatedt[213] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_0529 * s_1065 - AMP * s_0633 * s_1073 / internal.Keq) / (internal.KmATP * internal.Km0529 * internal.Km1065) / ((1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1073 / internal.Km1073) - 1) + 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1);
    dstatedt[214] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) - 0.2964 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[215] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) - 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1);
    dstatedt[216] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) - 0.28620000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[217] = 0 + 1 * internal.cell * internal.Vmax * (s_0373 * ATP * s_0445 - ADP * s_1101 * PHO / internal.Keq) / (internal.Km0373 * internal.KmATP * internal.Km0445) / ((1 + s_0373 / internal.Km0373) * (1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) + (1 + ADP / internal.KmADP) * (1 + s_1101 / internal.Km1101) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) - 3 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) - 1 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 3 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) - 1 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1);
    dstatedt[218] = 0 + 1 * internal.cell * internal.Vmax * (s_0644 - s_0645 * s_1107 / internal.Keq) / internal.Km0644 / (1 + s_0644 / internal.Km0644 + (1 + s_0645 / internal.Km0645) * (1 + s_1107 / internal.Km1107) - 1) - 0.80789999999999995 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[219] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) - 0.050700000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[220] = 0 - 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0750 * s_1151 - s_0033 / internal.Keq) / (internal.Km0750 * internal.Km1151) / ((1 + s_0750 / internal.Km0750) * (1 + s_1151 / internal.Km1151) + 1 + s_0033 / internal.Km0033 - 1) + 1 * internal.cell * internal.Vmax * (DHAP - s_1151 * PHO / internal.Keq) / internal.KmDHAP / (1 + DHAP / internal.KmDHAP + (1 + s_1151 / internal.Km1151) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[221] = 0 + 1 * internal.cell * internal.Vmax * (s_0126 - s_1153 * PHO / internal.Keq) / internal.Km0126 / (1 + s_0126 / internal.Km0126 + (1 + s_1153 / internal.Km1153) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0471 * s_1153 - s_0089 * s_0526 / internal.Keq) / (internal.Km0471 * internal.Km1153) / ((1 + s_0471 / internal.Km0471) * (1 + s_1153 / internal.Km1153) + (1 + s_0089 / internal.Km0089) * (1 + s_0526 / internal.Km0526) - 1);
    dstatedt[222] = 0 + 1 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1);
    dstatedt[223] = 0 + 1 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1);
    dstatedt[224] = 0 + 1 * internal.cell * internal.Vmax * (s_0145 * s_0991 - s_0180 * s_1182 / internal.Keq) / (internal.Km0145 * internal.Km0991) / ((1 + s_0145 / internal.Km0145) * (1 + s_0991 / internal.Km0991) + (1 + s_0180 / internal.Km0180) * (1 + s_1182 / internal.Km1182) - 1) - 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1);
    dstatedt[225] = 0 + 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) - 1 * internal.cell * internal.Vmax * (s_1187 - s_0076 / internal.Keq) / internal.Km1187 / (1 + s_1187 / internal.Km1187 + 1 + s_0076 / internal.Km0076 - 1);
    dstatedt[226] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) - 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[227] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1192 - ADP * s_1191 / internal.Keq) / (internal.KmATP * internal.Km1192) / ((1 + ATP / internal.KmATP) * (1 + s_1192 / internal.Km1192) + (1 + ADP / internal.KmADP) * (1 + s_1191 / internal.Km1191) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1);
    dstatedt[228] = 0 + 1 * internal.cell * internal.Vmax * (s_0455 * s_0973 - s_1194 * PHO / internal.Keq) / (internal.Km0455 * internal.Km0973) / ((1 + s_0455 / internal.Km0455) * (1 + s_0973 / internal.Km0973) + (1 + s_1194 / internal.Km1194) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_1194 - s_0061 / internal.Keq) / internal.Km1194 / (1 + s_1194 / internal.Km1194 + 1 + s_0061 / internal.Km0061 - 1);
    dstatedt[231] = 0 + 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) + 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1) + 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1) + 3 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) + 3 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) + 2 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) + 6 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 2 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 6 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) + 2 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) + 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) - 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1) + 2 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1) + 3 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
    dstatedt[232] = 0 - 1 * internal.cell * internal.Vmax * (s_0141 * s_1212 - s_0142 * s_1207 / internal.Keq) / (internal.Km0141 * internal.Km1212) / ((1 + s_0141 / internal.Km0141) * (1 + s_1212 / internal.Km1212) + (1 + s_0142 / internal.Km0142) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) - 1 * internal.cell * internal.Vmax * (s_0306 * s_1212 - s_0322 * s_1207 / internal.Keq) / (internal.Km0306 * internal.Km1212) / ((1 + s_0306 / internal.Km0306) * (1 + s_1212 / internal.Km1212) + (1 + s_0322 / internal.Km0322) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0146 * s_1212 - s_0016 * s_1207 / internal.Keq) / (internal.Km0146 * internal.Km1212) / ((1 + s_0146 / internal.Km0146) * (1 + s_1212 / internal.Km1212) + (1 + s_0016 / internal.Km0016) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (AcAld * s_1207 - s_0362 * s_1212 / internal.Keq) / (internal.KmAcAld * internal.Km1207) / ((1 + AcAld / internal.KmAcAld) * (1 + s_1207 / internal.Km1207) + (1 + s_0362 / internal.Km0362) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0295 * s_1212 - s_0978 * s_1207 * PHO / internal.Keq) / (internal.Km0295 * internal.Km1212) / ((1 + s_0295 / internal.Km0295) * (1 + s_1212 / internal.Km1212) + (1 + s_0978 / internal.Km0978) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) - 1 * internal.cell * internal.Vmax * (s_0262 * s_1212 - s_0122 * s_1207 / internal.Keq) / (internal.Km0262 * internal.Km1212) / ((1 + s_0262 / internal.Km0262) * (1 + s_1212 / internal.Km1212) + (1 + s_0122 / internal.Km0122) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) - 1 * internal.cell * internal.Vmax * (s_0209 * s_1212 - s_0296 * s_1207 / internal.Keq) / (internal.Km0209 * internal.Km1212) / ((1 + s_0209 / internal.Km0209) * (1 + s_1212 / internal.Km1212) + (1 + s_0296 / internal.Km0296) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1) - 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1) - 3 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (s_0662 * s_1212 - s_0666 * s_1207 / internal.Keq) / (internal.Km0662 * internal.Km1212) / ((1 + s_0662 / internal.Km0662) * (1 + s_1212 / internal.Km1212) + (1 + s_0666 / internal.Km0666) * (1 + s_1207 / internal.Km1207) - 1) - 3 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) - 2 * internal.cell * internal.Vmax * (s_0595 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1065 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0595 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0595 / internal.Km0595) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1065 / internal.Km1065) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1065 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1161 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1065 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1065 / internal.Km1065) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) - 6 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) - 2 * internal.cell * internal.Vmax * (s_1084 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0505 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1084 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1084 / internal.Km1084) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0505 / internal.Km0505) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 6 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1) - 2 * internal.cell * internal.Vmax * (s_0602 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1073 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0602 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_0602 / internal.Km0602) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1073 / internal.Km1073) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1073 * s_1101 * Math.pow((s_1212), (2)) - CO2 * s_0529 * s_1176 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1073 * internal.Km1101 * Math.pow((internal.Km1212), (2))) / ((1 + s_1073 / internal.Km1073) * (1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) - 2 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) + 1 * internal.cell * internal.Vmax * (G6P * s_1207 - s_0335 * s_1212 / internal.Keq) / (internal.KmG6P * internal.Km1207) / ((1 + G6P / internal.KmG6P) * (1 + s_1207 / internal.Km1207) + (1 + s_0335 / internal.Km0335) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0978 * s_1212 - s_1014 * s_1207 / internal.Keq) / (internal.Km0978 * internal.Km1212) / ((1 + s_0978 / internal.Km0978) * (1 + s_1212 / internal.Km1212) + (1 + s_1014 / internal.Km1014) * (1 + s_1207 / internal.Km1207) - 1) - 2 * internal.cell * internal.Vmax * (s_0218 * Math.pow((s_1212), (2)) - s_0028 * s_0529 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km0218 * Math.pow((internal.Km1212), (2))) / ((1 + s_0218 / internal.Km0218) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + s_0028 / internal.Km0028) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0940 * s_1207 - s_0180 * CO2 * s_1212 / internal.Keq) / (internal.Km0940 * internal.Km1207) / ((1 + s_0940 / internal.Km0940) * (1 + s_1207 / internal.Km1207) + (1 + s_0180 / internal.Km0180) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0039 * s_1212 - s_0008 * s_1207 / internal.Keq) / (internal.Km0039 * internal.Km1212) / ((1 + s_0039 / internal.Km0039) * (1 + s_1212 / internal.Km1212) + (1 + s_0008 / internal.Km0008) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0953 * s_1212 - s_0959 * s_1207 / internal.Keq) / (internal.Km0953 * internal.Km1212) / ((1 + s_0953 / internal.Km0953) * (1 + s_1212 / internal.Km1212) + (1 + s_0959 / internal.Km0959) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_1151 * s_1212 - s_0062 * s_1207 / internal.Keq) / (internal.Km1151 * internal.Km1212) / ((1 + s_1151 / internal.Km1151) * (1 + s_1212 / internal.Km1212) + (1 + s_0062 / internal.Km0062) * (1 + s_1207 / internal.Km1207) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1207 - s_0304 * s_1212 / internal.Keq) / (internal.Km0306 * internal.Km1207) / ((1 + s_0306 / internal.Km0306) * (1 + s_1207 / internal.Km1207) + (1 + s_0304 / internal.Km0304) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_1191 * s_1212 - s_0145 * s_1207 * PHO / internal.Keq) / (internal.Km1191 * internal.Km1212) / ((1 + s_1191 / internal.Km1191) * (1 + s_1212 / internal.Km1212) + (1 + s_0145 / internal.Km0145) * (1 + s_1207 / internal.Km1207) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0340 * s_1207 - CO2 * s_0577 * s_1212 / internal.Keq) / (internal.Km0340 * internal.Km1207) / ((1 + s_0340 / internal.Km0340) * (1 + s_1207 / internal.Km1207) + (1 + CO2 / internal.KmCO2) * (1 + s_0577 / internal.Km0577) * (1 + s_1212 / internal.Km1212) - 1) + 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1) - 1 * internal.cell * internal.Vmax * (s_0118 * s_1212 - s_1035 * s_1207 / internal.Keq) / (internal.Km0118 * internal.Km1212) / ((1 + s_0118 / internal.Km0118) * (1 + s_1212 / internal.Km1212) + (1 + s_1035 / internal.Km1035) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0959 * s_0991 * s_1212 - s_1038 * s_1207 / internal.Keq) / (internal.Km0959 * internal.Km0991 * internal.Km1212) / ((1 + s_0959 / internal.Km0959) * (1 + s_0991 / internal.Km0991) * (1 + s_1212 / internal.Km1212) + (1 + s_1038 / internal.Km1038) * (1 + s_1207 / internal.Km1207) - 1) - 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1) - 3 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
    dstatedt[233] = 0 - 1 * internal.cell * internal.Vmax * (s_0981 * s_1233 - s_0362 * s_0980 / internal.Keq) / (internal.Km0981 * internal.Km1233) / ((1 + s_0981 / internal.Km0981) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_0980 / internal.Km0980) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * s_1014 - s_0529 * s_1233 / internal.Keq) / (internal.Km0373 * internal.Km1014) / ((1 + s_0373 / internal.Km0373) * (1 + s_1014 / internal.Km1014) + (1 + s_0529 / internal.Km0529) * (1 + s_1233 / internal.Km1233) - 1) - 1 * internal.cell * internal.Vmax * (s_0841 * s_1233 - s_0362 * s_1012 / internal.Keq) / (internal.Km0841 * internal.Km1233) / ((1 + s_0841 / internal.Km0841) * (1 + s_1233 / internal.Km1233) + (1 + s_0362 / internal.Km0362) * (1 + s_1012 / internal.Km1012) - 1);
    dstatedt[234] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1014 - ADP * s_1238 / internal.Keq) / (internal.KmATP * internal.Km1014) / ((1 + ATP / internal.KmATP) * (1 + s_1014 / internal.Km1014) + (1 + ADP / internal.KmADP) * (1 + s_1238 / internal.Km1238) - 1) - 1 * internal.cell * internal.Vmax * (s_1238 - s_1045 * PHO / internal.Keq) / internal.Km1238 / (1 + s_1238 / internal.Km1238 + (1 + s_1045 / internal.Km1045) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[235] = 0 - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1255 - CO2 * s_0529 * s_0602 * Math.pow((s_1207), (2)) / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1255) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1255 / internal.Km1255) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * (1 + s_0602 / internal.Km0602) * Math.pow((1 + s_1207 / internal.Km1207), (2)) - 1) + 1 * internal.cell * internal.Vmax * (s_0373 * Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * Math.pow((s_1207), (6)) * s_1255 / internal.Keq) / (internal.Km0373 * Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6))) / ((1 + s_0373 / internal.Km0373) * Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * Math.pow((1 + s_1207 / internal.Km1207), (6)) * (1 + s_1255 / internal.Km1255) - 1);
    dstatedt[236] = 0 - 1 * internal.cell * internal.Vmax * (s_0455 * s_1266 - s_0979 * PHO / internal.Keq) / (internal.Km0455 * internal.Km1266) / ((1 + s_0455 / internal.Km0455) * (1 + s_1266 / internal.Km1266) + (1 + s_0979 / internal.Km0979) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0991 * s_1182 - s_1192 * s_1266 / internal.Keq) / (internal.Km0991 * internal.Km1182) / ((1 + s_0991 / internal.Km0991) * (1 + s_1182 / internal.Km1182) + (1 + s_1192 / internal.Km1192) * (1 + s_1266 / internal.Km1266) - 1);
    dstatedt[237] = 0 - 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) + 1 * internal.cell * internal.Vmax * (s_0061 * NAD - s_1269 * NADH / internal.Keq) / (internal.Km0061 * internal.KmNAD) / ((1 + s_0061 / internal.Km0061) * (1 + NAD / internal.KmNAD) + (1 + s_1269 / internal.Km1269) * (1 + NADH / internal.KmNADH) - 1);
    dstatedt[238] = 0 + 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) - 1 * internal.cell * internal.Vmax * (s_1270 - CO2 * s_1545 / internal.Keq) / internal.Km1270 / (1 + s_1270 / internal.Km1270 + (1 + CO2 / internal.KmCO2) * (1 + s_1545 / internal.Km1545) - 1);
    dstatedt[239] = 0 - 1 * internal.cell * internal.Vmax * (s_0991 * s_1271 - s_0180 * s_0973 / internal.Keq) / (internal.Km0991 * internal.Km1271) / ((1 + s_0991 / internal.Km0991) * (1 + s_1271 / internal.Km1271) + (1 + s_0180 / internal.Km0180) * (1 + s_0973 / internal.Km0973) - 1) - 1 * internal.cell * internal.Vmax * (s_0373 * s_1271 - s_0522 * s_0529 / internal.Keq) / (internal.Km0373 * internal.Km1271) / ((1 + s_0373 / internal.Km0373) * (1 + s_1271 / internal.Km1271) + (1 + s_0522 / internal.Km0522) * (1 + s_0529 / internal.Km0529) - 1) + 1 * internal.cell * internal.Vmax * (s_0066 * NAD - NADH * s_1271 / internal.Keq) / (internal.Km0066 * internal.KmNAD) / ((1 + s_0066 / internal.Km0066) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1271 / internal.Km1271) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1271 - ADP * CO2 * PEP / internal.Keq) / (internal.KmATP * internal.Km1271) / ((1 + ATP / internal.KmATP) * (1 + s_1271 / internal.Km1271) + (1 + ADP / internal.KmADP) * (1 + CO2 / internal.KmCO2) * (1 + PEP / internal.KmPEP) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_0445 * PYR - ADP * s_1271 * PHO / internal.Keq) / (internal.KmATP * internal.Km0445 * internal.KmPYR) / ((1 + ATP / internal.KmATP) * (1 + s_0445 / internal.Km0445) * (1 + PYR / internal.KmPYR) + (1 + ADP / internal.KmADP) * (1 + s_1271 / internal.Km1271) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[240] = 0 - 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1) - 3 * internal.cell * internal.Vmax * (s_0122 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0297 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km0122 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_0122 / internal.Km0122) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0297 / internal.Km0297) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 3 * internal.cell * internal.Vmax * (s_1059 * Math.pow((s_1212), (3)) * Math.pow((s_1275), (3)) - s_0262 * s_0722 * Math.pow((s_1207), (3)) / internal.Keq) / (internal.Km1059 * Math.pow((internal.Km1212), (3)) * Math.pow((internal.Km1275), (3))) / ((1 + s_1059 / internal.Km1059) * Math.pow((1 + s_1212 / internal.Km1212), (3)) * Math.pow((1 + s_1275 / internal.Km1275), (3)) + (1 + s_0262 / internal.Km0262) * (1 + s_0722 / internal.Km0722) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_0710), (4)) * s_1275 - Math.pow((s_0709), (4)) / internal.Keq) / (Math.pow((internal.Km0710), (4)) * internal.Km1275) / (Math.pow((1 + s_0710 / internal.Km0710), (4)) * (1 + s_1275 / internal.Km1275) + Math.pow((1 + s_0709 / internal.Km0709), (4)) - 1) - 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) - 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1277 - s_1275) / internal.Km1277 / (1 + s_1277 / internal.Km1277 + 1 + s_1275 / internal.Km1275 - 1);
    dstatedt[242] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * s_1161 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1286 / internal.Keq) / (internal.Km1101 * internal.Km1161 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1161 / internal.Km1161) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1286 / internal.Km1286) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1);
    dstatedt[243] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * s_1176 * Math.pow((s_1212), (2)) - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1302 / internal.Keq) / (internal.Km1101 * internal.Km1176 * Math.pow((internal.Km1212), (2))) / ((1 + s_1101 / internal.Km1101) * (1 + s_1176 / internal.Km1176) * Math.pow((1 + s_1212 / internal.Km1212), (2)) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1302 / internal.Km1302) - 1) - 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1) - 1 * internal.cell * internal.Vmax * (s_1039 * s_1302 - s_0231 * CO2 * s_0529 / internal.Keq) / (internal.Km1039 * internal.Km1302) / ((1 + s_1039 / internal.Km1039) * (1 + s_1302 / internal.Km1302) + (1 + s_0231 / internal.Km0231) * (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[244] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) - 0.13389999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[247] = 0 + 1 * internal.cell * internal.Vmax * (s_0082 * s_0380 - s_0529 * s_1331 / internal.Keq) / (internal.Km0082 * internal.Km0380) / ((1 + s_0082 / internal.Km0082) * (1 + s_0380 / internal.Km0380) + (1 + s_0529 / internal.Km0529) * (1 + s_1331 / internal.Km1331) - 1) - 1 * internal.cell * internal.Vmax * (s_0539 * s_1331 - s_0471 * s_0633 / internal.Keq) / (internal.Km0539 * internal.Km1331) / ((1 + s_0539 / internal.Km0539) * (1 + s_1331 / internal.Km1331) + (1 + s_0471 / internal.Km0471) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_1331 - s_0619 * PHO / internal.Keq) / internal.Km1331 / (1 + s_1331 / internal.Km1331 + (1 + s_0619 / internal.Km0619) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[248] = 0 - 1 * internal.cell * internal.Vmax * (s_1337 - CO2 * s_1351 / internal.Keq) / internal.Km1337 / (1 + s_1337 / internal.Km1337 + (1 + CO2 / internal.KmCO2) * (1 + s_1351 / internal.Km1351) - 1) + 1 * internal.cell * internal.Vmax * (s_0471 * s_1039 - s_0526 * s_1337 / internal.Keq) / (internal.Km0471 * internal.Km1039) / ((1 + s_0471 / internal.Km0471) * (1 + s_1039 / internal.Km1039) + (1 + s_0526 / internal.Km0526) * (1 + s_1337 / internal.Km1337) - 1) - 0.00038999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[249] = 0 - 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[250] = 0 + 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[251] = 0 + 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) - 0.0028800000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[252] = 0 - 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1337 - CO2 * s_1351 / internal.Keq) / internal.Km1337 / (1 + s_1337 / internal.Km1337 + (1 + CO2 / internal.KmCO2) * (1 + s_1351 / internal.Km1351) - 1) - 0.00069700000000000003 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[254] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1364 - s_0299 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1364) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1364 / internal.Km1364) + (1 + s_0299 / internal.Km0299) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0300 * CO2 * ATP - s_1364 * ADP * PHO / internal.Keq) / (internal.Km0300 * internal.KmCO2 * internal.KmATP) / ((1 + s_0300 / internal.Km0300) * (1 + CO2 / internal.KmCO2) * (1 + ATP / internal.KmATP) + (1 + s_1364 / internal.Km1364) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[255] = 0 - 1 * internal.cell * internal.Vmax * (s_1365 - s_0849 / internal.Keq) / internal.Km1365 / (1 + s_1365 / internal.Km1365 + 1 + s_0849 / internal.Km0849 - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[256] = 0 - 1 * internal.cell * internal.Vmax * (s_0943 * s_1376 - s_0633 * s_0745 / internal.Keq) / (internal.Km0943 * internal.Km1376) / ((1 + s_0943 / internal.Km0943) * (1 + s_1376 / internal.Km1376) + (1 + s_0633 / internal.Km0633) * (1 + s_0745 / internal.Km0745) - 1) + 1 * internal.cell * internal.Vmax * (s_0943 - s_1376 / internal.Keq) / internal.Km0943 / (1 + s_0943 / internal.Km0943 + 1 + s_1376 / internal.Km1376 - 1);
    dstatedt[257] = 0 + 1 * internal.cell * internal.Vmax * (s_0515 - s_1377 / internal.Keq) / internal.Km0515 / (1 + s_0515 / internal.Km0515 + 1 + s_1377 / internal.Km1377 - 1) - 1 * internal.cell * internal.Vmax * (s_1377 - CO2 * s_0951 / internal.Keq) / internal.Km1377 / (1 + s_1377 / internal.Km1377 + (1 + CO2 / internal.KmCO2) * (1 + s_0951 / internal.Km0951) - 1) - 1 * internal.cell * internal.Vmax * (s_1207 * s_1377 - s_0204 * CO2 * s_1212 / internal.Keq) / (internal.Km1207 * internal.Km1377) / ((1 + s_1207 / internal.Km1207) * (1 + s_1377 / internal.Km1377) + (1 + s_0204 / internal.Km0204) * (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) - 1);
    dstatedt[258] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) - 0.16470000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[259] = 0 - 1 * internal.cell * internal.Vmax * (s_0427 * s_1386 - s_0633 * s_1187 / internal.Keq) / (internal.Km0427 * internal.Km1386) / ((1 + s_0427 / internal.Km0427) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1187 / internal.Km1187) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1386 - s_0326 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km1386) / ((1 + ATP / internal.KmATP) * (1 + s_1386 / internal.Km1386) + (1 + s_0326 / internal.Km0326) * (1 + s_0633 / internal.Km0633) - 1) - 1 * internal.cell * internal.Vmax * (s_1269 * s_1386 - s_0633 * s_1270 / internal.Keq) / (internal.Km1269 * internal.Km1386) / ((1 + s_1269 / internal.Km1269) * (1 + s_1386 / internal.Km1386) + (1 + s_0633 / internal.Km0633) * (1 + s_1270 / internal.Km1270) - 1) - 1 * internal.cell * internal.Vmax * (s_0999 * s_1386 - s_0327 * s_0633 * s_0991 / internal.Keq) / (internal.Km0999 * internal.Km1386) / ((1 + s_0999 / internal.Km0999) * (1 + s_1386 / internal.Km1386) + (1 + s_0327 / internal.Km0327) * (1 + s_0633 / internal.Km0633) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1);
    dstatedt[261] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_0328), (2)) - s_0314 * s_1405 / internal.Keq) / Math.pow((internal.Km0328), (2)) / (Math.pow((1 + s_0328 / internal.Km0328), (2)) + (1 + s_0314 / internal.Km0314) * (1 + s_1405 / internal.Km1405) - 1) - 0.00098999999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[262] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1408 - AMP * s_1386 / internal.Keq) / (internal.KmATP * internal.Km1408) / ((1 + ATP / internal.KmATP) * (1 + s_1408 / internal.Km1408) + (1 + AMP / internal.KmAMP) * (1 + s_1386 / internal.Km1386) - 1) + 1 * internal.cell * internal.Vmax * (s_0577 - s_1408 / internal.Keq) / internal.Km0577 / (1 + s_0577 / internal.Km0577 + 1 + s_1408 / internal.Km1408 - 1) - 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1);
    dstatedt[263] = 0 - 1 * internal.cell * internal.Vmax * (s_1413 - s_0386 * s_1012 / internal.Keq) / internal.Km1413 / (1 + s_1413 / internal.Km1413 + (1 + s_0386 / internal.Km0386) * (1 + s_1012 / internal.Km1012) - 1) + 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) + 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[264] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1029 - s_0633 * PHO * s_1416 / internal.Keq) / (internal.KmATP * internal.Km1029) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) + (1 + s_0633 / internal.Km0633) * (1 + PHO / internal.KmPHO) * (1 + s_1416 / internal.Km1416) - 1) - 1 * internal.cell * internal.Vmax * (s_1351 * s_1416 - s_1343 * s_1413 / internal.Keq) / (internal.Km1351 * internal.Km1416) / ((1 + s_1351 / internal.Km1351) * (1 + s_1416 / internal.Km1416) + (1 + s_1343 / internal.Km1343) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1342 * s_1416 - s_1346 * s_1413 / internal.Keq) / (internal.Km1342 * internal.Km1416) / ((1 + s_1342 / internal.Km1342) * (1 + s_1416 / internal.Km1416) + (1 + s_1346 / internal.Km1346) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1343 * s_1416 - s_1342 * s_1413 / internal.Keq) / (internal.Km1343 * internal.Km1416) / ((1 + s_1343 / internal.Km1343) * (1 + s_1416 / internal.Km1416) + (1 + s_1342 / internal.Km1342) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1);
    dstatedt[265] = 0 + 1 * internal.cell * internal.Vmax * (s_0551 * DHAP - s_1426 / internal.Keq) / (internal.Km0551 * internal.KmDHAP) / ((1 + s_0551 / internal.Km0551) * (1 + DHAP / internal.KmDHAP) + 1 + s_1426 / internal.Km1426 - 1) - 1 * internal.cell * internal.Vmax * (s_1426 - s_1427 * PHO / internal.Keq) / internal.Km1426 / (1 + s_1426 / internal.Km1426 + (1 + s_1427 / internal.Km1427) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[266] = 0 - 1 * internal.cell * internal.Vmax * (GAP * s_1427 - s_0551 * F6P / internal.Keq) / (internal.KmGAP * internal.Km1427) / ((1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) + (1 + s_0551 / internal.Km0551) * (1 + F6P / internal.KmF6P) - 1) + 1 * internal.cell * internal.Vmax * (s_0581 * s_1408 - GAP * s_1427 / internal.Keq) / (internal.Km0581 * internal.Km1408) / ((1 + s_0581 / internal.Km0581) * (1 + s_1408 / internal.Km1408) + (1 + GAP / internal.KmGAP) * (1 + s_1427 / internal.Km1427) - 1) + 1 * internal.cell * internal.Vmax * (s_1426 - s_1427 * PHO / internal.Keq) / internal.Km1426 / (1 + s_1426 / internal.Km1426 + (1 + s_1427 / internal.Km1427) * (1 + PHO / internal.KmPHO) - 1);
    dstatedt[267] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) - 0.18540000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[268] = 0 + 1 * internal.cell * internal.Vmax * (s_0211 * s_1212 - s_1207 * s_1429 / internal.Keq) / (internal.Km0211 * internal.Km1212) / ((1 + s_0211 / internal.Km0211) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1429 / internal.Km1429) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1429 - s_0261 * ADP / internal.Keq) / (internal.KmATP * internal.Km1429) / ((1 + ATP / internal.KmATP) * (1 + s_1429 / internal.Km1429) + (1 + s_0261 / internal.Km0261) * (1 + ADP / internal.KmADP) - 1);
    dstatedt[269] = 0 + 1 * internal.cell * internal.Vmax * (s_0231 * s_1212 - s_1207 * s_1445 / internal.Keq) / (internal.Km0231 * internal.Km1212) / ((1 + s_0231 / internal.Km0231) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1445 / internal.Km1445) - 1) - 1 * internal.cell * internal.Vmax * (s_0816 * s_1445 - s_0478 * s_0529 / internal.Keq) / (internal.Km0816 * internal.Km1445) / ((1 + s_0816 / internal.Km0816) * (1 + s_1445 / internal.Km1445) + (1 + s_0478 / internal.Km0478) * (1 + s_0529 / internal.Km0529) - 1);
    dstatedt[270] = 0 - 1 * internal.cell * internal.Vmax * (NADH * s_1275 * s_1447 - s_0037 * NAD / internal.Keq) / (internal.KmNADH * internal.Km1275 * internal.Km1447) / ((1 + NADH / internal.KmNADH) * (1 + s_1275 / internal.Km1275) * (1 + s_1447 / internal.Km1447) + (1 + s_0037 / internal.Km0037) * (1 + NAD / internal.KmNAD) - 1) + 1 * internal.cell * internal.Vmax * (Math.pow((s_0190), (2)) * s_1212 - Math.pow((s_0633), (2)) * s_1207 * s_1447 / internal.Keq) / (Math.pow((internal.Km0190), (2)) * internal.Km1212) / (Math.pow((1 + s_0190 / internal.Km0190), (2)) * (1 + s_1212 / internal.Km1212) + Math.pow((1 + s_0633 / internal.Km0633), (2)) * (1 + s_1207 / internal.Km1207) * (1 + s_1447 / internal.Km1447) - 1);
    dstatedt[271] = 0 + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1286 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1449 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1286) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1286 / internal.Km1286) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1449 / internal.Km1449) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_1101), (3)) * Math.pow((s_1212), (6)) * s_1449 - Math.pow((CO2), (3)) * Math.pow((s_0529), (3)) * s_1084 * Math.pow((s_1207), (6)) / internal.Keq) / (Math.pow((internal.Km1101), (3)) * Math.pow((internal.Km1212), (6)) * internal.Km1449) / (Math.pow((1 + s_1101 / internal.Km1101), (3)) * Math.pow((1 + s_1212 / internal.Km1212), (6)) * (1 + s_1449 / internal.Km1449) + Math.pow((1 + CO2 / internal.KmCO2), (3)) * Math.pow((1 + s_0529 / internal.Km0529), (3)) * (1 + s_1084 / internal.Km1084) * Math.pow((1 + s_1207 / internal.Km1207), (6)) - 1) + 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1);
    dstatedt[272] = 0 - 1 * internal.cell * internal.Vmax * (AMP * s_0633 * s_1454 - ATP * s_0529 * s_1449 / internal.Keq) / (internal.KmAMP * internal.Km0633 * internal.Km1454) / ((1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1454 / internal.Km1454) + (1 + ATP / internal.KmATP) * (1 + s_0529 / internal.Km0529) * (1 + s_1449 / internal.Km1449) - 1) + 1 * internal.cell * internal.Vmax * (s_1101 * Math.pow((s_1212), (2)) * s_1302 - CO2 * s_0529 * Math.pow((s_1207), (2)) * s_1454 / internal.Keq) / (internal.Km1101 * Math.pow((internal.Km1212), (2)) * internal.Km1302) / ((1 + s_1101 / internal.Km1101) * Math.pow((1 + s_1212 / internal.Km1212), (2)) * (1 + s_1302 / internal.Km1302) + (1 + CO2 / internal.KmCO2) * (1 + s_0529 / internal.Km0529) * Math.pow((1 + s_1207 / internal.Km1207), (2)) * (1 + s_1454 / internal.Km1454) - 1);
    dstatedt[273] = 0 + 1 * internal.cell * internal.Vmax * (s_0940 - s_0779 * s_1458 / internal.Keq) / internal.Km0940 / (1 + s_0940 / internal.Km0940 + (1 + s_0779 / internal.Km0779) * (1 + s_1458 / internal.Km1458) - 1) - 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1) - 1 * internal.cell * internal.Vmax * s_1458 / internal.Km1458 / (1 + s_1458 / internal.Km1458);
    dstatedt[275] = 0 - 1 * internal.cell * internal.Vmax * (ADP * s_1467 - s_0298 * PHO / internal.Keq) / (internal.KmADP * internal.Km1467) / ((1 + ADP / internal.KmADP) * (1 + s_1467 / internal.Km1467) + (1 + s_0298 / internal.Km0298) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_1468 - s_1467) / internal.Km1468 / (1 + s_1468 / internal.Km1468 + 1 + s_1467 / internal.Km1467 - 1) - 0.02 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[277] = 0 + 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (Math.pow((s_1212), (3)) * s_1469 - s_0841 * Math.pow((s_1207), (3)) / internal.Keq) / (Math.pow((internal.Km1212), (3)) * internal.Km1469) / (Math.pow((1 + s_1212 / internal.Km1212), (3)) * (1 + s_1469 / internal.Km1469) + (1 + s_0841 / internal.Km0841) * Math.pow((1 + s_1207 / internal.Km1207), (3)) - 1);
    dstatedt[278] = 0 + 1 * internal.cell * internal.Vmax * (s_0625 * s_1212 - s_1207 * s_1487 / internal.Keq) / (internal.Km0625 * internal.Km1212) / ((1 + s_0625 / internal.Km0625) * (1 + s_1212 / internal.Km1212) + (1 + s_1207 / internal.Km1207) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_0722 * s_1487 - s_0120 * ADP * PHO / internal.Keq) / (internal.KmATP * internal.Km0722 * internal.Km1487) / ((1 + ATP / internal.KmATP) * (1 + s_0722 / internal.Km0722) * (1 + s_1487 / internal.Km1487) + (1 + s_0120 / internal.Km0120) * (1 + ADP / internal.KmADP) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0325 - s_0301 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0325) / ((1 + s_0120 / internal.Km0120) * (1 + s_0325 / internal.Km0325) + (1 + s_0301 / internal.Km0301) * (1 + s_1487 / internal.Km1487) - 1) - 1 * internal.cell * internal.Vmax * (s_1003 * NAD * s_1487 - s_0306 * s_0419 * CO2 * NADH / internal.Keq) / (internal.Km1003 * internal.KmNAD * internal.Km1487) / ((1 + s_1003 / internal.Km1003) * (1 + NAD / internal.KmNAD) * (1 + s_1487 / internal.Km1487) + (1 + s_0306 / internal.Km0306) * (1 + s_0419 / internal.Km0419) * (1 + CO2 / internal.KmCO2) * (1 + NADH / internal.KmNADH) - 1) + 1 * internal.cell * internal.Vmax * (s_0306 * s_1003 - s_1039 * s_1487 / internal.Keq) / (internal.Km0306 * internal.Km1003) / ((1 + s_0306 / internal.Km0306) * (1 + s_1003 / internal.Km1003) + (1 + s_1039 / internal.Km1039) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0322 * s_1012 - s_1029 * s_1487 / internal.Keq) / (internal.Km0322 * internal.Km1012) / ((1 + s_0322 / internal.Km0322) * (1 + s_1012 / internal.Km1012) + (1 + s_1029 / internal.Km1029) * (1 + s_1487 / internal.Km1487) - 1) + 1 * internal.cell * internal.Vmax * (s_0120 * s_0403 - s_1365 * s_1487 / internal.Keq) / (internal.Km0120 * internal.Km0403) / ((1 + s_0120 / internal.Km0120) * (1 + s_0403 / internal.Km0403) + (1 + s_1365 / internal.Km1365) * (1 + s_1487 / internal.Km1487) - 1);
    dstatedt[279] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) - 0.19139999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[280] = 0 + 1 * internal.cell * internal.Vmax * (s_0409 - PHO * s_1520 / internal.Keq) / internal.Km0409 / (1 + s_0409 / internal.Km0409 + (1 + PHO / internal.KmPHO) * (1 + s_1520 / internal.Km1520) - 1) - 0.023400000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[281] = 0 - 1 * internal.cell * internal.Vmax * (s_0529 * s_1524 - s_0380 * s_0619 / internal.Keq) / (internal.Km0529 * internal.Km1524) / ((1 + s_0529 / internal.Km0529) * (1 + s_1524 / internal.Km1524) + (1 + s_0380 / internal.Km0380) * (1 + s_0619 / internal.Km0619) - 1) + 1 * internal.cell * internal.Vmax * (s_0619 * s_0595 - s_1524 / internal.Keq) / (internal.Km0619 * internal.Km0595) / ((1 + s_0619 / internal.Km0619) * (1 + s_0595 / internal.Km0595) + 1 + s_1524 / internal.Km1524 - 1) - 0.00078100000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[282] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) - 0.028400000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[283] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) - 0.10199999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[284] = 0 - 1 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1) + 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1);
    dstatedt[285] = 0 + 1 * internal.cell * internal.Vmax * (Math.pow((s_0709), (2)) * s_1535 - Math.pow((s_0710), (2)) * s_1537 / internal.Keq) / (Math.pow((internal.Km0709), (2)) * internal.Km1535) / (Math.pow((1 + s_0709 / internal.Km0709), (2)) * (1 + s_1535 / internal.Km1535) + Math.pow((1 + s_0710 / internal.Km0710), (2)) * (1 + s_1537 / internal.Km1537) - 1) - 1 * internal.cell * internal.Vmax * (s_1458 * s_1537 - s_0725 * s_1535 / internal.Keq) / (internal.Km1458 * internal.Km1537) / ((1 + s_1458 / internal.Km1458) * (1 + s_1537 / internal.Km1537) + (1 + s_0725 / internal.Km0725) * (1 + s_1535 / internal.Km1535) - 1);
    dstatedt[286] = 0 + 1 * internal.cell * internal.Vmax * (s_1543 - s_0002 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0002 / internal.Km0002) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (s_1543 - s_0004 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0004 / internal.Km0004) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (s_1543 - s_0773 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0773 / internal.Km0773) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1);
    dstatedt[287] = 0 - 1 * internal.cell * internal.Vmax * (s_1543 - s_0002 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0002 / internal.Km0002) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (s_1543 - s_0004 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0004 / internal.Km0004) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (G6P * s_1543 - s_0409 * s_1538 / internal.Keq) / (internal.KmG6P * internal.Km1543) / ((1 + G6P / internal.KmG6P) * (1 + s_1543 / internal.Km1543) + (1 + s_0409 / internal.Km0409) * (1 + s_1538 / internal.Km1538) - 1) - 1 * internal.cell * internal.Vmax * (s_1543 - s_0773 * s_1538 / internal.Keq) / internal.Km1543 / (1 + s_1543 / internal.Km1543 + (1 + s_0773 / internal.Km0773) * (1 + s_1538 / internal.Km1538) - 1) + 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1);
    dstatedt[288] = 0 + 1 * internal.cell * internal.Vmax * (s_1270 - CO2 * s_1545 / internal.Keq) / internal.Km1270 / (1 + s_1270 / internal.Km1270 + (1 + CO2 / internal.KmCO2) * (1 + s_1545 / internal.Km1545) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1545 - ADP * s_1538 / internal.Keq) / (internal.KmATP * internal.Km1545) / ((1 + ATP / internal.KmATP) * (1 + s_1545 / internal.Km1545) + (1 + ADP / internal.KmADP) * (1 + s_1538 / internal.Km1538) - 1) - 0.059900000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[289] = 0 - 1 * internal.cell * internal.Vmax * (s_0419 * ATP * s_1559 - ADP * s_0539 * PHO / internal.Keq) / (internal.Km0419 * internal.KmATP * internal.Km1559) / ((1 + s_0419 / internal.Km0419) * (1 + ATP / internal.KmATP) * (1 + s_1559 / internal.Km1559) + (1 + ADP / internal.KmADP) * (1 + s_0539 / internal.Km0539) * (1 + PHO / internal.KmPHO) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1538 - ADP * s_1559 / internal.Keq) / (internal.KmATP * internal.Km1538) / ((1 + ATP / internal.KmATP) * (1 + s_1538 / internal.Km1538) + (1 + ADP / internal.KmADP) * (1 + s_1559 / internal.Km1559) - 1) - 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_0567 * s_1559 - s_0633 * s_1543 / internal.Keq) / (internal.Km0567 * internal.Km1559) / ((1 + s_0567 / internal.Km0567) * (1 + s_1559 / internal.Km1559) + (1 + s_0633 / internal.Km0633) * (1 + s_1543 / internal.Km1543) - 1);
    dstatedt[290] = 0 + 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) - 0.2646 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[291] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1565 - AMP * s_0633 * s_0782 * s_0991 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1565) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1565 / internal.Km1565) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0782 / internal.Km0782) * (1 + s_0991 / internal.Km0991) - 1) + 1 * internal.cell * internal.Vmax * (s_0849 * NAD - NADH * s_1565 / internal.Keq) / (internal.Km0849 * internal.KmNAD) / ((1 + s_0849 / internal.Km0849) * (1 + NAD / internal.KmNAD) + (1 + NADH / internal.KmNADH) * (1 + s_1565 / internal.Km1565) - 1);
    dstatedt[292] = 0 + 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1) - 1 * internal.cell * internal.Vmax * (s_1416 * s_1569 - s_0700 * s_1413 / internal.Keq) / (internal.Km1416 * internal.Km1569) / ((1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0700 / internal.Km0700) * (1 + s_1413 / internal.Km1413) - 1) - 1 * internal.cell * internal.Vmax * (s_1275 * s_1416 * s_1569 - s_0662 * s_1413 / internal.Keq) / (internal.Km1275 * internal.Km1416 * internal.Km1569) / ((1 + s_1275 / internal.Km1275) * (1 + s_1416 / internal.Km1416) * (1 + s_1569 / internal.Km1569) + (1 + s_0662 / internal.Km0662) * (1 + s_1413 / internal.Km1413) - 1) - 1.5e-05 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[293] = 0 + 1 * internal.cell * internal.Vmax * (s_0296 * s_1212 * s_1275 - s_1207 * s_1576 / internal.Keq) / (internal.Km0296 * internal.Km1212 * internal.Km1275) / ((1 + s_0296 / internal.Km0296) * (1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) + (1 + s_1207 / internal.Km1207) * (1 + s_1576 / internal.Km1576) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1);
    dstatedt[294] = 0 + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1576 - s_1207 * s_1577 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1576) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1576 / internal.Km1576) + (1 + s_1207 / internal.Km1207) * (1 + s_1577 / internal.Km1577) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1);
    dstatedt[295] = 0 - 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1275 * s_1577 - s_1207 * s_1578 / internal.Keq) / (internal.Km1212 * internal.Km1275 * internal.Km1577) / ((1 + s_1212 / internal.Km1212) * (1 + s_1275 / internal.Km1275) * (1 + s_1577 / internal.Km1577) + (1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) - 1);
    dstatedt[296] = 0 + 1 * internal.cell * internal.Vmax * (s_1207 * s_1578 - CO2 * s_1212 * s_1579 / internal.Keq) / (internal.Km1207 * internal.Km1578) / ((1 + s_1207 / internal.Km1207) * (1 + s_1578 / internal.Km1578) + (1 + CO2 / internal.KmCO2) * (1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1579 - s_1207 * s_1569 / internal.Keq) / (internal.Km1212 * internal.Km1579) / ((1 + s_1212 / internal.Km1212) * (1 + s_1579 / internal.Km1579) + (1 + s_1207 / internal.Km1207) * (1 + s_1569 / internal.Km1569) - 1);
    dstatedt[297] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0955 * s_1582 - s_0404 * AMP * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0955 * internal.Km1582) / ((1 + ATP / internal.KmATP) * (1 + s_0955 / internal.Km0955) * (1 + s_1582 / internal.Km1582) + (1 + s_0404 / internal.Km0404) * (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) - 1) + 0.45879999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[298] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0965 * s_1583 - AMP * s_0428 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0965 * internal.Km1583) / ((1 + ATP / internal.KmATP) * (1 + s_0965 / internal.Km0965) * (1 + s_1583 / internal.Km1583) + (1 + AMP / internal.KmAMP) * (1 + s_0428 / internal.Km0428) * (1 + s_0633 / internal.Km0633) - 1) + 0.16070000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[299] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0969 * s_1585 - AMP * s_0430 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0969 * internal.Km1585) / ((1 + ATP / internal.KmATP) * (1 + s_0969 / internal.Km0969) * (1 + s_1585 / internal.Km1585) + (1 + AMP / internal.KmAMP) * (1 + s_0430 / internal.Km0430) * (1 + s_0633 / internal.Km0633) - 1) + 0.1017 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[300] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0973 * s_1587 - AMP * s_0432 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0973 * internal.Km1587) / ((1 + ATP / internal.KmATP) * (1 + s_0973 / internal.Km0973) * (1 + s_1587 / internal.Km1587) + (1 + AMP / internal.KmAMP) * (1 + s_0432 / internal.Km0432) * (1 + s_0633 / internal.Km0633) - 1) + 0.29749999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[301] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0981 * s_1589 - AMP * s_0542 * s_0633 / internal.Keq) / (internal.KmATP * internal.Km0981 * internal.Km1589) / ((1 + ATP / internal.KmATP) * (1 + s_0981 / internal.Km0981) * (1 + s_1589 / internal.Km1589) + (1 + AMP / internal.KmAMP) * (1 + s_0542 / internal.Km0542) * (1 + s_0633 / internal.Km0633) - 1) + 0.0066 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[302] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0999 * s_1590 - AMP * s_0633 * s_0747 / internal.Keq) / (internal.KmATP * internal.Km0999 * internal.Km1590) / ((1 + ATP / internal.KmATP) * (1 + s_0999 / internal.Km0999) * (1 + s_1590 / internal.Km1590) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0747 / internal.Km0747) - 1) + 0.10539999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[303] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_0991 * s_1591 - AMP * s_0633 * s_0748 / internal.Keq) / (internal.KmATP * internal.Km0991 * internal.Km1591) / ((1 + ATP / internal.KmATP) * (1 + s_0991 / internal.Km0991) * (1 + s_1591 / internal.Km1591) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0748 / internal.Km0748) - 1) + 0.30180000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[304] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1003 * s_1593 - AMP * s_0633 * s_0757 / internal.Keq) / (internal.KmATP * internal.Km1003 * internal.Km1593) / ((1 + ATP / internal.KmATP) * (1 + s_1003 / internal.Km1003) * (1 + s_1593 / internal.Km1593) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0757 / internal.Km0757) - 1) + 0.29039999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[305] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1006 * s_1594 - AMP * s_0633 * s_0832 / internal.Keq) / (internal.KmATP * internal.Km1006 * internal.Km1594) / ((1 + ATP / internal.KmATP) * (1 + s_1006 / internal.Km1006) * (1 + s_1594 / internal.Km1594) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0832 / internal.Km0832) - 1) + 0.066299999999999998 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[306] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1016 * s_1596 - AMP * s_0633 * s_0847 / internal.Keq) / (internal.KmATP * internal.Km1016 * internal.Km1596) / ((1 + ATP / internal.KmATP) * (1 + s_1016 / internal.Km1016) * (1 + s_1596 / internal.Km1596) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_0847 / internal.Km0847) - 1) + 0.19270000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[307] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1021 * s_1598 - AMP * s_0633 * s_1077 / internal.Keq) / (internal.KmATP * internal.Km1021 * internal.Km1598) / ((1 + ATP / internal.KmATP) * (1 + s_1021 / internal.Km1021) * (1 + s_1598 / internal.Km1598) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1077 / internal.Km1077) - 1) + 0.2964 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[308] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1025 * s_1600 - AMP * s_0633 * s_1099 / internal.Keq) / (internal.KmATP * internal.Km1025 * internal.Km1600) / ((1 + ATP / internal.KmATP) * (1 + s_1025 / internal.Km1025) * (1 + s_1600 / internal.Km1600) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1099 / internal.Km1099) - 1) + 0.28620000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[309] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1029 * s_1602 - AMP * s_0633 * s_1148 / internal.Keq) / (internal.KmATP * internal.Km1029 * internal.Km1602) / ((1 + ATP / internal.KmATP) * (1 + s_1029 / internal.Km1029) * (1 + s_1602 / internal.Km1602) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1148 / internal.Km1148) - 1) + 0.050700000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[310] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1032 * s_1604 - AMP * s_0633 * s_1314 / internal.Keq) / (internal.KmATP * internal.Km1032 * internal.Km1604) / ((1 + ATP / internal.KmATP) * (1 + s_1032 / internal.Km1032) * (1 + s_1604 / internal.Km1604) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1314 / internal.Km1314) - 1) + 0.13389999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[311] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1035 * s_1606 - AMP * s_0633 * s_1379 / internal.Keq) / (internal.KmATP * internal.Km1035 * internal.Km1606) / ((1 + ATP / internal.KmATP) * (1 + s_1035 / internal.Km1035) * (1 + s_1606 / internal.Km1606) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1379 / internal.Km1379) - 1) + 0.16470000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[312] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1039 * s_1607 - AMP * s_0633 * s_1428 / internal.Keq) / (internal.KmATP * internal.Km1039 * internal.Km1607) / ((1 + ATP / internal.KmATP) * (1 + s_1039 / internal.Km1039) * (1 + s_1607 / internal.Km1607) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1428 / internal.Km1428) - 1) + 0.18540000000000001 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[313] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1045 * s_1608 - AMP * s_0633 * s_1491 / internal.Keq) / (internal.KmATP * internal.Km1045 * internal.Km1608) / ((1 + ATP / internal.KmATP) * (1 + s_1045 / internal.Km1045) * (1 + s_1608 / internal.Km1608) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1491 / internal.Km1491) - 1) + 0.19139999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[314] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1048 * s_1610 - AMP * s_0633 * s_1527 / internal.Keq) / (internal.KmATP * internal.Km1048 * internal.Km1610) / ((1 + ATP / internal.KmATP) * (1 + s_1048 / internal.Km1048) * (1 + s_1610 / internal.Km1610) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1527 / internal.Km1527) - 1) + 0.028400000000000002 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[315] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1051 * s_1612 - AMP * s_0633 * s_1533 / internal.Keq) / (internal.KmATP * internal.Km1051 * internal.Km1612) / ((1 + ATP / internal.KmATP) * (1 + s_1051 / internal.Km1051) * (1 + s_1612 / internal.Km1612) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1533 / internal.Km1533) - 1) + 0.10199999999999999 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[316] = 0 - 1 * internal.cell * internal.Vmax * (ATP * s_1056 * s_1614 - AMP * s_0633 * s_1561 / internal.Keq) / (internal.KmATP * internal.Km1056 * internal.Km1614) / ((1 + ATP / internal.KmATP) * (1 + s_1056 / internal.Km1056) * (1 + s_1614 / internal.Km1614) + (1 + AMP / internal.KmAMP) * (1 + s_0633 / internal.Km0633) * (1 + s_1561 / internal.Km1561) - 1) + 0.2646 * internal.cell * Math.max(internal.v0 * (1 + internal.ep0002 * Math.log(s_0002 / internal.ic0002) + internal.epAMP * Math.log(AMP / internal.icAMP) + internal.epATP * Math.log(ATP / internal.icATP) + internal.ep0526 * Math.log(s_0526 / internal.ic0526) + internal.ep0584 * Math.log(s_0584 / internal.ic0584) + internal.ep0589 * Math.log(s_0589 / internal.ic0589) + internal.ep0615 * Math.log(s_0615 / internal.ic0615) + internal.ep0649 * Math.log(s_0649 / internal.ic0649) + internal.ep0773 * Math.log(s_0773 / internal.ic0773) + internal.ep0782 * Math.log(s_0782 / internal.ic0782) + internal.ep1107 * Math.log(s_1107 / internal.ic1107) + internal.ep1405 * Math.log(s_1405 / internal.ic1405) + internal.ep1467 * Math.log(s_1467 / internal.ic1467) + internal.ep1520 * Math.log(s_1520 / internal.ic1520) + internal.ep1545 * Math.log(s_1545 / internal.ic1545) + internal.ep0004 * Math.log(s_0004 / internal.ic0004) + internal.ep0404 * Math.log(s_0404 / internal.ic0404) + internal.ep0428 * Math.log(s_0428 / internal.ic0428) + internal.ep0430 * Math.log(s_0430 / internal.ic0430) + internal.ep0432 * Math.log(s_0432 / internal.ic0432) + internal.ep0542 * Math.log(s_0542 / internal.ic0542) + internal.ep0747 * Math.log(s_0747 / internal.ic0747) + internal.ep0748 * Math.log(s_0748 / internal.ic0748) + internal.ep0757 * Math.log(s_0757 / internal.ic0757) + internal.ep0832 * Math.log(s_0832 / internal.ic0832) + internal.ep0847 * Math.log(s_0847 / internal.ic0847) + internal.ep1077 * Math.log(s_1077 / internal.ic1077) + internal.ep1099 * Math.log(s_1099 / internal.ic1099) + internal.ep1148 * Math.log(s_1148 / internal.ic1148) + internal.ep1314 * Math.log(s_1314 / internal.ic1314) + internal.ep1379 * Math.log(s_1379 / internal.ic1379) + internal.ep1337 * Math.log(s_1337 / internal.ic1337) + internal.ep0089 * Math.log(s_0089 / internal.ic0089) + internal.ep1428 * Math.log(s_1428 / internal.ic1428) + internal.ep1491 * Math.log(s_1491 / internal.ic1491) + internal.ep1527 * Math.log(s_1527 / internal.ic1527) + internal.ep1533 * Math.log(s_1533 / internal.ic1533) + internal.ep1561 * Math.log(s_1561 / internal.ic1561) + internal.ep0122 * Math.log(s_0122 / internal.ic0122) + internal.ep0897 * Math.log(s_0897 / internal.ic0897) + internal.ep0657 * Math.log(s_0657 / internal.ic0657) + internal.ep0662 * Math.log(s_0662 / internal.ic0662) + internal.ep0666 * Math.log(s_0666 / internal.ic0666) + internal.ep0672 * Math.log(s_0672 / internal.ic0672) + internal.ep0595 * Math.log(s_0595 / internal.ic0595) + internal.ep0700 * Math.log(s_0700 / internal.ic0700) + internal.ep1059 * Math.log(s_1059 / internal.ic1059) + internal.ep1346 * Math.log(s_1346 / internal.ic1346) + internal.ep1351 * Math.log(s_1351 / internal.ic1351) + internal.ep1524 * Math.log(s_1524 / internal.ic1524) + internal.ep1569 * Math.log(s_1569 / internal.ic1569)), internal.zero_flux);
    dstatedt[317] = 0 - 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
    dstatedt[318] = 0 + 1 * internal.cell * internal.Vmax * (s_0201 * s_1616 - s_0390 * s_1469 * s_1620 / internal.Keq) / (internal.Km0201 * internal.Km1616) / ((1 + s_0201 / internal.Km0201) * (1 + s_1616 / internal.Km1616) + (1 + s_0390 / internal.Km0390) * (1 + s_1469 / internal.Km1469) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (ATP * s_1616 - s_0586 * s_1620 / internal.Keq) / (internal.KmATP * internal.Km1616) / ((1 + ATP / internal.KmATP) * (1 + s_1616 / internal.Km1616) + (1 + s_0586 / internal.Km0586) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_1559 * s_1616 - s_0656 * s_1620 / internal.Keq) / (internal.Km1559 * internal.Km1616) / ((1 + s_1559 / internal.Km1559) * (1 + s_1616 / internal.Km1616) + (1 + s_0656 / internal.Km0656) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (ADP * s_1616 - s_0582 * s_1620 / internal.Keq) / (internal.KmADP * internal.Km1616) / ((1 + ADP / internal.KmADP) * (1 + s_1616 / internal.Km1616) + (1 + s_0582 / internal.Km0582) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_0467 * s_1616 - s_0587 * s_1620 / internal.Keq) / (internal.Km0467 * internal.Km1616) / ((1 + s_0467 / internal.Km0467) * (1 + s_1616 / internal.Km1616) + (1 + s_0587 / internal.Km0587) * (1 + s_1620 / internal.Km1620) - 1) + 1 * internal.cell * internal.Vmax * (s_0739 * s_1616 - s_0613 * s_1620 / internal.Keq) / (internal.Km0739 * internal.Km1616) / ((1 + s_0739 / internal.Km0739) * (1 + s_1616 / internal.Km1616) + (1 + s_0613 / internal.Km0613) * (1 + s_1620 / internal.Km1620) - 1) - 1 * internal.cell * internal.Vmax * (s_1212 * s_1620 - s_1207 * s_1616 / internal.Keq) / (internal.Km1212 * internal.Km1620) / ((1 + s_1212 / internal.Km1212) * (1 + s_1620 / internal.Km1620) + (1 + s_1207 / internal.Km1207) * (1 + s_1616 / internal.Km1616) - 1);
  }
  names() {
    return this.metadata.ynames.slice(1);
  }
  updateMetadata() {
    this.metadata = {};
    var internal = this.internal;
    this.metadata.ynames = ["t", "s_0002", "s_0004", "s_0008", "s_0009", "s_0010", "s_0015", "s_0016", "s_0018", "s_0019", "s_0025", "s_0028", "s_0033", "s_0037", "s_0039", "s_0056", "s_0061", "s_0062", "s_0063", "s_0066", "BPG", "s_0076", "s_0077", "s_0078", "s_0082", "s_0086", "s_0089", "s_0118", "s_0120", "s_0122", "s_0126", "s_0141", "s_0142", "s_0145", "s_0146", "s_0158", "s_0162", "s_0165", "s_0176", "s_0178", "s_0180", "P2G", "s_0190", "s_0201", "s_0204", "s_0207", "s_0209", "s_0210", "s_0211", "s_0218", "s_0231", "s_0232", "P3G", "s_0261", "s_0262", "s_0291", "s_0295", "s_0296", "s_0297", "s_0298", "s_0299", "s_0300", "s_0301", "s_0302", "s_0304", "s_0306", "s_0312", "s_0313", "s_0314", "s_0322", "s_0324", "s_0325", "s_0326", "s_0327", "s_0328", "s_0335", "s_0340", "s_0349", "AcAld", "s_0360", "s_0362", "s_0367", "s_0373", "s_0380", "s_0386", "s_0390", "s_0393", "ADP", "s_0403", "s_0404", "s_0409", "s_0419", "s_0420", "AMP", "s_0427", "s_0428", "s_0430", "s_0432", "ATP", "s_0445", "s_0454", "s_0455", "CO2", "s_0458", "s_0467", "s_0471", "s_0478", "s_0505", "s_0515", "s_0516", "s_0522", "s_0526", "s_0529", "s_0539", "s_0542", "s_0550", "s_0551", "F16bP", "F6P", "GLC", "GLCx", "s_0567", "G6P", "s_0573", "s_0574", "s_0577", "s_0581", "s_0582", "s_0584", "s_0586", "s_0587", "s_0589", "s_0595", "s_0602", "s_0613", "s_0615", "s_0619", "s_0625", "DHAP", "s_0633", "s_0644", "s_0645", "s_0649", "s_0654", "s_0656", "s_0657", "s_0662", "s_0666", "s_0672", "EtOH", "s_0681", "s_0700", "s_0709", "s_0710", "s_0722", "s_0725", "s_0739", "s_0743", "s_0745", "s_0747", "s_0748", "s_0750", "s_0757", "GAP", "GLY", "s_0766", "s_0767", "s_0773", "s_0779", "s_0782", "s_0785", "s_0816", "s_0832", "s_0835", "s_0836", "s_0841", "s_0847", "s_0849", "s_0897", "s_0940", "s_0943", "s_0951", "s_0953", "s_0955", "s_0959", "s_0965", "s_0969", "s_0973", "s_0978", "s_0979", "s_0980", "s_0981", "s_0991", "s_0999", "s_1003", "s_1006", "s_1010", "s_1011", "s_1012", "s_1014", "s_1016", "s_1021", "s_1025", "s_1029", "s_1032", "s_1035", "s_1038", "s_1039", "s_1045", "s_1048", "s_1051", "s_1056", "s_1059", "s_1065", "s_1073", "s_1077", "s_1084", "s_1099", "s_1101", "s_1107", "s_1148", "s_1151", "s_1153", "s_1161", "s_1176", "s_1182", "s_1187", "s_1191", "s_1192", "s_1194", "NAD", "NADH", "s_1207", "s_1212", "s_1233", "s_1238", "s_1255", "s_1266", "s_1269", "s_1270", "s_1271", "s_1275", "s_1277", "s_1286", "s_1302", "s_1314", "PHO", "s_1324", "s_1331", "s_1337", "s_1342", "s_1343", "s_1346", "s_1351", "PEP", "s_1364", "s_1365", "s_1376", "s_1377", "s_1379", "s_1386", "PYR", "s_1405", "s_1408", "s_1413", "s_1416", "s_1426", "s_1427", "s_1428", "s_1429", "s_1445", "s_1447", "s_1449", "s_1454", "s_1458", "s_1459", "s_1467", "s_1468", "s_1469", "s_1487", "s_1491", "s_1520", "s_1524", "s_1527", "s_1533", "s_1535", "s_1537", "s_1538", "s_1543", "s_1545", "s_1559", "s_1561", "s_1565", "s_1569", "s_1576", "s_1577", "s_1578", "s_1579", "s_1582", "s_1583", "s_1585", "s_1587", "s_1589", "s_1590", "s_1591", "s_1593", "s_1594", "s_1596", "s_1598", "s_1600", "s_1602", "s_1604", "s_1606", "s_1607", "s_1608", "s_1610", "s_1612", "s_1614", "s_1616", "s_1620", "e_0001", "e_0002", "e_0003", "e_0004", "e_0005", "e_0006", "e_0007", "e_0008", "e_0010", "e_0011", "e_0012", "e_0017", "e_0020", "e_0022", "e_0025", "e_0026", "e_0028", "e_0030", "e_0031", "e_0033", "e_0038", "e_0045", "e_0051", "e_0053", "e_0054", "e_0057", "e_0062", "e_0063", "e_0064", "e_0065", "e_0066", "e_0069", "e_0071", "e_0074", "e_0079", "e_0084", "e_0087", "e_0088", "e_0089", "e_0090", "e_0091", "e_0092", "e_0100", "e_0101", "e_0103", "e_0106", "e_0107", "e_0109", "e_0111", "e_0113", "e_0117", "e_0122", "e_0124", "e_0127", "e_0128", "e_0129", "e_0133", "e_0134", "e_0135", "e_0136", "e_0137", "e_0141", "e_0142", "e_0146", "e_0151", "e_0152", "e_0154", "e_0155", "e_0160", "e_0165", "e_0167", "e_0168", "e_0169", "e_0171", "e_0175", "e_0176", "e_0177", "e_0179", "e_0182", "e_0183", "e_0186", "e_0188", "e_0194", "e_0196", "e_0202", "e_0203", "e_0204", "e_0207", "e_0213", "e_0214", "e_0218", "e_0219", "e_0220", "e_0223", "e_0231", "e_0234", "e_0237", "e_0239", "e_0243", "e_0249", "e_0250", "e_0251", "e_0255", "e_0260", "e_0263", "e_0268", "e_0269", "e_0271", "e_0273", "e_0276", "e_0278", "e_0280", "e_0281", "e_0283", "e_0288", "e_0289", "e_0290", "e_0291", "e_0293", "e_0295", "e_0296", "e_0297", "e_0298", "e_0299", "e_0303", "e_0311", "e_0312", "e_0313", "e_0314", "e_0317", "e_0320", "e_0321", "e_0322", "e_0325", "e_0326", "e_0328", "e_0329", "e_0330", "e_0334", "e_0340", "e_0342", "e_0343", "e_0346", "e_0347", "e_0348", "e_0352", "e_0353", "e_0355", "e_0356", "e_0362", "e_0364", "e_0365", "e_0367", "e_0368", "e_0370", "e_0372", "e_0376", "e_0379", "e_0380", "e_0381", "e_0382", "e_0385", "e_0387", "e_0389", "e_0390", "e_0392", "e_0396", "e_0398", "e_0401", "e_0404", "e_0405", "e_0407", "e_0409", "e_0417", "e_0418", "e_0422", "e_0424", "e_0425", "e_0426", "e_0427", "e_0428", "e_0429", "e_0431", "e_0432", "e_0434", "e_0435", "e_0436", "e_0440", "e_0447", "e_0448", "e_0452", "e_0453", "e_0454", "e_0455", "e_0456", "e_0457", "e_0458", "e_0462", "e_0465", "e_0466", "e_0467", "e_0470", "e_0472", "e_0475", "e_0476", "e_0489", "e_0492", "e_0494", "e_0495", "e_0496", "e_0499", "e_0506", "e_0508", "e_0510", "e_0512", "e_0514", "e_0515", "e_0525", "e_0528", "e_0531", "e_0536", "e_0540", "e_0541", "e_0542", "e_0544", "e_0545", "e_0547", "e_0548", "e_0549", "e_0550", "e_0556", "e_0557", "e_0558", "e_0559", "e_0561", "e_0565", "e_0567", "e_0568", "e_0569", "e_0571", "e_0574", "e_0576", "e_0578", "e_0579", "e_0581", "e_0582", "e_0585", "e_0586", "e_0588", "e_0591", "e_0594", "e_0601", "e_0603", "e_0607", "e_0610", "e_0611", "e_0612", "e_0613", "e_0615", "e_0619", "e_0621", "e_0629", "e_0631", "e_0632", "e_0633", "e_0636", "e_0638", "e_0639", "e_0642", "e_0644", "e_0647", "e_0658", "e_0667", "e_0671", "e_0674", "e_0675", "e_0682", "e_0684", "e_0685", "e_0686", "e_0687", "e_0690", "e_0692", "e_0693", "e_0695", "e_0697", "e_0698", "e_0699", "e_0704", "e_0705", "e_0708", "e_0709", "e_0711", "e_0712", "e_0716", "e_0727", "e_0729", "e_0730", "e_0733", "e_0734", "e_0736", "e_0740", "e_0741", "e_0742", "e_0743", "e_0744", "e_0745", "e_0746", "e_0747", "e_0750", "e_0752", "e_0753", "e_0754", "e_0755", "e_0757", "e_0761", "e_0762", "e_0763", "e_0765", "e_0769", "e_0771", "e_0774", "e_0778", "e_0788", "e_0791", "e_0792", "e_0793", "e_0799", "e_0800", "e_0802", "e_0805", "e_0808", "e_0812", "e_0813", "e_0826", "e_0827", "e_0829", "e_0830", "e_0832", "e_0834", "e_0836", "e_0838", "e_0840", "e_0841", "e_0842", "e_0846", "e_0848", "e_0850", "e_0851", "e_0852", "e_0855", "e_0860", "e_0862", "e_0867", "e_0869", "e_0875", "e_0880", "e_0883", "e_0884", "e_0888", "e_0889", "e_0890", "e_0892", "e_0894", "e_0895", "e_0898", "e_0903", "e_0904", "e_0911", "e_0913", "e_0915", "e_0922", "e_0924", "e_0926", "e_0934", "e_0935", "e_0940", "e_0944", "e_0947", "e_0950", "e_0953", "e_0955", "e_0956", "e_0959", "e_0962", "e_0963", "e_0964", "e_0970", "e_0973", "e_0975", "e_0976", "e_0978", "e_0980", "F26bP"];
    this.metadata.internalOrder = {AcAld_init: null, ADP_init: null, AMP_init: null, ATP_init: null, BPG_init: null, Camp: null, Catp: null, cell: null, Cf16: null, Cf26: null, Ciatp: null, CO2_init: null, DHAP_init: null, e_0001_init: null, e_0002_init: null, e_0003_init: null, e_0004_init: null, e_0005_init: null, e_0006_init: null, e_0007_init: null, e_0008_init: null, e_0010_init: null, e_0011_init: null, e_0012_init: null, e_0017_init: null, e_0020_init: null, e_0022_init: null, e_0025_init: null, e_0026_init: null, e_0028_init: null, e_0030_init: null, e_0031_init: null, e_0033_init: null, e_0038_init: null, e_0045_init: null, e_0051_init: null, e_0053_init: null, e_0054_init: null, e_0057_init: null, e_0062_init: null, e_0063_init: null, e_0064_init: null, e_0065_init: null, e_0066_init: null, e_0069_init: null, e_0071_init: null, e_0074_init: null, e_0079_init: null, e_0084_init: null, e_0087_init: null, e_0088_init: null, e_0089_init: null, e_0090_init: null, e_0091_init: null, e_0092_init: null, e_0100_init: null, e_0101_init: null, e_0103_init: null, e_0106_init: null, e_0107_init: null, e_0109_init: null, e_0111_init: null, e_0113_init: null, e_0117_init: null, e_0122_init: null, e_0124_init: null, e_0127_init: null, e_0128_init: null, e_0129_init: null, e_0133_init: null, e_0134_init: null, e_0135_init: null, e_0136_init: null, e_0137_init: null, e_0141_init: null, e_0142_init: null, e_0146_init: null, e_0151_init: null, e_0152_init: null, e_0154_init: null, e_0155_init: null, e_0160_init: null, e_0165_init: null, e_0167_init: null, e_0168_init: null, e_0169_init: null, e_0171_init: null, e_0175_init: null, e_0176_init: null, e_0177_init: null, e_0179_init: null, e_0182_init: null, e_0183_init: null, e_0186_init: null, e_0188_init: null, e_0194_init: null, e_0196_init: null, e_0202_init: null, e_0203_init: null, e_0204_init: null, e_0207_init: null, e_0213_init: null, e_0214_init: null, e_0218_init: null, e_0219_init: null, e_0220_init: null, e_0223_init: null, e_0231_init: null, e_0234_init: null, e_0237_init: null, e_0239_init: null, e_0243_init: null, e_0249_init: null, e_0250_init: null, e_0251_init: null, e_0255_init: null, e_0260_init: null, e_0263_init: null, e_0268_init: null, e_0269_init: null, e_0271_init: null, e_0273_init: null, e_0276_init: null, e_0278_init: null, e_0280_init: null, e_0281_init: null, e_0283_init: null, e_0288_init: null, e_0289_init: null, e_0290_init: null, e_0291_init: null, e_0293_init: null, e_0295_init: null, e_0296_init: null, e_0297_init: null, e_0298_init: null, e_0299_init: null, e_0303_init: null, e_0311_init: null, e_0312_init: null, e_0313_init: null, e_0314_init: null, e_0317_init: null, e_0320_init: null, e_0321_init: null, e_0322_init: null, e_0325_init: null, e_0326_init: null, e_0328_init: null, e_0329_init: null, e_0330_init: null, e_0334_init: null, e_0340_init: null, e_0342_init: null, e_0343_init: null, e_0346_init: null, e_0347_init: null, e_0348_init: null, e_0352_init: null, e_0353_init: null, e_0355_init: null, e_0356_init: null, e_0362_init: null, e_0364_init: null, e_0365_init: null, e_0367_init: null, e_0368_init: null, e_0370_init: null, e_0372_init: null, e_0376_init: null, e_0379_init: null, e_0380_init: null, e_0381_init: null, e_0382_init: null, e_0385_init: null, e_0387_init: null, e_0389_init: null, e_0390_init: null, e_0392_init: null, e_0396_init: null, e_0398_init: null, e_0401_init: null, e_0404_init: null, e_0405_init: null, e_0407_init: null, e_0409_init: null, e_0417_init: null, e_0418_init: null, e_0422_init: null, e_0424_init: null, e_0425_init: null, e_0426_init: null, e_0427_init: null, e_0428_init: null, e_0429_init: null, e_0431_init: null, e_0432_init: null, e_0434_init: null, e_0435_init: null, e_0436_init: null, e_0440_init: null, e_0447_init: null, e_0448_init: null, e_0452_init: null, e_0453_init: null, e_0454_init: null, e_0455_init: null, e_0456_init: null, e_0457_init: null, e_0458_init: null, e_0462_init: null, e_0465_init: null, e_0466_init: null, e_0467_init: null, e_0470_init: null, e_0472_init: null, e_0475_init: null, e_0476_init: null, e_0489_init: null, e_0492_init: null, e_0494_init: null, e_0495_init: null, e_0496_init: null, e_0499_init: null, e_0506_init: null, e_0508_init: null, e_0510_init: null, e_0512_init: null, e_0514_init: null, e_0515_init: null, e_0525_init: null, e_0528_init: null, e_0531_init: null, e_0536_init: null, e_0540_init: null, e_0541_init: null, e_0542_init: null, e_0544_init: null, e_0545_init: null, e_0547_init: null, e_0548_init: null, e_0549_init: null, e_0550_init: null, e_0556_init: null, e_0557_init: null, e_0558_init: null, e_0559_init: null, e_0561_init: null, e_0565_init: null, e_0567_init: null, e_0568_init: null, e_0569_init: null, e_0571_init: null, e_0574_init: null, e_0576_init: null, e_0578_init: null, e_0579_init: null, e_0581_init: null, e_0582_init: null, e_0585_init: null, e_0586_init: null, e_0588_init: null, e_0591_init: null, e_0594_init: null, e_0601_init: null, e_0603_init: null, e_0607_init: null, e_0610_init: null, e_0611_init: null, e_0612_init: null, e_0613_init: null, e_0615_init: null, e_0619_init: null, e_0621_init: null, e_0629_init: null, e_0631_init: null, e_0632_init: null, e_0633_init: null, e_0636_init: null, e_0638_init: null, e_0639_init: null, e_0642_init: null, e_0644_init: null, e_0647_init: null, e_0658_init: null, e_0667_init: null, e_0671_init: null, e_0674_init: null, e_0675_init: null, e_0682_init: null, e_0684_init: null, e_0685_init: null, e_0686_init: null, e_0687_init: null, e_0690_init: null, e_0692_init: null, e_0693_init: null, e_0695_init: null, e_0697_init: null, e_0698_init: null, e_0699_init: null, e_0704_init: null, e_0705_init: null, e_0708_init: null, e_0709_init: null, e_0711_init: null, e_0712_init: null, e_0716_init: null, e_0727_init: null, e_0729_init: null, e_0730_init: null, e_0733_init: null, e_0734_init: null, e_0736_init: null, e_0740_init: null, e_0741_init: null, e_0742_init: null, e_0743_init: null, e_0744_init: null, e_0745_init: null, e_0746_init: null, e_0747_init: null, e_0750_init: null, e_0752_init: null, e_0753_init: null, e_0754_init: null, e_0755_init: null, e_0757_init: null, e_0761_init: null, e_0762_init: null, e_0763_init: null, e_0765_init: null, e_0769_init: null, e_0771_init: null, e_0774_init: null, e_0778_init: null, e_0788_init: null, e_0791_init: null, e_0792_init: null, e_0793_init: null, e_0799_init: null, e_0800_init: null, e_0802_init: null, e_0805_init: null, e_0808_init: null, e_0812_init: null, e_0813_init: null, e_0826_init: null, e_0827_init: null, e_0829_init: null, e_0830_init: null, e_0832_init: null, e_0834_init: null, e_0836_init: null, e_0838_init: null, e_0840_init: null, e_0841_init: null, e_0842_init: null, e_0846_init: null, e_0848_init: null, e_0850_init: null, e_0851_init: null, e_0852_init: null, e_0855_init: null, e_0860_init: null, e_0862_init: null, e_0867_init: null, e_0869_init: null, e_0875_init: null, e_0880_init: null, e_0883_init: null, e_0884_init: null, e_0888_init: null, e_0889_init: null, e_0890_init: null, e_0892_init: null, e_0894_init: null, e_0895_init: null, e_0898_init: null, e_0903_init: null, e_0904_init: null, e_0911_init: null, e_0913_init: null, e_0915_init: null, e_0922_init: null, e_0924_init: null, e_0926_init: null, e_0934_init: null, e_0935_init: null, e_0940_init: null, e_0944_init: null, e_0947_init: null, e_0950_init: null, e_0953_init: null, e_0955_init: null, e_0956_init: null, e_0959_init: null, e_0962_init: null, e_0963_init: null, e_0964_init: null, e_0970_init: null, e_0973_init: null, e_0975_init: null, e_0976_init: null, e_0978_init: null, e_0980_init: null, ep0002: null, ep0004: null, ep0089: null, ep0122: null, ep0404: null, ep0428: null, ep0430: null, ep0432: null, ep0526: null, ep0542: null, ep0584: null, ep0589: null, ep0595: null, ep0615: null, ep0649: null, ep0657: null, ep0662: null, ep0666: null, ep0672: null, ep0700: null, ep0747: null, ep0748: null, ep0757: null, ep0773: null, ep0782: null, ep0832: null, ep0847: null, ep0897: null, ep1059: null, ep1077: null, ep1099: null, ep1107: null, ep1148: null, ep1314: null, ep1337: null, ep1346: null, ep1351: null, ep1379: null, ep1405: null, ep1428: null, ep1467: null, ep1491: null, ep1520: null, ep1524: null, ep1527: null, ep1533: null, ep1545: null, ep1561: null, ep1569: null, epAMP: null, epATP: null, EtOH_init: null, extracellular: null, F16bP_init: null, F26bP_init: null, F6P_init: null, FLUX_VALUE: null, G6P_init: null, GAP_init: null, GLC_init: null, GLCx_init: null, GLY_init: null, gR: null, ic0002: null, ic0004: null, ic0089: null, ic0122: null, ic0404: null, ic0428: null, ic0430: null, ic0432: null, ic0526: null, ic0542: null, ic0584: null, ic0589: null, ic0595: null, ic0615: null, ic0649: null, ic0657: null, ic0662: null, ic0666: null, ic0672: null, ic0700: null, ic0747: null, ic0748: null, ic0757: null, ic0773: null, ic0782: null, ic0832: null, ic0847: null, ic0897: null, ic1059: null, ic1077: null, ic1099: null, ic1107: null, ic1148: null, ic1314: null, ic1337: null, ic1346: null, ic1351: null, ic1379: null, ic1405: null, ic1428: null, ic1467: null, ic1491: null, ic1520: null, ic1524: null, ic1527: null, ic1533: null, ic1545: null, ic1561: null, ic1569: null, icAMP: null, icATP: null, initial_AcAld: null, initial_ADP: null, initial_AMP: null, initial_ATP: null, initial_BPG: null, initial_CO2: null, initial_DHAP: null, initial_e_0001: null, initial_e_0002: null, initial_e_0003: null, initial_e_0004: null, initial_e_0005: null, initial_e_0006: null, initial_e_0007: null, initial_e_0008: null, initial_e_0010: null, initial_e_0011: null, initial_e_0012: null, initial_e_0017: null, initial_e_0020: null, initial_e_0022: null, initial_e_0025: null, initial_e_0026: null, initial_e_0028: null, initial_e_0030: null, initial_e_0031: null, initial_e_0033: null, initial_e_0038: null, initial_e_0045: null, initial_e_0051: null, initial_e_0053: null, initial_e_0054: null, initial_e_0057: null, initial_e_0062: null, initial_e_0063: null, initial_e_0064: null, initial_e_0065: null, initial_e_0066: null, initial_e_0069: null, initial_e_0071: null, initial_e_0074: null, initial_e_0079: null, initial_e_0084: null, initial_e_0087: null, initial_e_0088: null, initial_e_0089: null, initial_e_0090: null, initial_e_0091: null, initial_e_0092: null, initial_e_0100: null, initial_e_0101: null, initial_e_0103: null, initial_e_0106: null, initial_e_0107: null, initial_e_0109: null, initial_e_0111: null, initial_e_0113: null, initial_e_0117: null, initial_e_0122: null, initial_e_0124: null, initial_e_0127: null, initial_e_0128: null, initial_e_0129: null, initial_e_0133: null, initial_e_0134: null, initial_e_0135: null, initial_e_0136: null, initial_e_0137: null, initial_e_0141: null, initial_e_0142: null, initial_e_0146: null, initial_e_0151: null, initial_e_0152: null, initial_e_0154: null, initial_e_0155: null, initial_e_0160: null, initial_e_0165: null, initial_e_0167: null, initial_e_0168: null, initial_e_0169: null, initial_e_0171: null, initial_e_0175: null, initial_e_0176: null, initial_e_0177: null, initial_e_0179: null, initial_e_0182: null, initial_e_0183: null, initial_e_0186: null, initial_e_0188: null, initial_e_0194: null, initial_e_0196: null, initial_e_0202: null, initial_e_0203: null, initial_e_0204: null, initial_e_0207: null, initial_e_0213: null, initial_e_0214: null, initial_e_0218: null, initial_e_0219: null, initial_e_0220: null, initial_e_0223: null, initial_e_0231: null, initial_e_0234: null, initial_e_0237: null, initial_e_0239: null, initial_e_0243: null, initial_e_0249: null, initial_e_0250: null, initial_e_0251: null, initial_e_0255: null, initial_e_0260: null, initial_e_0263: null, initial_e_0268: null, initial_e_0269: null, initial_e_0271: null, initial_e_0273: null, initial_e_0276: null, initial_e_0278: null, initial_e_0280: null, initial_e_0281: null, initial_e_0283: null, initial_e_0288: null, initial_e_0289: null, initial_e_0290: null, initial_e_0291: null, initial_e_0293: null, initial_e_0295: null, initial_e_0296: null, initial_e_0297: null, initial_e_0298: null, initial_e_0299: null, initial_e_0303: null, initial_e_0311: null, initial_e_0312: null, initial_e_0313: null, initial_e_0314: null, initial_e_0317: null, initial_e_0320: null, initial_e_0321: null, initial_e_0322: null, initial_e_0325: null, initial_e_0326: null, initial_e_0328: null, initial_e_0329: null, initial_e_0330: null, initial_e_0334: null, initial_e_0340: null, initial_e_0342: null, initial_e_0343: null, initial_e_0346: null, initial_e_0347: null, initial_e_0348: null, initial_e_0352: null, initial_e_0353: null, initial_e_0355: null, initial_e_0356: null, initial_e_0362: null, initial_e_0364: null, initial_e_0365: null, initial_e_0367: null, initial_e_0368: null, initial_e_0370: null, initial_e_0372: null, initial_e_0376: null, initial_e_0379: null, initial_e_0380: null, initial_e_0381: null, initial_e_0382: null, initial_e_0385: null, initial_e_0387: null, initial_e_0389: null, initial_e_0390: null, initial_e_0392: null, initial_e_0396: null, initial_e_0398: null, initial_e_0401: null, initial_e_0404: null, initial_e_0405: null, initial_e_0407: null, initial_e_0409: null, initial_e_0417: null, initial_e_0418: null, initial_e_0422: null, initial_e_0424: null, initial_e_0425: null, initial_e_0426: null, initial_e_0427: null, initial_e_0428: null, initial_e_0429: null, initial_e_0431: null, initial_e_0432: null, initial_e_0434: null, initial_e_0435: null, initial_e_0436: null, initial_e_0440: null, initial_e_0447: null, initial_e_0448: null, initial_e_0452: null, initial_e_0453: null, initial_e_0454: null, initial_e_0455: null, initial_e_0456: null, initial_e_0457: null, initial_e_0458: null, initial_e_0462: null, initial_e_0465: null, initial_e_0466: null, initial_e_0467: null, initial_e_0470: null, initial_e_0472: null, initial_e_0475: null, initial_e_0476: null, initial_e_0489: null, initial_e_0492: null, initial_e_0494: null, initial_e_0495: null, initial_e_0496: null, initial_e_0499: null, initial_e_0506: null, initial_e_0508: null, initial_e_0510: null, initial_e_0512: null, initial_e_0514: null, initial_e_0515: null, initial_e_0525: null, initial_e_0528: null, initial_e_0531: null, initial_e_0536: null, initial_e_0540: null, initial_e_0541: null, initial_e_0542: null, initial_e_0544: null, initial_e_0545: null, initial_e_0547: null, initial_e_0548: null, initial_e_0549: null, initial_e_0550: null, initial_e_0556: null, initial_e_0557: null, initial_e_0558: null, initial_e_0559: null, initial_e_0561: null, initial_e_0565: null, initial_e_0567: null, initial_e_0568: null, initial_e_0569: null, initial_e_0571: null, initial_e_0574: null, initial_e_0576: null, initial_e_0578: null, initial_e_0579: null, initial_e_0581: null, initial_e_0582: null, initial_e_0585: null, initial_e_0586: null, initial_e_0588: null, initial_e_0591: null, initial_e_0594: null, initial_e_0601: null, initial_e_0603: null, initial_e_0607: null, initial_e_0610: null, initial_e_0611: null, initial_e_0612: null, initial_e_0613: null, initial_e_0615: null, initial_e_0619: null, initial_e_0621: null, initial_e_0629: null, initial_e_0631: null, initial_e_0632: null, initial_e_0633: null, initial_e_0636: null, initial_e_0638: null, initial_e_0639: null, initial_e_0642: null, initial_e_0644: null, initial_e_0647: null, initial_e_0658: null, initial_e_0667: null, initial_e_0671: null, initial_e_0674: null, initial_e_0675: null, initial_e_0682: null, initial_e_0684: null, initial_e_0685: null, initial_e_0686: null, initial_e_0687: null, initial_e_0690: null, initial_e_0692: null, initial_e_0693: null, initial_e_0695: null, initial_e_0697: null, initial_e_0698: null, initial_e_0699: null, initial_e_0704: null, initial_e_0705: null, initial_e_0708: null, initial_e_0709: null, initial_e_0711: null, initial_e_0712: null, initial_e_0716: null, initial_e_0727: null, initial_e_0729: null, initial_e_0730: null, initial_e_0733: null, initial_e_0734: null, initial_e_0736: null, initial_e_0740: null, initial_e_0741: null, initial_e_0742: null, initial_e_0743: null, initial_e_0744: null, initial_e_0745: null, initial_e_0746: null, initial_e_0747: null, initial_e_0750: null, initial_e_0752: null, initial_e_0753: null, initial_e_0754: null, initial_e_0755: null, initial_e_0757: null, initial_e_0761: null, initial_e_0762: null, initial_e_0763: null, initial_e_0765: null, initial_e_0769: null, initial_e_0771: null, initial_e_0774: null, initial_e_0778: null, initial_e_0788: null, initial_e_0791: null, initial_e_0792: null, initial_e_0793: null, initial_e_0799: null, initial_e_0800: null, initial_e_0802: null, initial_e_0805: null, initial_e_0808: null, initial_e_0812: null, initial_e_0813: null, initial_e_0826: null, initial_e_0827: null, initial_e_0829: null, initial_e_0830: null, initial_e_0832: null, initial_e_0834: null, initial_e_0836: null, initial_e_0838: null, initial_e_0840: null, initial_e_0841: null, initial_e_0842: null, initial_e_0846: null, initial_e_0848: null, initial_e_0850: null, initial_e_0851: null, initial_e_0852: null, initial_e_0855: null, initial_e_0860: null, initial_e_0862: null, initial_e_0867: null, initial_e_0869: null, initial_e_0875: null, initial_e_0880: null, initial_e_0883: null, initial_e_0884: null, initial_e_0888: null, initial_e_0889: null, initial_e_0890: null, initial_e_0892: null, initial_e_0894: null, initial_e_0895: null, initial_e_0898: null, initial_e_0903: null, initial_e_0904: null, initial_e_0911: null, initial_e_0913: null, initial_e_0915: null, initial_e_0922: null, initial_e_0924: null, initial_e_0926: null, initial_e_0934: null, initial_e_0935: null, initial_e_0940: null, initial_e_0944: null, initial_e_0947: null, initial_e_0950: null, initial_e_0953: null, initial_e_0955: null, initial_e_0956: null, initial_e_0959: null, initial_e_0962: null, initial_e_0963: null, initial_e_0964: null, initial_e_0970: null, initial_e_0973: null, initial_e_0975: null, initial_e_0976: null, initial_e_0978: null, initial_e_0980: null, initial_EtOH: null, initial_F16bP: null, initial_F26bP: null, initial_F6P: null, initial_G6P: null, initial_GAP: null, initial_GLC: null, initial_GLCx: null, initial_GLY: null, initial_NAD: null, initial_NADH: null, initial_P2G: null, initial_P3G: null, initial_PEP: null, initial_PHO: null, initial_PYR: null, initial_s_0002: null, initial_s_0004: null, initial_s_0008: null, initial_s_0009: null, initial_s_0010: null, initial_s_0015: null, initial_s_0016: null, initial_s_0018: null, initial_s_0019: null, initial_s_0025: null, initial_s_0028: null, initial_s_0033: null, initial_s_0037: null, initial_s_0039: null, initial_s_0056: null, initial_s_0061: null, initial_s_0062: null, initial_s_0063: null, initial_s_0066: null, initial_s_0076: null, initial_s_0077: null, initial_s_0078: null, initial_s_0082: null, initial_s_0086: null, initial_s_0089: null, initial_s_0118: null, initial_s_0120: null, initial_s_0122: null, initial_s_0126: null, initial_s_0141: null, initial_s_0142: null, initial_s_0145: null, initial_s_0146: null, initial_s_0158: null, initial_s_0162: null, initial_s_0165: null, initial_s_0176: null, initial_s_0178: null, initial_s_0180: null, initial_s_0190: null, initial_s_0201: null, initial_s_0204: null, initial_s_0207: null, initial_s_0209: null, initial_s_0210: null, initial_s_0211: null, initial_s_0218: null, initial_s_0231: null, initial_s_0232: null, initial_s_0261: null, initial_s_0262: null, initial_s_0291: null, initial_s_0295: null, initial_s_0296: null, initial_s_0297: null, initial_s_0298: null, initial_s_0299: null, initial_s_0300: null, initial_s_0301: null, initial_s_0302: null, initial_s_0304: null, initial_s_0306: null, initial_s_0312: null, initial_s_0313: null, initial_s_0314: null, initial_s_0322: null, initial_s_0324: null, initial_s_0325: null, initial_s_0326: null, initial_s_0327: null, initial_s_0328: null, initial_s_0335: null, initial_s_0340: null, initial_s_0349: null, initial_s_0360: null, initial_s_0362: null, initial_s_0367: null, initial_s_0373: null, initial_s_0380: null, initial_s_0386: null, initial_s_0390: null, initial_s_0393: null, initial_s_0403: null, initial_s_0404: null, initial_s_0409: null, initial_s_0419: null, initial_s_0420: null, initial_s_0427: null, initial_s_0428: null, initial_s_0430: null, initial_s_0432: null, initial_s_0445: null, initial_s_0454: null, initial_s_0455: null, initial_s_0458: null, initial_s_0467: null, initial_s_0471: null, initial_s_0478: null, initial_s_0505: null, initial_s_0515: null, initial_s_0516: null, initial_s_0522: null, initial_s_0526: null, initial_s_0529: null, initial_s_0539: null, initial_s_0542: null, initial_s_0550: null, initial_s_0551: null, initial_s_0567: null, initial_s_0573: null, initial_s_0574: null, initial_s_0577: null, initial_s_0581: null, initial_s_0582: null, initial_s_0584: null, initial_s_0586: null, initial_s_0587: null, initial_s_0589: null, initial_s_0595: null, initial_s_0602: null, initial_s_0613: null, initial_s_0615: null, initial_s_0619: null, initial_s_0625: null, initial_s_0633: null, initial_s_0644: null, initial_s_0645: null, initial_s_0649: null, initial_s_0654: null, initial_s_0656: null, initial_s_0657: null, initial_s_0662: null, initial_s_0666: null, initial_s_0672: null, initial_s_0681: null, initial_s_0700: null, initial_s_0709: null, initial_s_0710: null, initial_s_0722: null, initial_s_0725: null, initial_s_0739: null, initial_s_0743: null, initial_s_0745: null, initial_s_0747: null, initial_s_0748: null, initial_s_0750: null, initial_s_0757: null, initial_s_0766: null, initial_s_0767: null, initial_s_0773: null, initial_s_0779: null, initial_s_0782: null, initial_s_0785: null, initial_s_0816: null, initial_s_0832: null, initial_s_0835: null, initial_s_0836: null, initial_s_0841: null, initial_s_0847: null, initial_s_0849: null, initial_s_0897: null, initial_s_0940: null, initial_s_0943: null, initial_s_0951: null, initial_s_0953: null, initial_s_0955: null, initial_s_0959: null, initial_s_0965: null, initial_s_0969: null, initial_s_0973: null, initial_s_0978: null, initial_s_0979: null, initial_s_0980: null, initial_s_0981: null, initial_s_0991: null, initial_s_0999: null, initial_s_1003: null, initial_s_1006: null, initial_s_1010: null, initial_s_1011: null, initial_s_1012: null, initial_s_1014: null, initial_s_1016: null, initial_s_1021: null, initial_s_1025: null, initial_s_1029: null, initial_s_1032: null, initial_s_1035: null, initial_s_1038: null, initial_s_1039: null, initial_s_1045: null, initial_s_1048: null, initial_s_1051: null, initial_s_1056: null, initial_s_1059: null, initial_s_1065: null, initial_s_1073: null, initial_s_1077: null, initial_s_1084: null, initial_s_1099: null, initial_s_1101: null, initial_s_1107: null, initial_s_1148: null, initial_s_1151: null, initial_s_1153: null, initial_s_1161: null, initial_s_1176: null, initial_s_1182: null, initial_s_1187: null, initial_s_1191: null, initial_s_1192: null, initial_s_1194: null, initial_s_1207: null, initial_s_1212: null, initial_s_1233: null, initial_s_1238: null, initial_s_1255: null, initial_s_1266: null, initial_s_1269: null, initial_s_1270: null, initial_s_1271: null, initial_s_1275: null, initial_s_1277: null, initial_s_1286: null, initial_s_1302: null, initial_s_1314: null, initial_s_1324: null, initial_s_1331: null, initial_s_1337: null, initial_s_1342: null, initial_s_1343: null, initial_s_1346: null, initial_s_1351: null, initial_s_1364: null, initial_s_1365: null, initial_s_1376: null, initial_s_1377: null, initial_s_1379: null, initial_s_1386: null, initial_s_1405: null, initial_s_1408: null, initial_s_1413: null, initial_s_1416: null, initial_s_1426: null, initial_s_1427: null, initial_s_1428: null, initial_s_1429: null, initial_s_1445: null, initial_s_1447: null, initial_s_1449: null, initial_s_1454: null, initial_s_1458: null, initial_s_1459: null, initial_s_1467: null, initial_s_1468: null, initial_s_1469: null, initial_s_1487: null, initial_s_1491: null, initial_s_1520: null, initial_s_1524: null, initial_s_1527: null, initial_s_1533: null, initial_s_1535: null, initial_s_1537: null, initial_s_1538: null, initial_s_1543: null, initial_s_1545: null, initial_s_1559: null, initial_s_1561: null, initial_s_1565: null, initial_s_1569: null, initial_s_1576: null, initial_s_1577: null, initial_s_1578: null, initial_s_1579: null, initial_s_1582: null, initial_s_1583: null, initial_s_1585: null, initial_s_1587: null, initial_s_1589: null, initial_s_1590: null, initial_s_1591: null, initial_s_1593: null, initial_s_1594: null, initial_s_1596: null, initial_s_1598: null, initial_s_1600: null, initial_s_1602: null, initial_s_1604: null, initial_s_1606: null, initial_s_1607: null, initial_s_1608: null, initial_s_1610: null, initial_s_1612: null, initial_s_1614: null, initial_s_1616: null, initial_s_1620: null, Kacald: null, Kadp: null, Kamp: null, Katp: null, Kbpg: null, Kdhap: null, Keq: null, Ketoh: null, Kf16: null, Kf16bp: null, Kf26: null, Kf6p: null, Kg6p: null, Kgap: null, Kglc: null, Ki: null, Kiacald: null, Kiatp: null, Kietoh: null, Kigap: null, Kinad: null, Kinadh: null, Km0002: null, Km0004: null, Km0008: null, Km0009: null, Km0010: null, Km0015: null, Km0016: null, Km0018: null, Km0019: null, Km0025: null, Km0028: null, Km0033: null, Km0037: null, Km0039: null, Km0056: null, Km0061: null, Km0062: null, Km0063: null, Km0066: null, Km0076: null, Km0077: null, Km0078: null, Km0082: null, Km0086: null, Km0089: null, Km0118: null, Km0120: null, Km0122: null, Km0126: null, Km0141: null, Km0142: null, Km0145: null, Km0146: null, Km0158: null, Km0162: null, Km0165: null, Km0176: null, Km0178: null, Km0180: null, Km0190: null, Km0201: null, Km0204: null, Km0207: null, Km0209: null, Km0210: null, Km0211: null, Km0218: null, Km0231: null, Km0232: null, Km0261: null, Km0262: null, Km0291: null, Km0295: null, Km0296: null, Km0297: null, Km0298: null, Km0299: null, Km0300: null, Km0301: null, Km0302: null, Km0304: null, Km0306: null, Km0312: null, Km0313: null, Km0314: null, Km0322: null, Km0324: null, Km0325: null, Km0326: null, Km0327: null, Km0328: null, Km0335: null, Km0340: null, Km0349: null, Km0362: null, Km0367: null, Km0373: null, Km0380: null, Km0386: null, Km0390: null, Km0393: null, Km0403: null, Km0404: null, Km0409: null, Km0419: null, Km0420: null, Km0427: null, Km0428: null, Km0430: null, Km0432: null, Km0445: null, Km0454: null, Km0455: null, Km0467: null, Km0471: null, Km0478: null, Km0505: null, Km0515: null, Km0516: null, Km0522: null, Km0526: null, Km0529: null, Km0539: null, Km0542: null, Km0550: null, Km0551: null, Km0567: null, Km0573: null, Km0574: null, Km0577: null, Km0581: null, Km0582: null, Km0584: null, Km0586: null, Km0587: null, Km0589: null, Km0595: null, Km0602: null, Km0613: null, Km0615: null, Km0619: null, Km0625: null, Km0633: null, Km0644: null, Km0645: null, Km0649: null, Km0654: null, Km0656: null, Km0657: null, Km0662: null, Km0666: null, Km0672: null, Km0700: null, Km0709: null, Km0710: null, Km0722: null, Km0725: null, Km0739: null, Km0743: null, Km0745: null, Km0747: null, Km0748: null, Km0750: null, Km0757: null, Km0767: null, Km0773: null, Km0779: null, Km0782: null, Km0785: null, Km0816: null, Km0832: null, Km0835: null, Km0836: null, Km0841: null, Km0847: null, Km0849: null, Km0897: null, Km0940: null, Km0943: null, Km0951: null, Km0953: null, Km0955: null, Km0959: null, Km0965: null, Km0969: null, Km0973: null, Km0978: null, Km0979: null, Km0980: null, Km0981: null, Km0991: null, Km0999: null, Km1003: null, Km1006: null, Km1010: null, Km1011: null, Km1012: null, Km1014: null, Km1016: null, Km1021: null, Km1025: null, Km1029: null, Km1032: null, Km1035: null, Km1038: null, Km1039: null, Km1045: null, Km1048: null, Km1051: null, Km1056: null, Km1059: null, Km1065: null, Km1073: null, Km1077: null, Km1084: null, Km1099: null, Km1101: null, Km1107: null, Km1148: null, Km1151: null, Km1153: null, Km1161: null, Km1176: null, Km1182: null, Km1187: null, Km1191: null, Km1192: null, Km1194: null, Km1207: null, Km1212: null, Km1233: null, Km1238: null, Km1255: null, Km1266: null, Km1269: null, Km1270: null, Km1271: null, Km1275: null, Km1277: null, Km1286: null, Km1302: null, Km1314: null, Km1324: null, Km1331: null, Km1337: null, Km1342: null, Km1343: null, Km1346: null, Km1351: null, Km1364: null, Km1365: null, Km1376: null, Km1377: null, Km1379: null, Km1386: null, Km1405: null, Km1408: null, Km1413: null, Km1416: null, Km1426: null, Km1427: null, Km1428: null, Km1429: null, Km1445: null, Km1447: null, Km1449: null, Km1454: null, Km1458: null, Km1467: null, Km1468: null, Km1469: null, Km1487: null, Km1491: null, Km1520: null, Km1524: null, Km1527: null, Km1533: null, Km1535: null, Km1537: null, Km1538: null, Km1543: null, Km1545: null, Km1559: null, Km1561: null, Km1565: null, Km1569: null, Km1576: null, Km1577: null, Km1578: null, Km1579: null, Km1582: null, Km1583: null, Km1585: null, Km1587: null, Km1589: null, Km1590: null, Km1591: null, Km1593: null, Km1594: null, Km1596: null, Km1598: null, Km1600: null, Km1602: null, Km1604: null, Km1606: null, Km1607: null, Km1608: null, Km1610: null, Km1612: null, Km1614: null, Km1616: null, Km1620: null, KmAcAld: null, KmADP: null, KmAMP: null, KmATP: null, KmCO2: null, KmDHAP: null, KmEtOH: null, KmF6P: null, KmG6P: null, KmGAP: null, KmGLY: null, KmNAD: null, KmNADH: null, KmPEP: null, KmPHO: null, KmPYR: null, Knad: null, Knadh: null, Kp2g: null, Kp3g: null, Kpep: null, Kpho: null, Kpyr: null, kxk: null, L0: null, NAD_init: null, NADH_init: null, nH: null, P2G_init: null, P3G_init: null, PEP_init: null, PHO_init: null, PYR_init: null, s_0002_init: null, s_0004_init: null, s_0008_init: null, s_0009_init: null, s_0010_init: null, s_0015_init: null, s_0016_init: null, s_0018_init: null, s_0019_init: null, s_0025_init: null, s_0028_init: null, s_0033_init: null, s_0037_init: null, s_0039_init: null, s_0056_init: null, s_0061_init: null, s_0062_init: null, s_0063_init: null, s_0066_init: null, s_0076_init: null, s_0077_init: null, s_0078_init: null, s_0082_init: null, s_0086_init: null, s_0089_init: null, s_0118_init: null, s_0120_init: null, s_0122_init: null, s_0126_init: null, s_0141_init: null, s_0142_init: null, s_0145_init: null, s_0146_init: null, s_0158_init: null, s_0162_init: null, s_0165_init: null, s_0176_init: null, s_0178_init: null, s_0180_init: null, s_0190_init: null, s_0201_init: null, s_0204_init: null, s_0207_init: null, s_0209_init: null, s_0210_init: null, s_0211_init: null, s_0218_init: null, s_0231_init: null, s_0232_init: null, s_0261_init: null, s_0262_init: null, s_0291_init: null, s_0295_init: null, s_0296_init: null, s_0297_init: null, s_0298_init: null, s_0299_init: null, s_0300_init: null, s_0301_init: null, s_0302_init: null, s_0304_init: null, s_0306_init: null, s_0312_init: null, s_0313_init: null, s_0314_init: null, s_0322_init: null, s_0324_init: null, s_0325_init: null, s_0326_init: null, s_0327_init: null, s_0328_init: null, s_0335_init: null, s_0340_init: null, s_0349_init: null, s_0360_init: null, s_0362_init: null, s_0367_init: null, s_0373_init: null, s_0380_init: null, s_0386_init: null, s_0390_init: null, s_0393_init: null, s_0403_init: null, s_0404_init: null, s_0409_init: null, s_0419_init: null, s_0420_init: null, s_0427_init: null, s_0428_init: null, s_0430_init: null, s_0432_init: null, s_0445_init: null, s_0454_init: null, s_0455_init: null, s_0458_init: null, s_0467_init: null, s_0471_init: null, s_0478_init: null, s_0505_init: null, s_0515_init: null, s_0516_init: null, s_0522_init: null, s_0526_init: null, s_0529_init: null, s_0539_init: null, s_0542_init: null, s_0550_init: null, s_0551_init: null, s_0567_init: null, s_0573_init: null, s_0574_init: null, s_0577_init: null, s_0581_init: null, s_0582_init: null, s_0584_init: null, s_0586_init: null, s_0587_init: null, s_0589_init: null, s_0595_init: null, s_0602_init: null, s_0613_init: null, s_0615_init: null, s_0619_init: null, s_0625_init: null, s_0633_init: null, s_0644_init: null, s_0645_init: null, s_0649_init: null, s_0654_init: null, s_0656_init: null, s_0657_init: null, s_0662_init: null, s_0666_init: null, s_0672_init: null, s_0681_init: null, s_0700_init: null, s_0709_init: null, s_0710_init: null, s_0722_init: null, s_0725_init: null, s_0739_init: null, s_0743_init: null, s_0745_init: null, s_0747_init: null, s_0748_init: null, s_0750_init: null, s_0757_init: null, s_0766_init: null, s_0767_init: null, s_0773_init: null, s_0779_init: null, s_0782_init: null, s_0785_init: null, s_0816_init: null, s_0832_init: null, s_0835_init: null, s_0836_init: null, s_0841_init: null, s_0847_init: null, s_0849_init: null, s_0897_init: null, s_0940_init: null, s_0943_init: null, s_0951_init: null, s_0953_init: null, s_0955_init: null, s_0959_init: null, s_0965_init: null, s_0969_init: null, s_0973_init: null, s_0978_init: null, s_0979_init: null, s_0980_init: null, s_0981_init: null, s_0991_init: null, s_0999_init: null, s_1003_init: null, s_1006_init: null, s_1010_init: null, s_1011_init: null, s_1012_init: null, s_1014_init: null, s_1016_init: null, s_1021_init: null, s_1025_init: null, s_1029_init: null, s_1032_init: null, s_1035_init: null, s_1038_init: null, s_1039_init: null, s_1045_init: null, s_1048_init: null, s_1051_init: null, s_1056_init: null, s_1059_init: null, s_1065_init: null, s_1073_init: null, s_1077_init: null, s_1084_init: null, s_1099_init: null, s_1101_init: null, s_1107_init: null, s_1148_init: null, s_1151_init: null, s_1153_init: null, s_1161_init: null, s_1176_init: null, s_1182_init: null, s_1187_init: null, s_1191_init: null, s_1192_init: null, s_1194_init: null, s_1207_init: null, s_1212_init: null, s_1233_init: null, s_1238_init: null, s_1255_init: null, s_1266_init: null, s_1269_init: null, s_1270_init: null, s_1271_init: null, s_1275_init: null, s_1277_init: null, s_1286_init: null, s_1302_init: null, s_1314_init: null, s_1324_init: null, s_1331_init: null, s_1337_init: null, s_1342_init: null, s_1343_init: null, s_1346_init: null, s_1351_init: null, s_1364_init: null, s_1365_init: null, s_1376_init: null, s_1377_init: null, s_1379_init: null, s_1386_init: null, s_1405_init: null, s_1408_init: null, s_1413_init: null, s_1416_init: null, s_1426_init: null, s_1427_init: null, s_1428_init: null, s_1429_init: null, s_1445_init: null, s_1447_init: null, s_1449_init: null, s_1454_init: null, s_1458_init: null, s_1459_init: null, s_1467_init: null, s_1468_init: null, s_1469_init: null, s_1487_init: null, s_1491_init: null, s_1520_init: null, s_1524_init: null, s_1527_init: null, s_1533_init: null, s_1535_init: null, s_1537_init: null, s_1538_init: null, s_1543_init: null, s_1545_init: null, s_1559_init: null, s_1561_init: null, s_1565_init: null, s_1569_init: null, s_1576_init: null, s_1577_init: null, s_1578_init: null, s_1579_init: null, s_1582_init: null, s_1583_init: null, s_1585_init: null, s_1587_init: null, s_1589_init: null, s_1590_init: null, s_1591_init: null, s_1593_init: null, s_1594_init: null, s_1596_init: null, s_1598_init: null, s_1600_init: null, s_1602_init: null, s_1604_init: null, s_1606_init: null, s_1607_init: null, s_1608_init: null, s_1610_init: null, s_1612_init: null, s_1614_init: null, s_1616_init: null, s_1620_init: null, v0: null, Vmax: null, zero_flux: null};
    this.metadata.variableOrder = {s_0002: null, s_0004: null, s_0008: null, s_0009: null, s_0010: null, s_0015: null, s_0016: null, s_0018: null, s_0019: null, s_0025: null, s_0028: null, s_0033: null, s_0037: null, s_0039: null, s_0056: null, s_0061: null, s_0062: null, s_0063: null, s_0066: null, BPG: null, s_0076: null, s_0077: null, s_0078: null, s_0082: null, s_0086: null, s_0089: null, s_0118: null, s_0120: null, s_0122: null, s_0126: null, s_0141: null, s_0142: null, s_0145: null, s_0146: null, s_0158: null, s_0162: null, s_0165: null, s_0176: null, s_0178: null, s_0180: null, P2G: null, s_0190: null, s_0201: null, s_0204: null, s_0207: null, s_0209: null, s_0210: null, s_0211: null, s_0218: null, s_0231: null, s_0232: null, P3G: null, s_0261: null, s_0262: null, s_0291: null, s_0295: null, s_0296: null, s_0297: null, s_0298: null, s_0299: null, s_0300: null, s_0301: null, s_0302: null, s_0304: null, s_0306: null, s_0312: null, s_0313: null, s_0314: null, s_0322: null, s_0324: null, s_0325: null, s_0326: null, s_0327: null, s_0328: null, s_0335: null, s_0340: null, s_0349: null, AcAld: null, s_0360: null, s_0362: null, s_0367: null, s_0373: null, s_0380: null, s_0386: null, s_0390: null, s_0393: null, ADP: null, s_0403: null, s_0404: null, s_0409: null, s_0419: null, s_0420: null, AMP: null, s_0427: null, s_0428: null, s_0430: null, s_0432: null, ATP: null, s_0445: null, s_0454: null, s_0455: null, CO2: null, s_0458: null, s_0467: null, s_0471: null, s_0478: null, s_0505: null, s_0515: null, s_0516: null, s_0522: null, s_0526: null, s_0529: null, s_0539: null, s_0542: null, s_0550: null, s_0551: null, F16bP: null, F6P: null, GLC: null, GLCx: null, s_0567: null, G6P: null, s_0573: null, s_0574: null, s_0577: null, s_0581: null, s_0582: null, s_0584: null, s_0586: null, s_0587: null, s_0589: null, s_0595: null, s_0602: null, s_0613: null, s_0615: null, s_0619: null, s_0625: null, DHAP: null, s_0633: null, s_0644: null, s_0645: null, s_0649: null, s_0654: null, s_0656: null, s_0657: null, s_0662: null, s_0666: null, s_0672: null, EtOH: null, s_0681: null, s_0700: null, s_0709: null, s_0710: null, s_0722: null, s_0725: null, s_0739: null, s_0743: null, s_0745: null, s_0747: null, s_0748: null, s_0750: null, s_0757: null, GAP: null, GLY: null, s_0766: null, s_0767: null, s_0773: null, s_0779: null, s_0782: null, s_0785: null, s_0816: null, s_0832: null, s_0835: null, s_0836: null, s_0841: null, s_0847: null, s_0849: null, s_0897: null, s_0940: null, s_0943: null, s_0951: null, s_0953: null, s_0955: null, s_0959: null, s_0965: null, s_0969: null, s_0973: null, s_0978: null, s_0979: null, s_0980: null, s_0981: null, s_0991: null, s_0999: null, s_1003: null, s_1006: null, s_1010: null, s_1011: null, s_1012: null, s_1014: null, s_1016: null, s_1021: null, s_1025: null, s_1029: null, s_1032: null, s_1035: null, s_1038: null, s_1039: null, s_1045: null, s_1048: null, s_1051: null, s_1056: null, s_1059: null, s_1065: null, s_1073: null, s_1077: null, s_1084: null, s_1099: null, s_1101: null, s_1107: null, s_1148: null, s_1151: null, s_1153: null, s_1161: null, s_1176: null, s_1182: null, s_1187: null, s_1191: null, s_1192: null, s_1194: null, NAD: null, NADH: null, s_1207: null, s_1212: null, s_1233: null, s_1238: null, s_1255: null, s_1266: null, s_1269: null, s_1270: null, s_1271: null, s_1275: null, s_1277: null, s_1286: null, s_1302: null, s_1314: null, PHO: null, s_1324: null, s_1331: null, s_1337: null, s_1342: null, s_1343: null, s_1346: null, s_1351: null, PEP: null, s_1364: null, s_1365: null, s_1376: null, s_1377: null, s_1379: null, s_1386: null, PYR: null, s_1405: null, s_1408: null, s_1413: null, s_1416: null, s_1426: null, s_1427: null, s_1428: null, s_1429: null, s_1445: null, s_1447: null, s_1449: null, s_1454: null, s_1458: null, s_1459: null, s_1467: null, s_1468: null, s_1469: null, s_1487: null, s_1491: null, s_1520: null, s_1524: null, s_1527: null, s_1533: null, s_1535: null, s_1537: null, s_1538: null, s_1543: null, s_1545: null, s_1559: null, s_1561: null, s_1565: null, s_1569: null, s_1576: null, s_1577: null, s_1578: null, s_1579: null, s_1582: null, s_1583: null, s_1585: null, s_1587: null, s_1589: null, s_1590: null, s_1591: null, s_1593: null, s_1594: null, s_1596: null, s_1598: null, s_1600: null, s_1602: null, s_1604: null, s_1606: null, s_1607: null, s_1608: null, s_1610: null, s_1612: null, s_1614: null, s_1616: null, s_1620: null, e_0001: null, e_0002: null, e_0003: null, e_0004: null, e_0005: null, e_0006: null, e_0007: null, e_0008: null, e_0010: null, e_0011: null, e_0012: null, e_0017: null, e_0020: null, e_0022: null, e_0025: null, e_0026: null, e_0028: null, e_0030: null, e_0031: null, e_0033: null, e_0038: null, e_0045: null, e_0051: null, e_0053: null, e_0054: null, e_0057: null, e_0062: null, e_0063: null, e_0064: null, e_0065: null, e_0066: null, e_0069: null, e_0071: null, e_0074: null, e_0079: null, e_0084: null, e_0087: null, e_0088: null, e_0089: null, e_0090: null, e_0091: null, e_0092: null, e_0100: null, e_0101: null, e_0103: null, e_0106: null, e_0107: null, e_0109: null, e_0111: null, e_0113: null, e_0117: null, e_0122: null, e_0124: null, e_0127: null, e_0128: null, e_0129: null, e_0133: null, e_0134: null, e_0135: null, e_0136: null, e_0137: null, e_0141: null, e_0142: null, e_0146: null, e_0151: null, e_0152: null, e_0154: null, e_0155: null, e_0160: null, e_0165: null, e_0167: null, e_0168: null, e_0169: null, e_0171: null, e_0175: null, e_0176: null, e_0177: null, e_0179: null, e_0182: null, e_0183: null, e_0186: null, e_0188: null, e_0194: null, e_0196: null, e_0202: null, e_0203: null, e_0204: null, e_0207: null, e_0213: null, e_0214: null, e_0218: null, e_0219: null, e_0220: null, e_0223: null, e_0231: null, e_0234: null, e_0237: null, e_0239: null, e_0243: null, e_0249: null, e_0250: null, e_0251: null, e_0255: null, e_0260: null, e_0263: null, e_0268: null, e_0269: null, e_0271: null, e_0273: null, e_0276: null, e_0278: null, e_0280: null, e_0281: null, e_0283: null, e_0288: null, e_0289: null, e_0290: null, e_0291: null, e_0293: null, e_0295: null, e_0296: null, e_0297: null, e_0298: null, e_0299: null, e_0303: null, e_0311: null, e_0312: null, e_0313: null, e_0314: null, e_0317: null, e_0320: null, e_0321: null, e_0322: null, e_0325: null, e_0326: null, e_0328: null, e_0329: null, e_0330: null, e_0334: null, e_0340: null, e_0342: null, e_0343: null, e_0346: null, e_0347: null, e_0348: null, e_0352: null, e_0353: null, e_0355: null, e_0356: null, e_0362: null, e_0364: null, e_0365: null, e_0367: null, e_0368: null, e_0370: null, e_0372: null, e_0376: null, e_0379: null, e_0380: null, e_0381: null, e_0382: null, e_0385: null, e_0387: null, e_0389: null, e_0390: null, e_0392: null, e_0396: null, e_0398: null, e_0401: null, e_0404: null, e_0405: null, e_0407: null, e_0409: null, e_0417: null, e_0418: null, e_0422: null, e_0424: null, e_0425: null, e_0426: null, e_0427: null, e_0428: null, e_0429: null, e_0431: null, e_0432: null, e_0434: null, e_0435: null, e_0436: null, e_0440: null, e_0447: null, e_0448: null, e_0452: null, e_0453: null, e_0454: null, e_0455: null, e_0456: null, e_0457: null, e_0458: null, e_0462: null, e_0465: null, e_0466: null, e_0467: null, e_0470: null, e_0472: null, e_0475: null, e_0476: null, e_0489: null, e_0492: null, e_0494: null, e_0495: null, e_0496: null, e_0499: null, e_0506: null, e_0508: null, e_0510: null, e_0512: null, e_0514: null, e_0515: null, e_0525: null, e_0528: null, e_0531: null, e_0536: null, e_0540: null, e_0541: null, e_0542: null, e_0544: null, e_0545: null, e_0547: null, e_0548: null, e_0549: null, e_0550: null, e_0556: null, e_0557: null, e_0558: null, e_0559: null, e_0561: null, e_0565: null, e_0567: null, e_0568: null, e_0569: null, e_0571: null, e_0574: null, e_0576: null, e_0578: null, e_0579: null, e_0581: null, e_0582: null, e_0585: null, e_0586: null, e_0588: null, e_0591: null, e_0594: null, e_0601: null, e_0603: null, e_0607: null, e_0610: null, e_0611: null, e_0612: null, e_0613: null, e_0615: null, e_0619: null, e_0621: null, e_0629: null, e_0631: null, e_0632: null, e_0633: null, e_0636: null, e_0638: null, e_0639: null, e_0642: null, e_0644: null, e_0647: null, e_0658: null, e_0667: null, e_0671: null, e_0674: null, e_0675: null, e_0682: null, e_0684: null, e_0685: null, e_0686: null, e_0687: null, e_0690: null, e_0692: null, e_0693: null, e_0695: null, e_0697: null, e_0698: null, e_0699: null, e_0704: null, e_0705: null, e_0708: null, e_0709: null, e_0711: null, e_0712: null, e_0716: null, e_0727: null, e_0729: null, e_0730: null, e_0733: null, e_0734: null, e_0736: null, e_0740: null, e_0741: null, e_0742: null, e_0743: null, e_0744: null, e_0745: null, e_0746: null, e_0747: null, e_0750: null, e_0752: null, e_0753: null, e_0754: null, e_0755: null, e_0757: null, e_0761: null, e_0762: null, e_0763: null, e_0765: null, e_0769: null, e_0771: null, e_0774: null, e_0778: null, e_0788: null, e_0791: null, e_0792: null, e_0793: null, e_0799: null, e_0800: null, e_0802: null, e_0805: null, e_0808: null, e_0812: null, e_0813: null, e_0826: null, e_0827: null, e_0829: null, e_0830: null, e_0832: null, e_0834: null, e_0836: null, e_0838: null, e_0840: null, e_0841: null, e_0842: null, e_0846: null, e_0848: null, e_0850: null, e_0851: null, e_0852: null, e_0855: null, e_0860: null, e_0862: null, e_0867: null, e_0869: null, e_0875: null, e_0880: null, e_0883: null, e_0884: null, e_0888: null, e_0889: null, e_0890: null, e_0892: null, e_0894: null, e_0895: null, e_0898: null, e_0903: null, e_0904: null, e_0911: null, e_0913: null, e_0915: null, e_0922: null, e_0924: null, e_0926: null, e_0934: null, e_0935: null, e_0940: null, e_0944: null, e_0947: null, e_0950: null, e_0953: null, e_0955: null, e_0956: null, e_0959: null, e_0962: null, e_0963: null, e_0964: null, e_0970: null, e_0973: null, e_0975: null, e_0976: null, e_0978: null, e_0980: null, F26bP: null};
    this.metadata.outputOrder = null;
  }
  getMetadata() {
    return this.metadata;
  }
}
