export class model {
  constructor(base, user, unusedUserAction) {
    this.base = base;
    this.internal = {};
    var internal = this.internal;
    internal.cell = 1;
    this.setUser(user, unusedUserAction);
  }
  initial(t) {
    var internal = this.internal;
    var state = Array(18).fill(0);
    state[0] = internal.initial_PRPP;
    state[1] = internal.initial_IMP;
    state[2] = internal.initial_SAMP;
    state[3] = internal.initial_ATP;
    state[4] = internal.initial_SAM;
    state[5] = internal.initial_Ade;
    state[6] = internal.initial_XMP;
    state[7] = internal.initial_GTP;
    state[8] = internal.initial_dATP;
    state[9] = internal.initial_dGTP;
    state[10] = internal.initial_RNA;
    state[11] = internal.initial_DNA;
    state[12] = internal.initial_HX;
    state[13] = internal.initial_Xa;
    state[14] = internal.initial_Gua;
    state[15] = internal.initial_UA;
    state[16] = internal.initial_R5P;
    state[17] = internal.initial_Pi;
    return state;
  }
  setUser(user, unusedUserAction) {
    this.base.user.checkUser(user, ["aada", "aade", "aadna", "aadrnr", "aampd", "aaprt", "aarna", "aasli", "aasuc", "adada", "Ade_init", "aden", "adgnuc", "adnaa", "adnag", "agdna", "agdrnr", "agmpr", "agmps", "agnuc", "agprt", "agrna", "agua", "ahprt", "ahx", "ahxd", "aimpd", "ainuc", "amat", "apolyam", "aprpps", "apyr", "arnaa", "arnag", "ATP_init", "atrans", "aua", "ax", "axd", "dATP_init", "dGTP_init", "DNA_init", "fada4", "fade6", "fadrnr10", "fadrnr4", "fadrnr9", "fampd18", "fampd4", "fampd8", "faprt1", "faprt4", "faprt6", "fasli3", "fasli4", "fasuc18", "fasuc2", "fasuc4", "fasuc8", "fdada9", "fden1", "fden18", "fden2", "fden4", "fden8", "fdgnuc10", "fdnan12", "fdnap10", "fdnap9", "fgdrnr10", "fgdrnr8", "fgdrnr9", "fgmpr2", "fgmpr4", "fgmpr7", "fgmpr8", "fgmps4", "fgmps7", "fgnuc18", "fgnuc8", "fgprt1", "fgprt15", "fgprt8", "fgua15", "fhprt1", "fhprt13", "fhprt2", "fhx13", "fhxd13", "fimpd2", "fimpd7", "fimpd8", "finuc18", "finuc2", "fmat4", "fmat5", "fpolyam5", "fprpps1", "fprpps17", "fprpps18", "fprpps4", "fprpps8", "fpyr1", "frnan11", "frnap4", "frnap8", "ftrans5", "fua16", "fx14", "fxd14", "GTP_init", "Gua_init", "HX_init", "IMP_init", "Pi_init", "PRPP_init", "R5P_init", "RNA_init", "SAM_init", "SAMP_init", "UA_init", "Xa_init", "XMP_init"], unusedUserAction);
    var internal = this.internal;
    this.base.user.setUserScalar(user, "aada", internal, 0.001062, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aade", internal, 0.01, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aadna", internal, 3.2789000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aadrnr", internal, 0.060199999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aampd", internal, 0.026880000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aaprt", internal, 233.80000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aarna", internal, 614.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aasli", internal, 66544, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aasuc", internal, 3.5931999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "adada", internal, 0.033329999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Ade_init", internal, 0.98472999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aden", internal, 5.2728000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "adgnuc", internal, 0.033329999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "adnaa", internal, 0.0019380000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "adnag", internal, 0.0013179999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agdna", internal, 2.2296, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agdrnr", internal, 0.11990000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agmpr", internal, 0.30049999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agmps", internal, 0.37380000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agnuc", internal, 0.25109999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agprt", internal, 361.69, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agrna", internal, 409.60000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "agua", internal, 0.4919, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ahprt", internal, 12.569000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ahx", internal, 0.0037929999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ahxd", internal, 0.27539999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aimpd", internal, 1.2823, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ainuc", internal, 0.91349999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "amat", internal, 7.2066999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "apolyam", internal, 0.28999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aprpps", internal, 0.90000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "apyr", internal, 1.2950999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "arnaa", internal, 0.06923, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "arnag", internal, 0.046149999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ATP_init", internal, 2475.3499999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "atrans", internal, 8.8538999999999994, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "aua", internal, 8.7440000000000003e-05, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ax", internal, 0.0011999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "axd", internal, 0.94899999999999995, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "dATP_init", internal, 6.0141299999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "dGTP_init", internal, 3.0258099999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "DNA_init", internal, 5179.3400000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fada4", internal, 0.96999999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fade6", internal, 0.55000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fadrnr10", internal, 0.87, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fadrnr4", internal, 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fadrnr9", internal, - 0.29999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fampd18", internal, - 0.10000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fampd4", internal, 0.80000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fampd8", internal, - 0.029999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "faprt1", internal, 0.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "faprt4", internal, - 0.80000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "faprt6", internal, 0.75, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fasli3", internal, 0.98999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fasli4", internal, - 0.94999999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fasuc18", internal, - 0.050000000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fasuc2", internal, 0.40000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fasuc4", internal, - 0.23999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fasuc8", internal, 0.20000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fdada9", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fden1", internal, 2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fden18", internal, - 0.080000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fden2", internal, - 0.059999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fden4", internal, - 0.25, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fden8", internal, - 0.20000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fdgnuc10", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fdnan12", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fdnap10", internal, 0.33000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fdnap9", internal, 0.41999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgdrnr10", internal, - 0.39000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgdrnr8", internal, 0.40000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgdrnr9", internal, - 1.2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgmpr2", internal, - 0.14999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgmpr4", internal, - 0.070000000000000007, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgmpr7", internal, - 0.76000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgmpr8", internal, 0.69999999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgmps4", internal, 0.12, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgmps7", internal, 0.16, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgnuc18", internal, - 0.34000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgnuc8", internal, 0.90000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgprt1", internal, 1.2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgprt15", internal, 0.41999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgprt8", internal, - 1.2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fgua15", internal, 0.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fhprt1", internal, 1.1000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fhprt13", internal, 0.47999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fhprt2", internal, - 0.89000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fhx13", internal, 1.1200000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fhxd13", internal, 0.65000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fimpd2", internal, 0.14999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fimpd7", internal, - 0.089999999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fimpd8", internal, - 0.029999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "finuc18", internal, - 0.35999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "finuc2", internal, 0.80000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fmat4", internal, 0.20000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fmat5", internal, - 0.59999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fpolyam5", internal, 0.90000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fprpps1", internal, - 0.029999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fprpps17", internal, 0.65000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fprpps18", internal, 0.69999999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fprpps4", internal, - 0.45000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fprpps8", internal, - 0.040000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fpyr1", internal, 1.27, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "frnan11", internal, 1, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "frnap4", internal, 0.050000000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "frnap8", internal, 0.13, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ftrans5", internal, 0.33000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fua16", internal, 2.21, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fx14", internal, 2, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fxd14", internal, 0.55000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "GTP_init", internal, 410.22300000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Gua_init", internal, 5.5063800000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "HX_init", internal, 9.5178499999999993, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "IMP_init", internal, 98.263400000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Pi_init", internal, 1400, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PRPP_init", internal, 5.0174200000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "R5P_init", internal, 18, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "RNA_init", internal, 28680.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SAM_init", internal, 3.99187, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SAMP_init", internal, 0.198189, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "UA_init", internal, 100.29300000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Xa_init", internal, 5.0594099999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "XMP_init", internal, 24.792999999999999, -Infinity, Infinity, false);
    internal.initial_Ade = internal.Ade_init;
    internal.initial_ATP = internal.ATP_init;
    internal.initial_dATP = internal.dATP_init;
    internal.initial_dGTP = internal.dGTP_init;
    internal.initial_DNA = internal.DNA_init;
    internal.initial_GTP = internal.GTP_init;
    internal.initial_Gua = internal.Gua_init;
    internal.initial_HX = internal.HX_init;
    internal.initial_IMP = internal.IMP_init;
    internal.initial_Pi = internal.Pi_init;
    internal.initial_PRPP = internal.PRPP_init;
    internal.initial_R5P = internal.R5P_init;
    internal.initial_RNA = internal.RNA_init;
    internal.initial_SAM = internal.SAM_init;
    internal.initial_SAMP = internal.SAMP_init;
    internal.initial_UA = internal.UA_init;
    internal.initial_Xa = internal.Xa_init;
    internal.initial_XMP = internal.XMP_init;
    this.updateMetadata();
  }
  getInternal() {
    return this.internal;
  }
  rhs(t, state, dstatedt) {
    var internal = this.internal;
    const PRPP = state[0];
    const IMP = state[1];
    const SAMP = state[2];
    const ATP = state[3];
    const SAM = state[4];
    const Ade = state[5];
    const XMP = state[6];
    const GTP = state[7];
    const dATP = state[8];
    const dGTP = state[9];
    const RNA = state[10];
    const DNA = state[11];
    const HX = state[12];
    const Xa = state[13];
    const Gua = state[14];
    const UA = state[15];
    const R5P = state[16];
    const Pi = state[17];
    dstatedt[17] = 0;
    dstatedt[16] = 0;
    dstatedt[5] = 0 - 1 * internal.aade * Math.pow((Ade), (internal.fade6)) - 1 * internal.aaprt * Math.pow((PRPP), (internal.faprt1)) * Math.pow((ATP), (internal.faprt4)) * Math.pow((Ade), (internal.faprt6)) + 1 * internal.apolyam * Math.pow((SAM), (internal.fpolyam5));
    dstatedt[3] = 0 - 1 * internal.aada * Math.pow((ATP), (internal.fada4)) - 1 * internal.aadrnr * Math.pow((ATP), (internal.fadrnr4)) * Math.pow((dATP), (internal.fadrnr9)) * Math.pow((dGTP), (internal.fadrnr10)) - 1 * internal.aampd * Math.pow((ATP), (internal.fampd4)) * Math.pow((GTP), (internal.fampd8)) * Math.pow((Pi), (internal.fampd18)) + 1 * internal.aaprt * Math.pow((PRPP), (internal.faprt1)) * Math.pow((ATP), (internal.faprt4)) * Math.pow((Ade), (internal.faprt6)) - 1 * internal.aarna * Math.pow((ATP), (internal.frnap4)) * Math.pow((GTP), (internal.frnap8)) + 1 * internal.aasli * Math.pow((SAMP), (internal.fasli3)) * Math.pow((ATP), (internal.fasli4)) - 1 * internal.amat * Math.pow((ATP), (internal.fmat4)) * Math.pow((SAM), (internal.fmat5)) + 1 * internal.arnaa * Math.pow((RNA), (internal.frnan11)) + 1 * internal.atrans * Math.pow((SAM), (internal.ftrans5));
    dstatedt[8] = 0 - 1 * internal.aadna * Math.pow((dATP), (internal.fdnap9)) * Math.pow((dGTP), (internal.fdnap10)) + 1 * internal.aadrnr * Math.pow((ATP), (internal.fadrnr4)) * Math.pow((dATP), (internal.fadrnr9)) * Math.pow((dGTP), (internal.fadrnr10)) - 1 * internal.adada * Math.pow((dATP), (internal.fdada9)) + 1 * internal.adnaa * Math.pow((DNA), (internal.fdnan12));
    dstatedt[9] = 0 - 1 * internal.adgnuc * Math.pow((dGTP), (internal.fdgnuc10)) + 1 * internal.adnag * Math.pow((DNA), (internal.fdnan12)) - 1 * internal.agdna * Math.pow((dATP), (internal.fdnap9)) * Math.pow((dGTP), (internal.fdnap10)) + 1 * internal.agdrnr * Math.pow((GTP), (internal.fgdrnr8)) * Math.pow((dATP), (internal.fgdrnr9)) * Math.pow((dGTP), (internal.fgdrnr10));
    dstatedt[11] = 0 + 1 * internal.aadna * Math.pow((dATP), (internal.fdnap9)) * Math.pow((dGTP), (internal.fdnap10)) - 1 * internal.adnaa * Math.pow((DNA), (internal.fdnan12)) - 1 * internal.adnag * Math.pow((DNA), (internal.fdnan12)) + 1 * internal.agdna * Math.pow((dATP), (internal.fdnap9)) * Math.pow((dGTP), (internal.fdnap10));
    dstatedt[7] = 0 - 1 * internal.agdrnr * Math.pow((GTP), (internal.fgdrnr8)) * Math.pow((dATP), (internal.fgdrnr9)) * Math.pow((dGTP), (internal.fgdrnr10)) - 1 * internal.agmpr * Math.pow((IMP), (internal.fgmpr2)) * Math.pow((ATP), (internal.fgmpr4)) * Math.pow((XMP), (internal.fgmpr7)) * Math.pow((GTP), (internal.fgmpr8)) + 1 * internal.agmps * Math.pow((ATP), (internal.fgmps4)) * Math.pow((XMP), (internal.fgmps7)) - 1 * internal.agnuc * Math.pow((GTP), (internal.fgnuc8)) * Math.pow((Pi), (internal.fgnuc18)) + 1 * internal.agprt * Math.pow((PRPP), (internal.fgprt1)) * Math.pow((GTP), (internal.fgprt8)) * Math.pow((Gua), (internal.fgprt15)) - 1 * internal.agrna * Math.pow((ATP), (internal.frnap4)) * Math.pow((GTP), (internal.frnap8)) + 1 * internal.arnag * Math.pow((RNA), (internal.frnan11));
    dstatedt[14] = 0 + 1 * internal.adgnuc * Math.pow((dGTP), (internal.fdgnuc10)) + 1 * internal.agnuc * Math.pow((GTP), (internal.fgnuc8)) * Math.pow((Pi), (internal.fgnuc18)) - 1 * internal.agprt * Math.pow((PRPP), (internal.fgprt1)) * Math.pow((GTP), (internal.fgprt8)) * Math.pow((Gua), (internal.fgprt15)) - 1 * internal.agua * Math.pow((Gua), (internal.fgua15));
    dstatedt[12] = 0 + 1 * internal.aada * Math.pow((ATP), (internal.fada4)) + 1 * internal.adada * Math.pow((dATP), (internal.fdada9)) - 1 * internal.ahprt * Math.pow((PRPP), (internal.fhprt1)) * Math.pow((IMP), (internal.fhprt2)) * Math.pow((HX), (internal.fhprt13)) - 1 * internal.ahx * Math.pow((HX), (internal.fhx13)) - 1 * internal.ahxd * Math.pow((HX), (internal.fhxd13)) + 1 * internal.ainuc * Math.pow((IMP), (internal.finuc2)) * Math.pow((Pi), (internal.finuc18));
    dstatedt[1] = 0 + 1 * internal.aampd * Math.pow((ATP), (internal.fampd4)) * Math.pow((GTP), (internal.fampd8)) * Math.pow((Pi), (internal.fampd18)) - 1 * internal.aasuc * Math.pow((IMP), (internal.fasuc2)) * Math.pow((ATP), (internal.fasuc4)) * Math.pow((GTP), (internal.fasuc8)) * Math.pow((Pi), (internal.fasuc18)) + 1 * internal.aden * Math.pow((PRPP), (internal.fden1)) * Math.pow((IMP), (internal.fden2)) * Math.pow((ATP), (internal.fden4)) * Math.pow((GTP), (internal.fden8)) * Math.pow((Pi), (internal.fden18)) + 1 * internal.agmpr * Math.pow((IMP), (internal.fgmpr2)) * Math.pow((ATP), (internal.fgmpr4)) * Math.pow((XMP), (internal.fgmpr7)) * Math.pow((GTP), (internal.fgmpr8)) + 1 * internal.ahprt * Math.pow((PRPP), (internal.fhprt1)) * Math.pow((IMP), (internal.fhprt2)) * Math.pow((HX), (internal.fhprt13)) - 1 * internal.aimpd * Math.pow((IMP), (internal.fimpd2)) * Math.pow((XMP), (internal.fimpd7)) * Math.pow((GTP), (internal.fimpd8)) - 1 * internal.ainuc * Math.pow((IMP), (internal.finuc2)) * Math.pow((Pi), (internal.finuc18));
    dstatedt[0] = 0 - 1 * internal.aaprt * Math.pow((PRPP), (internal.faprt1)) * Math.pow((ATP), (internal.faprt4)) * Math.pow((Ade), (internal.faprt6)) - 1 * internal.aden * Math.pow((PRPP), (internal.fden1)) * Math.pow((IMP), (internal.fden2)) * Math.pow((ATP), (internal.fden4)) * Math.pow((GTP), (internal.fden8)) * Math.pow((Pi), (internal.fden18)) - 1 * internal.agprt * Math.pow((PRPP), (internal.fgprt1)) * Math.pow((GTP), (internal.fgprt8)) * Math.pow((Gua), (internal.fgprt15)) - 1 * internal.ahprt * Math.pow((PRPP), (internal.fhprt1)) * Math.pow((IMP), (internal.fhprt2)) * Math.pow((HX), (internal.fhprt13)) + 1 * internal.aprpps * Math.pow((PRPP), (internal.fprpps1)) * Math.pow((ATP), (internal.fprpps4)) * Math.pow((GTP), (internal.fprpps8)) * Math.pow((R5P), (internal.fprpps17)) * Math.pow((Pi), (internal.fprpps18)) - 1 * internal.apyr * Math.pow((PRPP), (internal.fpyr1));
    dstatedt[10] = 0 + 1 * internal.aarna * Math.pow((ATP), (internal.frnap4)) * Math.pow((GTP), (internal.frnap8)) + 1 * internal.agrna * Math.pow((ATP), (internal.frnap4)) * Math.pow((GTP), (internal.frnap8)) - 1 * internal.arnaa * Math.pow((RNA), (internal.frnan11)) - 1 * internal.arnag * Math.pow((RNA), (internal.frnan11));
    dstatedt[4] = 0 + 1 * internal.amat * Math.pow((ATP), (internal.fmat4)) * Math.pow((SAM), (internal.fmat5)) - 1 * internal.apolyam * Math.pow((SAM), (internal.fpolyam5)) - 1 * internal.atrans * Math.pow((SAM), (internal.ftrans5));
    dstatedt[2] = 0 + 1 * internal.aasuc * Math.pow((IMP), (internal.fasuc2)) * Math.pow((ATP), (internal.fasuc4)) * Math.pow((GTP), (internal.fasuc8)) * Math.pow((Pi), (internal.fasuc18)) - 1 * internal.aasli * Math.pow((SAMP), (internal.fasli3)) * Math.pow((ATP), (internal.fasli4));
    dstatedt[15] = 0 - 1 * internal.aua * Math.pow((UA), (internal.fua16)) + 1 * internal.axd * Math.pow((Xa), (internal.fxd14));
    dstatedt[13] = 0 + 1 * internal.agua * Math.pow((Gua), (internal.fgua15)) + 1 * internal.ahxd * Math.pow((HX), (internal.fhxd13)) - 1 * internal.ax * Math.pow((Xa), (internal.fx14)) - 1 * internal.axd * Math.pow((Xa), (internal.fxd14));
    dstatedt[6] = 0 - 1 * internal.agmps * Math.pow((ATP), (internal.fgmps4)) * Math.pow((XMP), (internal.fgmps7)) + 1 * internal.aimpd * Math.pow((IMP), (internal.fimpd2)) * Math.pow((XMP), (internal.fimpd7)) * Math.pow((GTP), (internal.fimpd8));
  }
  names() {
    return this.metadata.ynames.slice(1);
  }
  updateMetadata() {
    this.metadata = {};
    var internal = this.internal;
    this.metadata.ynames = ["t", "PRPP", "IMP", "SAMP", "ATP", "SAM", "Ade", "XMP", "GTP", "dATP", "dGTP", "RNA", "DNA", "HX", "Xa", "Gua", "UA", "R5P", "Pi"];
    this.metadata.internalOrder = {aada: null, aade: null, aadna: null, aadrnr: null, aampd: null, aaprt: null, aarna: null, aasli: null, aasuc: null, adada: null, Ade_init: null, aden: null, adgnuc: null, adnaa: null, adnag: null, agdna: null, agdrnr: null, agmpr: null, agmps: null, agnuc: null, agprt: null, agrna: null, agua: null, ahprt: null, ahx: null, ahxd: null, aimpd: null, ainuc: null, amat: null, apolyam: null, aprpps: null, apyr: null, arnaa: null, arnag: null, ATP_init: null, atrans: null, aua: null, ax: null, axd: null, cell: null, dATP_init: null, dGTP_init: null, DNA_init: null, fada4: null, fade6: null, fadrnr10: null, fadrnr4: null, fadrnr9: null, fampd18: null, fampd4: null, fampd8: null, faprt1: null, faprt4: null, faprt6: null, fasli3: null, fasli4: null, fasuc18: null, fasuc2: null, fasuc4: null, fasuc8: null, fdada9: null, fden1: null, fden18: null, fden2: null, fden4: null, fden8: null, fdgnuc10: null, fdnan12: null, fdnap10: null, fdnap9: null, fgdrnr10: null, fgdrnr8: null, fgdrnr9: null, fgmpr2: null, fgmpr4: null, fgmpr7: null, fgmpr8: null, fgmps4: null, fgmps7: null, fgnuc18: null, fgnuc8: null, fgprt1: null, fgprt15: null, fgprt8: null, fgua15: null, fhprt1: null, fhprt13: null, fhprt2: null, fhx13: null, fhxd13: null, fimpd2: null, fimpd7: null, fimpd8: null, finuc18: null, finuc2: null, fmat4: null, fmat5: null, fpolyam5: null, fprpps1: null, fprpps17: null, fprpps18: null, fprpps4: null, fprpps8: null, fpyr1: null, frnan11: null, frnap4: null, frnap8: null, ftrans5: null, fua16: null, fx14: null, fxd14: null, GTP_init: null, Gua_init: null, HX_init: null, IMP_init: null, initial_Ade: null, initial_ATP: null, initial_dATP: null, initial_dGTP: null, initial_DNA: null, initial_GTP: null, initial_Gua: null, initial_HX: null, initial_IMP: null, initial_Pi: null, initial_PRPP: null, initial_R5P: null, initial_RNA: null, initial_SAM: null, initial_SAMP: null, initial_UA: null, initial_Xa: null, initial_XMP: null, Pi_init: null, PRPP_init: null, R5P_init: null, RNA_init: null, SAM_init: null, SAMP_init: null, UA_init: null, Xa_init: null, XMP_init: null};
    this.metadata.variableOrder = {PRPP: null, IMP: null, SAMP: null, ATP: null, SAM: null, Ade: null, XMP: null, GTP: null, dATP: null, dGTP: null, RNA: null, DNA: null, HX: null, Xa: null, Gua: null, UA: null, R5P: null, Pi: null};
    this.metadata.outputOrder = null;
  }
  getMetadata() {
    return this.metadata;
  }
}
