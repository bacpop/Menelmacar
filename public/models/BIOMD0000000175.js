export class model {
  constructor(base, user, unusedUserAction) {
    this.base = base;
    this.internal = {};
    var internal = this.internal;
    internal.membrane = 1;
    this.setUser(user, unusedUserAction);
  }
  initial(t) {
    var internal = this.internal;
    var state = Array(118).fill(0);
    state[0] = internal.initial_E1;
    state[1] = internal.initial_E2;
    state[2] = internal.initial_E3;
    state[3] = internal.initial_E4;
    state[4] = internal.initial_E_E1;
    state[5] = internal.initial_H_E3;
    state[6] = internal.initial_H_E4;
    state[7] = internal.initial_E11;
    state[8] = internal.initial_E12;
    state[9] = internal.initial_E23;
    state[10] = internal.initial_E34;
    state[11] = internal.initial_E24;
    state[12] = internal.initial_E44;
    state[13] = internal.initial_E11P;
    state[14] = internal.initial_E12P;
    state[15] = internal.initial_E23P;
    state[16] = internal.initial_E34P;
    state[17] = internal.initial_E24P;
    state[18] = internal.initial_E44P;
    state[19] = internal.initial_G;
    state[20] = internal.initial_S;
    state[21] = internal.initial_I;
    state[22] = internal.initial_R;
    state[23] = internal.initial_O;
    state[24] = internal.initial_A;
    state[25] = internal.initial_E11G;
    state[26] = internal.initial_E11S;
    state[27] = internal.initial_E11R;
    state[28] = internal.initial_E12G;
    state[29] = internal.initial_E12S;
    state[30] = internal.initial_E12R;
    state[31] = internal.initial_E23G;
    state[32] = internal.initial_E23S;
    state[33] = internal.initial_E23I;
    state[34] = internal.initial_E23R;
    state[35] = internal.initial_E34G;
    state[36] = internal.initial_E34S;
    state[37] = internal.initial_E34I;
    state[38] = internal.initial_E34R;
    state[39] = internal.initial_E24G;
    state[40] = internal.initial_E24S;
    state[41] = internal.initial_E24I;
    state[42] = internal.initial_E24R;
    state[43] = internal.initial_E44G;
    state[44] = internal.initial_E44S;
    state[45] = internal.initial_E44I;
    state[46] = internal.initial_E44R;
    state[47] = internal.initial_SigG;
    state[48] = internal.initial_SigS;
    state[49] = internal.initial_SigI;
    state[50] = internal.initial_SigR;
    state[51] = internal.initial_SigA;
    state[52] = internal.initial_SigSP;
    state[53] = internal.initial_SigAP;
    state[54] = internal.initial_SigG_O;
    state[55] = internal.initial_SigG_A;
    state[56] = internal.initial_SigSP_G;
    state[57] = internal.initial_SigAP_S;
    state[58] = internal.initial_SigAP_I;
    state[59] = internal.initial_SigAP_R;
    state[60] = internal.initial_Empty;
    state[61] = internal.initial_P3_A;
    state[62] = internal.initial_P2;
    state[63] = internal.initial_P3;
    state[64] = internal.initial_Akt;
    state[65] = internal.initial_RsD;
    state[66] = internal.initial_RsT;
    state[67] = internal.initial_SigRP;
    state[68] = internal.initial_Raf;
    state[69] = internal.initial_Rafstar;
    state[70] = internal.initial_MEK;
    state[71] = internal.initial_MEKstar;
    state[72] = internal.initial_ERK;
    state[73] = internal.initial_ERKstar;
    state[74] = internal.initial_OP;
    state[75] = internal.initial_AP;
    state[76] = internal.initial_A_SigG_O;
    state[77] = internal.initial_SigA_G;
    state[78] = internal.initial_SigA_G_O;
    state[79] = internal.initial_SigO;
    state[80] = internal.initial_E13;
    state[81] = internal.initial_E14;
    state[82] = internal.initial_E13P;
    state[83] = internal.initial_E14P;
    state[84] = internal.initial_E13G;
    state[85] = internal.initial_E13S;
    state[86] = internal.initial_E13I;
    state[87] = internal.initial_E13R;
    state[88] = internal.initial_E14G;
    state[89] = internal.initial_E14S;
    state[90] = internal.initial_E14I;
    state[91] = internal.initial_E14R;
    state[92] = internal.initial_T;
    state[93] = internal.initial_E11T;
    state[94] = internal.initial_E12T;
    state[95] = internal.initial_E23T;
    state[96] = internal.initial_E34T;
    state[97] = internal.initial_E24T;
    state[98] = internal.initial_E44T;
    state[99] = internal.initial_E13T;
    state[100] = internal.initial_E14T;
    state[101] = internal.initial_SigT;
    state[102] = internal.initial_E1_PT;
    state[103] = internal.initial_E2_PT;
    state[104] = internal.initial_E4_PT;
    state[105] = internal.initial_E_E1_PT;
    state[106] = internal.initial_H_E4_PT;
    state[107] = internal.initial_Aktstar;
    state[108] = internal.initial_SigAP_T;
    state[109] = internal.initial_E;
    state[110] = internal.initial_H;
    state[111] = internal.initial_fint;
    state[112] = internal.initial_pERK;
    state[113] = internal.initial_ERK_MEKstar;
    state[114] = internal.initial_pERK_MEKstar;
    state[115] = internal.initial_pERK_ERKpase;
    state[116] = internal.initial_ERKpase;
    state[117] = internal.initial_ERKstar_ERKpase;
    return state;
  }
  setUser(user, unusedUserAction) {
    this.base.user.checkUser(user, ["A_init", "A_SigG_O_init", "a98", "Akt_Abund", "Akt_init", "Aktstar_init", "AP_init", "b98", "E_E1_init", "E_E1_PT_init", "E_init", "E1_init", "E1_PT_init", "E11_init", "E11G_init", "E11P_init", "E11R_init", "E11S_init", "E11T_init", "E12_init", "E12G_init", "E12P_init", "E12R_init", "E12S_init", "E12T_init", "E13_init", "E13G_init", "E13I_init", "E13P_init", "E13R_init", "E13S_init", "E13T_init", "E14_init", "E14G_init", "E14I_init", "E14P_init", "E14R_init", "E14S_init", "E14T_init", "E2_init", "E2_PT_init", "E23_init", "E23G_init", "E23I_init", "E23P_init", "E23R_init", "E23S_init", "E23T_init", "E24_init", "E24G_init", "E24I_init", "E24P_init", "E24R_init", "E24S_init", "E24T_init", "E3_init", "E34_init", "E34G_init", "E34I_init", "E34P_init", "E34R_init", "E34S_init", "E34T_init", "E4_init", "E4_PT_init", "E44_init", "E44G_init", "E44I_init", "E44P_init", "E44R_init", "E44S_init", "E44T_init", "EGF_off", "Empty_init", "eps", "ErbB1_Abund", "ErbB2_Abund", "ErbB3_Abund", "ErbB4_Abund", "ERK_Abund", "ERK_init", "ERK_MEKstar_init", "ERKpase_init", "ERKPpase_Abund", "ERKstar_ERKpase_init", "ERKstar_init", "fint_init", "G_init", "Gab1_Abund", "Grb2_Abund", "H_E3_init", "H_E4_init", "H_E4_PT_init", "H_init", "HRGoff_3", "HRGoff_4", "I_init", "kcat90", "kcat92", "kcat94", "kcat96", "kcon49", "kdeg", "kf10", "kf11", "kf12", "kf13", "kf14", "kf15", "kf38", "kf39", "kf47", "kf48", "kf49", "kf50", "kf51", "kf52", "kf53", "kf54", "kf55", "kf63", "kf64", "kf81", "kf82", "kf83", "kf84", "kf85", "Kmf47", "Kmf48", "Kmf49", "Kmf51", "Kmf52", "Kmf53", "Kmf54", "Kmf55", "Kmf81", "Kmf82", "Kmf83", "Kmf84", "Kmf85", "KmPY", "Kmr47", "Kmr48", "Kmr49", "Kmr49b", "Kmr51", "Kmr52", "Kmr53", "Kmr54", "Kmr55", "Kmr81", "Kmr82", "Kmr83", "Kmr84", "Kmr85", "Kmrb51", "koff16", "koff17", "koff18", "koff19", "koff20", "koff21", "koff22", "koff23", "koff24", "koff25", "koff26", "koff27", "koff28", "koff29", "koff30", "koff31", "koff32", "koff33", "koff34", "koff35", "koff36", "koff37", "koff4", "koff40", "koff41", "koff42", "koff43", "koff44", "koff45", "koff46", "koff5", "koff57", "koff58", "koff59", "koff6", "koff60", "koff61", "koff62", "koff65", "koff66", "koff67", "koff68", "koff69", "koff7", "koff70", "koff71", "koff72", "koff73", "koff74", "koff75", "koff76", "koff77", "koff78", "koff79", "koff8", "koff80", "koff88", "koff89", "koff9", "koff91", "koff93", "koff95", "kon1", "kon16", "kon17", "kon18", "kon19", "kon2", "kon20", "kon21", "kon22", "kon23", "kon24", "kon25", "kon26", "kon27", "kon28", "kon29", "kon3", "kon30", "kon31", "kon32", "kon33", "kon34", "kon35", "kon36", "kon37", "kon4", "kon40", "kon41", "kon42", "kon43", "kon44", "kon45", "kon46", "kon5", "kon57", "kon58", "kon59", "kon6", "kon60", "kon61", "kon62", "kon65", "kon66", "kon67", "kon68", "kon69", "kon7", "kon70", "kon71", "kon72", "kon73", "kon74", "kon75", "kon76", "kon77", "kon78", "kon79", "kon8", "kon80", "kon86", "kon87", "kon88", "kon89", "kon9", "kon91", "kon93", "kon95", "kPTP10", "kPTP11", "kPTP12", "kPTP13", "kPTP14", "kPTP15", "kPTP38", "kPTP39", "kPTP50", "kPTP63", "kPTP64", "kr49", "kr49b", "kr51", "MEK_Abund", "MEK_init", "MEKstar_init", "O_init", "OP_init", "P2_init", "P3_A_init", "P3_init", "pERK_ERKpase_init", "pERK_init", "pERK_MEKstar_init", "PI3K_Abund", "PIP2_Abund", "PTEN", "PTP1B_Abund", "R_init", "Raf_Abund", "Raf_init", "Rafstar_init", "Ras_Abund", "RasGAP_Abund", "RsD_init", "RsT_init", "S_init", "Shc_Abund", "SigA_G_init", "SigA_G_O_init", "SigA_init", "SigAP_I_init", "SigAP_init", "SigAP_R_init", "SigAP_S_init", "SigAP_T_init", "SigG_A_init", "SigG_init", "SigG_O_init", "SigI_init", "SigO_init", "SigR_init", "SigRP_init", "SigS_init", "SigSP_G_init", "SigSP_init", "SigT_init", "SOS_Abund", "T_init", "VeVc", "VmaxPY", "Vmaxr47", "Vmaxr51", "Vmaxr52", "Vmaxr53", "Vmaxr54", "Vmaxr55", "Vmaxr81", "Vmaxr82", "Vmaxr83", "Vmaxr84", "Vmaxr85"], unusedUserAction);
    var internal = this.internal;
    this.base.user.setUserScalar(user, "A_init", internal, 43.100000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "A_SigG_O_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "a98", internal, 0.084900000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Akt_Abund", internal, 444.2921, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Akt_init", internal, 444, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Aktstar_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "AP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "b98", internal, 0.18329999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E_E1_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E_E1_PT_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E_init", internal, 10, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E1_init", internal, 274, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E1_PT_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E11_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E11G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E11P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E11R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E11S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E11T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E12_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E12G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E12P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E12R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E12S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E12T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E13_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E13G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E13I_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E13P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E13R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E13S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E13T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E14_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E14G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E14I_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E14P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E14R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E14S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E14T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E2_init", internal, 158, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E2_PT_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E23_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E23G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E23I_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E23P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E23R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E23S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E23T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E24_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E24G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E24I_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E24P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E24R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E24S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E24T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E3_init", internal, 294, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E34_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E34G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E34I_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E34P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E34R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E34S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E34T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E4_init", internal, 399, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E4_PT_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E44_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E44G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E44I_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E44P_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E44R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E44S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "E44T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "EGF_off", internal, 0.017500000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Empty_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "eps", internal, 9.9999999999999998e-17, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ErbB1_Abund", internal, 274, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ErbB2_Abund", internal, 158, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ErbB3_Abund", internal, 294, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ErbB4_Abund", internal, 399, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ERK_Abund", internal, 749.97159999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ERK_init", internal, 750, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ERK_MEKstar_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ERKpase_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ERKPpase_Abund", internal, 35.005000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ERKstar_ERKpase_init", internal, 35, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "ERKstar_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "fint_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "G_init", internal, 82.400000000000006, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Gab1_Abund", internal, 43.100000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Grb2_Abund", internal, 82.400000000000006, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "H_E3_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "H_E4_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "H_E4_PT_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "H_init", internal, 10, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "HRGoff_3", internal, 0.00089999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "HRGoff_4", internal, 0.097299999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "I_init", internal, 46.399999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kcat90", internal, 20.003699999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kcat92", internal, 0.20039999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kcat94", internal, 0.99660000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kcat96", internal, 19.985099999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kcon49", internal, 9.9783000000000008, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kdeg", internal, 0.025899999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf10", internal, 0.64959999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf11", internal, 0.37209999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf12", internal, 1.8011999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf13", internal, 0.88749999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf14", internal, 6.1726000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf15", internal, 1.3565, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf38", internal, 279.99290000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf39", internal, 385.74279999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf47", internal, 24.604800000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf48", internal, 16.832999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf49", internal, 44.350099999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf50", internal, 389.10610000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf51", internal, 3.6515, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf52", internal, 0.77449999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf53", internal, 0.60940000000000005, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf54", internal, 0.053800000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf55", internal, 0.22559999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf63", internal, 0.92969999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf64", internal, 1.2082999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf81", internal, 1.361, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf82", internal, 6.9987000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf83", internal, 1.7627999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf84", internal, 4.6894, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kf85", internal, 6.7591000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf47", internal, 698.60220000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf48", internal, 715.56880000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf49", internal, 343.24829999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf51", internal, 599.70759999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf52", internal, 545.44079999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf53", internal, 812.25400000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf54", internal, 457.96449999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf55", internal, 460.94459999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf81", internal, 485.26260000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf82", internal, 781.43740000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf83", internal, 609.47659999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf84", internal, 622.38469999999995, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmf85", internal, 179.64859999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "KmPY", internal, 486.13979999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr47", internal, 483.86219999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr48", internal, 324.92939999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr49", internal, 753.16669999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr49b", internal, 381.2208, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr51", internal, 346.47789999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr52", internal, 675.29939999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr53", internal, 944.76919999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr54", internal, 336.18299999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr55", internal, 643.92470000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr81", internal, 323.40120000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr82", internal, 595.83950000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr83", internal, 653.51840000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr84", internal, 258.46370000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmr85", internal, 290.76670000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Kmrb51", internal, 988.44960000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff16", internal, 0.57369999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff17", internal, 4.6874000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff18", internal, 2.2768000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff19", internal, 2.3361000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff20", internal, 0.67610000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff21", internal, 4.7290999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff22", internal, 3.6962000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff23", internal, 2.3618999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff24", internal, 4.4226000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff25", internal, 2.2250000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff26", internal, 0.0103, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff27", internal, 1.8922000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff28", internal, 4.6432000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff29", internal, 2.0148000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff30", internal, 4.9935999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff31", internal, 1.2203999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff32", internal, 3.8752, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff33", internal, 1.2817000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff34", internal, 3.2035999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff35", internal, 1.8695999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff36", internal, 1.2566999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff37", internal, 0.40589999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff4", internal, 0.17169999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff40", internal, 3.1051000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff41", internal, 7.0487000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff42", internal, 3.5194999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff43", internal, 0.54410000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff44", internal, 0.42649999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff45", internal, 3.9967000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff46", internal, 0.51939999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff5", internal, 4.3985000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff57", internal, 0.4526, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff58", internal, 6.3059000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff59", internal, 9.1720000000000006, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff6", internal, 2.6619000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff60", internal, 4.9981, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff61", internal, 5.2290000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff62", internal, 5.5141999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff65", internal, 0.11849999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff66", internal, 2.2988, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff67", internal, 1.6142000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff68", internal, 2.8871000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff69", internal, 3.9700000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff7", internal, 8.0556999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff70", internal, 2.6069, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff71", internal, 2.2988, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff72", internal, 0.90700000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff73", internal, 3.0047999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff74", internal, 1.2496, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff75", internal, 1.4322999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff76", internal, 2.1541999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff77", internal, 1.2237, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff78", internal, 0.20069999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff79", internal, 1.1852, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff8", internal, 9.1034000000000006, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff80", internal, 2.9373, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff88", internal, 3.9255, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff89", internal, 99.963700000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff9", internal, 5.5425000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff91", internal, 99.9983, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff93", internal, 100.00369999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "koff95", internal, 100.00230000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon1", internal, 0.00010086000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon16", internal, 0.0097000000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon17", internal, 0.0048999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon18", internal, 0.0117, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon19", internal, 0.089599999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon2", internal, 0.0058999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon20", internal, 0.047800000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon21", internal, 0.0114, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon22", internal, 0.00069999999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon23", internal, 0.0138, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon24", internal, 0.0050000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon25", internal, 0.099500000000000005, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon26", internal, 0.035499999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon27", internal, 0.0201, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon28", internal, 0.0074000000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon29", internal, 0.034599999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon3", internal, 0.033399999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon30", internal, 0.002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon31", internal, 0.0032000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon32", internal, 0.00089999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon33", internal, 0.033500000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon34", internal, 0.0001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon35", internal, 0.060199999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon36", internal, 0.0043, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon37", internal, 0.079100000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon4", internal, 0.50049999999999994, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon40", internal, 0.019099999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon41", internal, 0.0051000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon42", internal, 0.0023, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon43", internal, 0.012699999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon44", internal, 0.012200000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon45", internal, 0.0028, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon46", internal, 0.014800000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon5", internal, 2.5427, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon57", internal, 0.0038999999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon58", internal, 0.021499999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon59", internal, 0.0077000000000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon6", internal, 0.2283, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon60", internal, 0.00011993999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon61", internal, 0.80479999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon62", internal, 1.782, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon65", internal, 0.0123, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon66", internal, 0.00019264, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon67", internal, 6.6667000000000004e-05, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon68", internal, 0.0044999999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon69", internal, 0.0083999999999999995, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon7", internal, 1.0606, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon70", internal, 0.011599999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon71", internal, 0.0077999999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon72", internal, 0.035499999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon73", internal, 0.011599999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon74", internal, 0.013299999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon75", internal, 0.0137, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon76", internal, 0.0053, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon77", internal, 0.0101, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon78", internal, 0.0076, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon79", internal, 0.0077999999999999996, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon8", internal, 1.0259, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon80", internal, 0.00020000000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon86", internal, 0.0038, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon87", internal, 0.00080000000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon88", internal, 0.010800000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon89", internal, 0.19969999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon9", internal, 2.2867999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon91", internal, 0.1966, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon93", internal, 0.20030000000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kon95", internal, 0.1993, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP10", internal, 29.853100000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP11", internal, 78.203999999999994, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP12", internal, 11.421099999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP13", internal, 55.2104, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP14", internal, 57.750599999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP15", internal, 60.262799999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP38", internal, 83.4465, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP39", internal, 79.613200000000006, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP50", internal, 96.571600000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP63", internal, 7.4766000000000004, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kPTP64", internal, 48.633499999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kr49", internal, 552.67460000000005, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kr49b", internal, 640.82119999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "kr51", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "MEK_Abund", internal, 772, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "MEK_init", internal, 772, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "MEKstar_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "O_init", internal, 82.299999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "OP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "P2_init", internal, 197, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "P3_A_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "P3_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "pERK_ERKpase_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "pERK_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "pERK_MEKstar_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PI3K_Abund", internal, 46.399999999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PIP2_Abund", internal, 197, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PTEN", internal, 693.57860000000005, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "PTP1B_Abund", internal, 500, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "R_init", internal, 93.599999999999994, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Raf_Abund", internal, 743, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Raf_init", internal, 743, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Rafstar_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Ras_Abund", internal, 95.700000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "RasGAP_Abund", internal, 93.599999999999994, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "RsD_init", internal, 95.700000000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "RsT_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "S_init", internal, 11.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Shc_Abund", internal, 11.5, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigA_G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigA_G_O_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigA_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigAP_I_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigAP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigAP_R_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigAP_S_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigAP_T_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigG_A_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigG_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigG_O_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigI_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigO_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigR_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigRP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigS_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigSP_G_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigSP_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SigT_init", internal, 0, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "SOS_Abund", internal, 82.299999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "T_init", internal, 500, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "VeVc", internal, 33.299999999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "VmaxPY", internal, 223.8776, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr47", internal, 590.50580000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr51", internal, 16.736999999999998, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr52", internal, 199.2773, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr53", internal, 59.231400000000001, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr54", internal, 588.26710000000003, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr55", internal, 646.90030000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr81", internal, 242.60339999999999, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr82", internal, 398.19310000000002, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr83", internal, 534.05309999999997, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr84", internal, 634.1626, -Infinity, Infinity, false);
    this.base.user.setUserScalar(user, "Vmaxr85", internal, 369.22609999999997, -Infinity, Infinity, false);
    internal.initial_A = internal.A_init;
    internal.initial_A_SigG_O = internal.A_SigG_O_init;
    internal.initial_Akt = internal.Akt_init;
    internal.initial_Aktstar = internal.Aktstar_init;
    internal.initial_AP = internal.AP_init;
    internal.initial_E = internal.E_init;
    internal.initial_E_E1 = internal.E_E1_init;
    internal.initial_E_E1_PT = internal.E_E1_PT_init;
    internal.initial_E1 = internal.E1_init;
    internal.initial_E1_PT = internal.E1_PT_init;
    internal.initial_E11 = internal.E11_init;
    internal.initial_E11G = internal.E11G_init;
    internal.initial_E11P = internal.E11P_init;
    internal.initial_E11R = internal.E11R_init;
    internal.initial_E11S = internal.E11S_init;
    internal.initial_E11T = internal.E11T_init;
    internal.initial_E12 = internal.E12_init;
    internal.initial_E12G = internal.E12G_init;
    internal.initial_E12P = internal.E12P_init;
    internal.initial_E12R = internal.E12R_init;
    internal.initial_E12S = internal.E12S_init;
    internal.initial_E12T = internal.E12T_init;
    internal.initial_E13 = internal.E13_init;
    internal.initial_E13G = internal.E13G_init;
    internal.initial_E13I = internal.E13I_init;
    internal.initial_E13P = internal.E13P_init;
    internal.initial_E13R = internal.E13R_init;
    internal.initial_E13S = internal.E13S_init;
    internal.initial_E13T = internal.E13T_init;
    internal.initial_E14 = internal.E14_init;
    internal.initial_E14G = internal.E14G_init;
    internal.initial_E14I = internal.E14I_init;
    internal.initial_E14P = internal.E14P_init;
    internal.initial_E14R = internal.E14R_init;
    internal.initial_E14S = internal.E14S_init;
    internal.initial_E14T = internal.E14T_init;
    internal.initial_E2 = internal.E2_init;
    internal.initial_E2_PT = internal.E2_PT_init;
    internal.initial_E23 = internal.E23_init;
    internal.initial_E23G = internal.E23G_init;
    internal.initial_E23I = internal.E23I_init;
    internal.initial_E23P = internal.E23P_init;
    internal.initial_E23R = internal.E23R_init;
    internal.initial_E23S = internal.E23S_init;
    internal.initial_E23T = internal.E23T_init;
    internal.initial_E24 = internal.E24_init;
    internal.initial_E24G = internal.E24G_init;
    internal.initial_E24I = internal.E24I_init;
    internal.initial_E24P = internal.E24P_init;
    internal.initial_E24R = internal.E24R_init;
    internal.initial_E24S = internal.E24S_init;
    internal.initial_E24T = internal.E24T_init;
    internal.initial_E3 = internal.E3_init;
    internal.initial_E34 = internal.E34_init;
    internal.initial_E34G = internal.E34G_init;
    internal.initial_E34I = internal.E34I_init;
    internal.initial_E34P = internal.E34P_init;
    internal.initial_E34R = internal.E34R_init;
    internal.initial_E34S = internal.E34S_init;
    internal.initial_E34T = internal.E34T_init;
    internal.initial_E4 = internal.E4_init;
    internal.initial_E4_PT = internal.E4_PT_init;
    internal.initial_E44 = internal.E44_init;
    internal.initial_E44G = internal.E44G_init;
    internal.initial_E44I = internal.E44I_init;
    internal.initial_E44P = internal.E44P_init;
    internal.initial_E44R = internal.E44R_init;
    internal.initial_E44S = internal.E44S_init;
    internal.initial_E44T = internal.E44T_init;
    internal.initial_Empty = internal.Empty_init;
    internal.initial_ERK = internal.ERK_init;
    internal.initial_ERK_MEKstar = internal.ERK_MEKstar_init;
    internal.initial_ERKpase = internal.ERKpase_init;
    internal.initial_ERKstar = internal.ERKstar_init;
    internal.initial_ERKstar_ERKpase = internal.ERKstar_ERKpase_init;
    internal.initial_fint = internal.fint_init;
    internal.initial_G = internal.G_init;
    internal.initial_H = internal.H_init;
    internal.initial_H_E3 = internal.H_E3_init;
    internal.initial_H_E4 = internal.H_E4_init;
    internal.initial_H_E4_PT = internal.H_E4_PT_init;
    internal.initial_I = internal.I_init;
    internal.initial_MEK = internal.MEK_init;
    internal.initial_MEKstar = internal.MEKstar_init;
    internal.initial_O = internal.O_init;
    internal.initial_OP = internal.OP_init;
    internal.initial_P2 = internal.P2_init;
    internal.initial_P3 = internal.P3_init;
    internal.initial_P3_A = internal.P3_A_init;
    internal.initial_pERK = internal.pERK_init;
    internal.initial_pERK_ERKpase = internal.pERK_ERKpase_init;
    internal.initial_pERK_MEKstar = internal.pERK_MEKstar_init;
    internal.initial_R = internal.R_init;
    internal.initial_Raf = internal.Raf_init;
    internal.initial_Rafstar = internal.Rafstar_init;
    internal.initial_RsD = internal.RsD_init;
    internal.initial_RsT = internal.RsT_init;
    internal.initial_S = internal.S_init;
    internal.initial_SigA = internal.SigA_init;
    internal.initial_SigA_G = internal.SigA_G_init;
    internal.initial_SigA_G_O = internal.SigA_G_O_init;
    internal.initial_SigAP = internal.SigAP_init;
    internal.initial_SigAP_I = internal.SigAP_I_init;
    internal.initial_SigAP_R = internal.SigAP_R_init;
    internal.initial_SigAP_S = internal.SigAP_S_init;
    internal.initial_SigAP_T = internal.SigAP_T_init;
    internal.initial_SigG = internal.SigG_init;
    internal.initial_SigG_A = internal.SigG_A_init;
    internal.initial_SigG_O = internal.SigG_O_init;
    internal.initial_SigI = internal.SigI_init;
    internal.initial_SigO = internal.SigO_init;
    internal.initial_SigR = internal.SigR_init;
    internal.initial_SigRP = internal.SigRP_init;
    internal.initial_SigS = internal.SigS_init;
    internal.initial_SigSP = internal.SigSP_init;
    internal.initial_SigSP_G = internal.SigSP_G_init;
    internal.initial_SigT = internal.SigT_init;
    internal.initial_T = internal.T_init;
    this.updateMetadata();
  }
  getInternal() {
    return this.internal;
  }
  rhs(t, state, dstatedt) {
    var internal = this.internal;
    const E1 = state[0];
    const E2 = state[1];
    const E3 = state[2];
    const E4 = state[3];
    const E_E1 = state[4];
    const H_E3 = state[5];
    const H_E4 = state[6];
    const E11 = state[7];
    const E12 = state[8];
    const E23 = state[9];
    const E34 = state[10];
    const E24 = state[11];
    const E44 = state[12];
    const E11P = state[13];
    const E12P = state[14];
    const E23P = state[15];
    const E34P = state[16];
    const E24P = state[17];
    const E44P = state[18];
    const G = state[19];
    const S = state[20];
    const I = state[21];
    const R = state[22];
    const O = state[23];
    const A = state[24];
    const E11G = state[25];
    const E11S = state[26];
    const E11R = state[27];
    const E12G = state[28];
    const E12S = state[29];
    const E12R = state[30];
    const E23G = state[31];
    const E23S = state[32];
    const E23I = state[33];
    const E23R = state[34];
    const E34G = state[35];
    const E34S = state[36];
    const E34I = state[37];
    const E34R = state[38];
    const E24G = state[39];
    const E24S = state[40];
    const E24I = state[41];
    const E24R = state[42];
    const E44G = state[43];
    const E44S = state[44];
    const E44I = state[45];
    const E44R = state[46];
    const SigG = state[47];
    const SigS = state[48];
    const SigI = state[49];
    const SigR = state[50];
    const SigA = state[51];
    const SigSP = state[52];
    const SigAP = state[53];
    const SigG_O = state[54];
    const SigG_A = state[55];
    const SigSP_G = state[56];
    const SigAP_S = state[57];
    const SigAP_I = state[58];
    const SigAP_R = state[59];
    const P3_A = state[61];
    const P2 = state[62];
    const P3 = state[63];
    const Akt = state[64];
    const RsD = state[65];
    const RsT = state[66];
    const SigRP = state[67];
    const Raf = state[68];
    const Rafstar = state[69];
    const MEK = state[70];
    const MEKstar = state[71];
    const ERK = state[72];
    const ERKstar = state[73];
    const OP = state[74];
    const AP = state[75];
    const A_SigG_O = state[76];
    const SigA_G = state[77];
    const SigA_G_O = state[78];
    const SigO = state[79];
    const E13 = state[80];
    const E14 = state[81];
    const E13P = state[82];
    const E14P = state[83];
    const E13G = state[84];
    const E13S = state[85];
    const E13I = state[86];
    const E13R = state[87];
    const E14G = state[88];
    const E14S = state[89];
    const E14I = state[90];
    const E14R = state[91];
    const T = state[92];
    const E11T = state[93];
    const E12T = state[94];
    const E23T = state[95];
    const E34T = state[96];
    const E24T = state[97];
    const E44T = state[98];
    const E13T = state[99];
    const E14T = state[100];
    const SigT = state[101];
    const E1_PT = state[102];
    const E2_PT = state[103];
    const E4_PT = state[104];
    const E_E1_PT = state[105];
    const H_E4_PT = state[106];
    const Aktstar = state[107];
    const SigAP_T = state[108];
    const E = state[109];
    const H = state[110];
    const fint = state[111];
    const pERK = state[112];
    const ERK_MEKstar = state[113];
    const pERK_MEKstar = state[114];
    const pERK_ERKpase = state[115];
    const ERKpase = state[116];
    const ERKstar_ERKpase = state[117];
    dstatedt[24] = 0 - 1 * internal.membrane * (internal.kon41 * SigG * A - internal.koff41 * SigG_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) - 1 * internal.membrane * (internal.kon46 * P3 * A - internal.koff46 * P3_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) - 1 * internal.membrane * (internal.kf55 * A * ERKstar / (internal.Kmf55 + A) - internal.Vmaxr55 * AP / (internal.Kmr55 + AP)) - 1 * internal.membrane * (internal.kon59 * SigG_O * A - internal.koff59 * A_SigG_O * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T)));
    dstatedt[76] = 0 + 1 * internal.membrane * (internal.kon59 * SigG_O * A - internal.koff59 * A_SigG_O * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) + 1 * internal.membrane * (internal.kon60 * SigG_A * O - internal.koff60 * A_SigG_O);
    dstatedt[64] = 0 - 1 * internal.membrane * (internal.kf47 * P3 * Akt / (internal.Kmf47 + Akt) - internal.Vmaxr47 * Aktstar / (internal.Kmr47 + Aktstar));
    dstatedt[107] = 0 + 1 * internal.membrane * (internal.kf47 * P3 * Akt / (internal.Kmf47 + Akt) - internal.Vmaxr47 * Aktstar / (internal.Kmr47 + Aktstar));
    dstatedt[75] = 0 + 1 * internal.membrane * (internal.kf55 * A * ERKstar / (internal.Kmf55 + A) - internal.Vmaxr55 * AP / (internal.Kmr55 + AP));
    dstatedt[109] = 0 - 1 * internal.membrane * ((internal.kon1 * E * E1 - internal.EGF_off * E_E1 + internal.kon86 * E * E1_PT - internal.EGF_off * E_E1_PT) / internal.VeVc);
    dstatedt[4] = 0 + 1 * internal.membrane * (internal.kon1 * E * E1 - internal.EGF_off * E_E1) - 1 * internal.membrane * (internal.kon4 * E_E1 * E_E1 - internal.koff4 * E11) - 1 * internal.membrane * (internal.kon5 * E_E1 * E2 - internal.koff5 * E12) - 1 * internal.membrane * (internal.kon61 * H_E3 * E_E1 - internal.koff61 * E13) - 1 * internal.membrane * (internal.kon62 * H_E4 * E_E1 - internal.koff62 * E14) - 1 * internal.membrane * (internal.kf84 * E_E1 * ERKstar / (internal.Kmf84 + E_E1) - internal.Vmaxr84 * E_E1_PT / (internal.Kmr84 + E_E1_PT));
    dstatedt[105] = 0 + 1 * internal.membrane * (internal.kf84 * E_E1 * ERKstar / (internal.Kmf84 + E_E1) - internal.Vmaxr84 * E_E1_PT / (internal.Kmr84 + E_E1_PT)) + 1 * internal.membrane * (internal.kon86 * E * E1_PT - internal.EGF_off * E_E1_PT);
    dstatedt[0] = 0 - 1 * internal.membrane * (internal.kon1 * E * E1 - internal.EGF_off * E_E1) - 1 * internal.membrane * (internal.kf81 * E1 * ERKstar / (internal.Kmf81 + E1) - internal.Vmaxr81 * E1_PT / (internal.Kmr81 + E1_PT));
    dstatedt[102] = 0 + 1 * internal.membrane * (internal.kf81 * E1 * ERKstar / (internal.Kmf81 + E1) - internal.Vmaxr81 * E1_PT / (internal.Kmr81 + E1_PT)) - 1 * internal.membrane * (internal.kon86 * E * E1_PT - internal.EGF_off * E_E1_PT);
    dstatedt[7] = 0 + 1 * internal.membrane * (internal.kon4 * E_E1 * E_E1 - internal.koff4 * E11) - 1 * internal.membrane * (internal.kf10 * E11 - internal.VmaxPY * E11P / (internal.KmPY + E11P) - internal.kPTP10 * SigT * E11P);
    dstatedt[25] = 0 + 1 * internal.membrane * (4 * internal.kon16 * E11P * G - internal.koff16 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E11G) - 1 * internal.membrane * internal.kdeg * E11G;
    dstatedt[13] = 0 + 1 * internal.membrane * (internal.kf10 * E11 - internal.VmaxPY * E11P / (internal.KmPY + E11P) - internal.kPTP10 * SigT * E11P) - 1 * internal.membrane * (4 * internal.kon16 * E11P * G - internal.koff16 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E11G) - 1 * internal.membrane * (8 * internal.kon17 * E11P * S - internal.koff17 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E11S) - 1 * internal.membrane * (2 * internal.kon18 * E11P * R - internal.koff18 * (SigR / (SigR + SigRP + internal.eps)) * E11R) - 1 * internal.membrane * (4 * internal.kon73 * E11P * T - internal.koff73 * E11T) - 1 * internal.membrane * internal.kdeg * E11P;
    dstatedt[27] = 0 + 1 * internal.membrane * (2 * internal.kon18 * E11P * R - internal.koff18 * (SigR / (SigR + SigRP + internal.eps)) * E11R) - 1 * internal.membrane * internal.kdeg * E11R;
    dstatedt[26] = 0 + 1 * internal.membrane * (8 * internal.kon17 * E11P * S - internal.koff17 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E11S) - 1 * internal.membrane * internal.kdeg * E11S;
    dstatedt[93] = 0 + 1 * internal.membrane * (4 * internal.kon73 * E11P * T - internal.koff73 * E11T) - 1 * internal.membrane * internal.kdeg * E11T;
    dstatedt[8] = 0 + 1 * internal.membrane * (internal.kon5 * E_E1 * E2 - internal.koff5 * E12) - 1 * internal.membrane * (internal.kf11 * E12 - internal.VmaxPY * E12P / (internal.KmPY + E12P) - internal.kPTP11 * SigT * E12P);
    dstatedt[28] = 0 + 1 * internal.membrane * (3 * internal.kon19 * E12P * G - internal.koff19 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E12G);
    dstatedt[14] = 0 + 1 * internal.membrane * (internal.kf11 * E12 - internal.VmaxPY * E12P / (internal.KmPY + E12P) - internal.kPTP11 * SigT * E12P) - 1 * internal.membrane * (3 * internal.kon19 * E12P * G - internal.koff19 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E12G) - 1 * internal.membrane * (6 * internal.kon20 * E12P * S - internal.koff20 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E12S) - 1 * internal.membrane * (2 * internal.kon21 * E12P * R - internal.koff21 * (SigR / (SigR + SigRP + internal.eps)) * E12R) - 1 * internal.membrane * (3 * internal.kon74 * E12P * T - internal.koff74 * E12T);
    dstatedt[30] = 0 + 1 * internal.membrane * (2 * internal.kon21 * E12P * R - internal.koff21 * (SigR / (SigR + SigRP + internal.eps)) * E12R);
    dstatedt[29] = 0 + 1 * internal.membrane * (6 * internal.kon20 * E12P * S - internal.koff20 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E12S);
    dstatedt[94] = 0 + 1 * internal.membrane * (3 * internal.kon74 * E12P * T - internal.koff74 * E12T);
    dstatedt[80] = 0 + 1 * internal.membrane * (internal.kon61 * H_E3 * E_E1 - internal.koff61 * E13) - 1 * internal.membrane * (internal.kf63 * E13 - internal.VmaxPY * E13P / (internal.KmPY + E13P) - internal.kPTP63 * SigT * E13P);
    dstatedt[84] = 0 + 1 * internal.membrane * (4 * internal.kon65 * E13P * G - internal.koff65 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E13G);
    dstatedt[86] = 0 + 1 * internal.membrane * (3 * internal.kon67 * E13P * I - internal.koff67 * E13I);
    dstatedt[82] = 0 + 1 * internal.membrane * (internal.kf63 * E13 - internal.VmaxPY * E13P / (internal.KmPY + E13P) - internal.kPTP63 * SigT * E13P) - 1 * internal.membrane * (4 * internal.kon65 * E13P * G - internal.koff65 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E13G) - 1 * internal.membrane * (5 * internal.kon66 * E13P * S - internal.koff66 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E13S) - 1 * internal.membrane * (3 * internal.kon67 * E13P * I - internal.koff67 * E13I) - 1 * internal.membrane * (2 * internal.kon68 * E13P * R - internal.koff68 * (SigR / (SigR + SigRP + internal.eps)) * E13R) - 1 * internal.membrane * (3 * internal.kon79 * E13P * T - internal.koff79 * E13T);
    dstatedt[87] = 0 + 1 * internal.membrane * (2 * internal.kon68 * E13P * R - internal.koff68 * (SigR / (SigR + SigRP + internal.eps)) * E13R);
    dstatedt[85] = 0 + 1 * internal.membrane * (5 * internal.kon66 * E13P * S - internal.koff66 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E13S);
    dstatedt[99] = 0 + 1 * internal.membrane * (3 * internal.kon79 * E13P * T - internal.koff79 * E13T);
    dstatedt[81] = 0 + 1 * internal.membrane * (internal.kon62 * H_E4 * E_E1 - internal.koff62 * E14) - 1 * internal.membrane * (internal.kf64 * E14 - internal.VmaxPY * E14P / (internal.KmPY + E14P) - internal.kPTP64 * SigT * E14P);
    dstatedt[88] = 0 + 1 * internal.membrane * (4 * internal.kon69 * E14P * G - internal.koff69 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E14G);
    dstatedt[90] = 0 + 1 * internal.membrane * (1 * internal.kon71 * E14P * I - internal.koff71 * E14I);
    dstatedt[83] = 0 + 1 * internal.membrane * (internal.kf64 * E14 - internal.VmaxPY * E14P / (internal.KmPY + E14P) - internal.kPTP64 * SigT * E14P) - 1 * internal.membrane * (4 * internal.kon69 * E14P * G - internal.koff69 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E14G) - 1 * internal.membrane * (6 * internal.kon70 * E14P * S - internal.koff70 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E14S) - 1 * internal.membrane * (1 * internal.kon71 * E14P * I - internal.koff71 * E14I) - 1 * internal.membrane * (2 * internal.kon72 * E14P * R - internal.koff72 * (SigR / (SigR + SigRP + internal.eps)) * E14R) - 1 * internal.membrane * (3 * internal.kon80 * E14P * T - internal.koff80 * E14T);
    dstatedt[91] = 0 + 1 * internal.membrane * (2 * internal.kon72 * E14P * R - internal.koff72 * (SigR / (SigR + SigRP + internal.eps)) * E14R);
    dstatedt[89] = 0 + 1 * internal.membrane * (6 * internal.kon70 * E14P * S - internal.koff70 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E14S);
    dstatedt[100] = 0 + 1 * internal.membrane * (3 * internal.kon80 * E14P * T - internal.koff80 * E14T);
    dstatedt[1] = 0 - 1 * internal.membrane * (internal.kon5 * E_E1 * E2 - internal.koff5 * E12) - 1 * internal.membrane * (internal.kon6 * H_E3 * E2 - internal.koff6 * E23) - 1 * internal.kon8 * H_E4 * E2 - internal.koff8 * E24 - 1 * internal.membrane * (internal.kf82 * E2 * ERKstar / (internal.Kmf82 + E2) - internal.Vmaxr82 * E2_PT / (internal.Kmr82 + E2_PT));
    dstatedt[103] = 0 + 1 * internal.membrane * (internal.kf82 * E2 * ERKstar / (internal.Kmf82 + E2) - internal.Vmaxr82 * E2_PT / (internal.Kmr82 + E2_PT));
    dstatedt[9] = 0 + 1 * internal.membrane * (internal.kon6 * H_E3 * E2 - internal.koff6 * E23) - 1 * internal.membrane * (internal.kf12 * E23 - internal.VmaxPY * E23P / (internal.KmPY + E23P) - internal.kPTP12 * SigT * E23P);
    dstatedt[31] = 0 + 1 * internal.membrane * (3 * internal.kon22 * E23P * G - internal.koff22 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E23G);
    dstatedt[33] = 0 + 1 * internal.membrane * (3 * internal.kon24 * E23P * I - internal.koff24 * E23I);
    dstatedt[15] = 0 + 1 * internal.membrane * (internal.kf12 * E23 - internal.VmaxPY * E23P / (internal.KmPY + E23P) - internal.kPTP12 * SigT * E23P) - 1 * internal.membrane * (3 * internal.kon22 * E23P * G - internal.koff22 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E23G) - 1 * internal.membrane * (3 * internal.kon23 * E23P * S - internal.koff23 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E23S) - 1 * internal.membrane * (3 * internal.kon24 * E23P * I - internal.koff24 * E23I) - 1 * internal.membrane * (2 * internal.kon25 * E23P * R - internal.koff25 * (SigR / (SigR + SigRP + internal.eps)) * E23R) - 1 * internal.membrane * (2 * internal.kon75 * E23P * T - internal.koff75 * E23T);
    dstatedt[34] = 0 + 1 * internal.membrane * (2 * internal.kon25 * E23P * R - internal.koff25 * (SigR / (SigR + SigRP + internal.eps)) * E23R);
    dstatedt[32] = 0 + 1 * internal.membrane * (3 * internal.kon23 * E23P * S - internal.koff23 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E23S);
    dstatedt[95] = 0 + 1 * internal.membrane * (2 * internal.kon75 * E23P * T - internal.koff75 * E23T);
    dstatedt[11] = 0 + 1 * internal.kon8 * H_E4 * E2 - internal.koff8 * E24 - 1 * internal.membrane * (internal.kf14 * E24 - internal.VmaxPY * E24P / (internal.KmPY + E24P) - internal.kPTP14 * SigT * E24P);
    dstatedt[39] = 0 + 1 * internal.membrane * (3 * internal.kon30 * E24P * G - internal.koff30 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E24G);
    dstatedt[41] = 0 + 1 * internal.membrane * (1 * internal.kon32 * E24P * I - internal.koff32 * E24I);
    dstatedt[17] = 0 + 1 * internal.membrane * (internal.kf14 * E24 - internal.VmaxPY * E24P / (internal.KmPY + E24P) - internal.kPTP14 * SigT * E24P) - 1 * internal.membrane * (3 * internal.kon30 * E24P * G - internal.koff30 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E24G) - 1 * internal.membrane * (4 * internal.kon31 * E24P * S - internal.koff31 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E24S) - 1 * internal.membrane * (1 * internal.kon32 * E24P * I - internal.koff32 * E24I) - 1 * internal.membrane * (2 * internal.kon33 * E24P * R - internal.koff33 * (SigR / (SigR + SigRP + internal.eps)) * E24R) - 1 * internal.membrane * (2 * internal.kon77 * E24P * T - internal.koff77 * E24T);
    dstatedt[42] = 0 + 1 * internal.membrane * (2 * internal.kon33 * E24P * R - internal.koff33 * (SigR / (SigR + SigRP + internal.eps)) * E24R);
    dstatedt[40] = 0 + 1 * internal.membrane * (4 * internal.kon31 * E24P * S - internal.koff31 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E24S);
    dstatedt[97] = 0 + 1 * internal.membrane * (2 * internal.kon77 * E24P * T - internal.koff77 * E24T);
    dstatedt[2] = 0 - 1 * internal.membrane * (internal.kon2 * H * E3 - internal.HRGoff_3 * H_E3);
    dstatedt[10] = 0 + 1 * internal.membrane * (internal.kon7 * H_E3 * H_E4 - internal.koff7 * E34) - 1 * internal.membrane * (internal.kf13 * E34 - internal.VmaxPY * E34P / (internal.KmPY + E34P) - internal.kPTP13 * SigT * E34P);
    dstatedt[35] = 0 + 1 * internal.membrane * (4 * internal.kon26 * E34P * G - internal.koff26 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E34G);
    dstatedt[37] = 0 + 1 * internal.membrane * (4 * internal.kon28 * E34P * I - internal.koff28 * E34I);
    dstatedt[16] = 0 + 1 * internal.membrane * (internal.kf13 * E34 - internal.VmaxPY * E34P / (internal.KmPY + E34P) - internal.kPTP13 * SigT * E34P) - 1 * internal.membrane * (4 * internal.kon26 * E34P * G - internal.koff26 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E34G) - 1 * internal.membrane * (3 * internal.kon27 * E34P * S - internal.koff27 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E34S) - 1 * internal.membrane * (4 * internal.kon28 * E34P * I - internal.koff28 * E34I) - 1 * internal.membrane * (2 * internal.kon29 * E34P * R - internal.koff29 * (SigR / (SigR + SigRP + internal.eps)) * E34R) - 1 * internal.membrane * (2 * internal.kon76 * E34P * T - internal.koff76 * E34T);
    dstatedt[38] = 0 + 1 * internal.membrane * (2 * internal.kon29 * E34P * R - internal.koff29 * (SigR / (SigR + SigRP + internal.eps)) * E34R);
    dstatedt[36] = 0 + 1 * internal.membrane * (3 * internal.kon27 * E34P * S - internal.koff27 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E34S);
    dstatedt[96] = 0 + 1 * internal.membrane * (2 * internal.kon76 * E34P * T - internal.koff76 * E34T);
    dstatedt[3] = 0 - 1 * internal.membrane * (internal.kon3 * H * E4 - internal.HRGoff_4 * H_E4) - 1 * internal.membrane * (internal.kf83 * E4 * ERKstar / (internal.Kmf83 + E4) - internal.Vmaxr83 * E4_PT / (internal.Kmr83 + E4_PT));
    dstatedt[104] = 0 + 1 * internal.membrane * (internal.kf83 * E4 * ERKstar / (internal.Kmf83 + E4) - internal.Vmaxr83 * E4_PT / (internal.Kmr83 + E4_PT)) - 1 * internal.membrane * (internal.kon87 * H * E4_PT - internal.HRGoff_4 * H_E4_PT);
    dstatedt[12] = 0 + 1 * internal.membrane * (internal.kon9 * H_E4 * H_E4 - internal.koff9 * E44) - 1 * internal.membrane * (internal.kf15 * E44 - internal.VmaxPY * E44P / (internal.KmPY + E44P) - internal.kPTP15 * SigT * E44P);
    dstatedt[43] = 0 + 1 * internal.membrane * (4 * internal.kon34 * E44P * G - internal.koff34 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E44G);
    dstatedt[45] = 0 + 1 * internal.membrane * (2 * internal.kon36 * E44P * I - internal.koff36 * E44I);
    dstatedt[18] = 0 + 1 * internal.membrane * (internal.kf15 * E44 - internal.VmaxPY * E44P / (internal.KmPY + E44P) - internal.kPTP15 * SigT * E44P) - 1 * internal.membrane * (4 * internal.kon34 * E44P * G - internal.koff34 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E44G) - 1 * internal.membrane * (4 * internal.kon35 * E44P * S - internal.koff35 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E44S) - 1 * internal.membrane * (2 * internal.kon36 * E44P * I - internal.koff36 * E44I) - 1 * internal.membrane * (2 * internal.kon37 * E44P * R - internal.koff37 * (SigR / (SigR + SigRP + internal.eps)) * E44R) - 1 * internal.membrane * (2 * internal.kon78 * E44P * T - internal.koff78 * E44T);
    dstatedt[46] = 0 + 1 * internal.membrane * (2 * internal.kon37 * E44P * R - internal.koff37 * (SigR / (SigR + SigRP + internal.eps)) * E44R);
    dstatedt[44] = 0 + 1 * internal.membrane * (4 * internal.kon35 * E44P * S - internal.koff35 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E44S);
    dstatedt[98] = 0 + 1 * internal.membrane * (2 * internal.kon78 * E44P * T - internal.koff78 * E44T);
    dstatedt[60] = 0 + 1 * internal.membrane * internal.kdeg * E11P - 1 * internal.membrane * internal.a98 * (- fint + internal.b98) + 1 * internal.membrane * ((internal.kon1 * E * E1 - internal.EGF_off * E_E1 + internal.kon86 * E * E1_PT - internal.EGF_off * E_E1_PT) / internal.VeVc) + 1 * internal.membrane * ((internal.kon87 * H * E4_PT - internal.HRGoff_4 * H_E4_PT + internal.kon2 * H * E3 - internal.HRGoff_3 * H_E3 + internal.kon3 * H * E4 - internal.HRGoff_4 * H_E4) / internal.VeVc);
    dstatedt[72] = 0 - 1 * internal.membrane * (internal.kon89 * ERK * MEKstar - internal.koff89 * ERK_MEKstar) + 1 * internal.membrane * internal.kcat96 * pERK_ERKpase;
    dstatedt[113] = 0 + 1 * internal.membrane * (internal.kon89 * ERK * MEKstar - internal.koff89 * ERK_MEKstar) - 1 * internal.membrane * internal.kcat90 * ERK_MEKstar;
    dstatedt[116] = 0 - 1 * internal.membrane * (internal.kon93 * ERKstar * ERKpase - internal.koff93 * ERKstar_ERKpase) + 1 * internal.membrane * internal.kcat94 * ERKstar_ERKpase - 1 * internal.membrane * (internal.kon95 * pERK * ERKpase - internal.koff95 * pERK_ERKpase) + 1 * internal.membrane * internal.kcat96 * pERK_ERKpase;
    dstatedt[73] = 0 + 1 * internal.membrane * internal.kcat92 * pERK_MEKstar - 1 * internal.membrane * (internal.kon93 * ERKstar * ERKpase - internal.koff93 * ERKstar_ERKpase);
    dstatedt[117] = 0 + 1 * internal.membrane * (internal.kon93 * ERKstar * ERKpase - internal.koff93 * ERKstar_ERKpase) - 1 * internal.membrane * internal.kcat94 * ERKstar_ERKpase;
    dstatedt[111] = 0 + 1 * internal.membrane * internal.a98 * (- fint + internal.b98);
    dstatedt[19] = 0 - 1 * internal.membrane * (4 * internal.kon16 * E11P * G - internal.koff16 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E11G) - 1 * internal.membrane * (3 * internal.kon19 * E12P * G - internal.koff19 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E12G) - 1 * internal.membrane * (3 * internal.kon22 * E23P * G - internal.koff22 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E23G) - 1 * internal.membrane * (4 * internal.kon26 * E34P * G - internal.koff26 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E34G) - 1 * internal.membrane * (3 * internal.kon30 * E24P * G - internal.koff30 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E24G) - 1 * internal.membrane * (4 * internal.kon34 * E44P * G - internal.koff34 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E44G) - 1 * internal.membrane * (internal.kon42 * SigSP * G - internal.koff42 * SigSP_G * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps))) - 1 * internal.membrane * (internal.kon57 * P3_A * G - internal.koff57 * SigA_G) - 1 * internal.membrane * (4 * internal.kon65 * E13P * G - internal.koff65 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E13G) - 1 * internal.membrane * (4 * internal.kon69 * E14P * G - internal.koff69 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E14G) + 1 * internal.membrane * internal.kdeg * E11G;
    dstatedt[110] = 0 - 1 * internal.membrane * ((internal.kon87 * H * E4_PT - internal.HRGoff_4 * H_E4_PT + internal.kon2 * H * E3 - internal.HRGoff_3 * H_E3 + internal.kon3 * H * E4 - internal.HRGoff_4 * H_E4) / internal.VeVc);
    dstatedt[5] = 0 + 1 * internal.membrane * (internal.kon2 * H * E3 - internal.HRGoff_3 * H_E3) - 1 * internal.membrane * (internal.kon6 * H_E3 * E2 - internal.koff6 * E23) - 1 * internal.membrane * (internal.kon7 * H_E3 * H_E4 - internal.koff7 * E34) - 1 * internal.membrane * (internal.kon61 * H_E3 * E_E1 - internal.koff61 * E13);
    dstatedt[6] = 0 + 1 * internal.membrane * (internal.kon3 * H * E4 - internal.HRGoff_4 * H_E4) - 1 * internal.membrane * (internal.kon7 * H_E3 * H_E4 - internal.koff7 * E34) - 1 * internal.kon8 * H_E4 * E2 - internal.koff8 * E24 - 1 * internal.membrane * (internal.kon9 * H_E4 * H_E4 - internal.koff9 * E44) - 1 * internal.membrane * (internal.kon62 * H_E4 * E_E1 - internal.koff62 * E14) - 1 * internal.membrane * (internal.kf85 * H_E4 * ERKstar / (internal.Kmf85 + H_E4) - internal.Vmaxr85 * H_E4_PT / (internal.Kmr85 + H_E4_PT));
    dstatedt[106] = 0 + 1 * internal.membrane * (internal.kf85 * H_E4 * ERKstar / (internal.Kmf85 + H_E4) - internal.Vmaxr85 * H_E4_PT / (internal.Kmr85 + H_E4_PT)) + 1 * internal.membrane * (internal.kon87 * H * E4_PT - internal.HRGoff_4 * H_E4_PT);
    dstatedt[21] = 0 - 1 * internal.membrane * (3 * internal.kon24 * E23P * I - internal.koff24 * E23I) - 1 * internal.membrane * (4 * internal.kon28 * E34P * I - internal.koff28 * E34I) - 1 * internal.membrane * (1 * internal.kon32 * E24P * I - internal.koff32 * E24I) - 1 * internal.membrane * (2 * internal.kon36 * E44P * I - internal.koff36 * E44I) - 1 * internal.membrane * (3 * internal.kon44 * SigAP * I - internal.koff44 * SigAP_I) - 1 * internal.membrane * (3 * internal.kon67 * E13P * I - internal.koff67 * E13I) - 1 * internal.membrane * (1 * internal.kon71 * E14P * I - internal.koff71 * E14I);
    dstatedt[70] = 0 - 1 * internal.membrane * (internal.kf52 * Rafstar * MEK / (internal.Kmf52 + MEK) - internal.Vmaxr52 * MEKstar / (internal.Kmr52 + MEKstar));
    dstatedt[71] = 0 + 1 * internal.membrane * (internal.kf52 * Rafstar * MEK / (internal.Kmf52 + MEK) - internal.Vmaxr52 * MEKstar / (internal.Kmr52 + MEKstar)) - 1 * internal.membrane * (internal.kon89 * ERK * MEKstar - internal.koff89 * ERK_MEKstar) + 1 * internal.membrane * internal.kcat90 * ERK_MEKstar - 1 * internal.membrane * (internal.kon91 * pERK * MEKstar - internal.koff91 * pERK_MEKstar) + 1 * internal.membrane * internal.kcat92 * pERK_MEKstar;
    dstatedt[23] = 0 - 1 * internal.membrane * (internal.kon40 * SigG * O - internal.koff40 * SigG_O) - 1 * internal.membrane * (internal.kf54 * O * ERKstar / (internal.Kmf54 + O) - internal.Vmaxr54 * OP / (internal.Kmr54 + OP)) - 1 * internal.membrane * (internal.kon58 * SigA_G * O - internal.koff58 * SigA_G_O) - 1 * internal.membrane * (internal.kon60 * SigG_A * O - internal.koff60 * A_SigG_O);
    dstatedt[74] = 0 + 1 * internal.membrane * (internal.kf54 * O * ERKstar / (internal.Kmf54 + O) - internal.Vmaxr54 * OP / (internal.Kmr54 + OP));
    dstatedt[62] = 0 - 1 * internal.membrane * (internal.kf48 * (1 - fint * (E11P / (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P + internal.eps))) * SigI * P2 / (internal.Kmf48 + P2) - 3 * internal.PTEN * P3 / (internal.Kmr48 + P3));
    dstatedt[63] = 0 - 1 * internal.membrane * (internal.kon46 * P3 * A - internal.koff46 * P3_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) + 1 * internal.membrane * (internal.kf48 * (1 - fint * (E11P / (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P + internal.eps))) * SigI * P2 / (internal.Kmf48 + P2) - 3 * internal.PTEN * P3 / (internal.Kmr48 + P3));
    dstatedt[61] = 0 + 1 * internal.membrane * (internal.kon46 * P3 * A - internal.koff46 * P3_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) - 1 * internal.membrane * (internal.kon57 * P3_A * G - internal.koff57 * SigA_G);
    dstatedt[112] = 0 + 1 * internal.membrane * internal.kcat90 * ERK_MEKstar - 1 * internal.membrane * (internal.kon91 * pERK * MEKstar - internal.koff91 * pERK_MEKstar) + 1 * internal.membrane * internal.kcat94 * ERKstar_ERKpase - 1 * internal.membrane * (internal.kon95 * pERK * ERKpase - internal.koff95 * pERK_ERKpase);
    dstatedt[115] = 0 + 1 * internal.membrane * (internal.kon95 * pERK * ERKpase - internal.koff95 * pERK_ERKpase) - 1 * internal.membrane * internal.kcat96 * pERK_ERKpase;
    dstatedt[114] = 0 + 1 * internal.membrane * (internal.kon91 * pERK * MEKstar - internal.koff91 * pERK_MEKstar) - 1 * internal.membrane * internal.kcat92 * pERK_MEKstar;
    dstatedt[22] = 0 - 1 * internal.membrane * (2 * internal.kon18 * E11P * R - internal.koff18 * (SigR / (SigR + SigRP + internal.eps)) * E11R) - 1 * internal.membrane * (2 * internal.kon21 * E12P * R - internal.koff21 * (SigR / (SigR + SigRP + internal.eps)) * E12R) - 1 * internal.membrane * (2 * internal.kon25 * E23P * R - internal.koff25 * (SigR / (SigR + SigRP + internal.eps)) * E23R) - 1 * internal.membrane * (2 * internal.kon29 * E34P * R - internal.koff29 * (SigR / (SigR + SigRP + internal.eps)) * E34R) - 1 * internal.membrane * (2 * internal.kon33 * E24P * R - internal.koff33 * (SigR / (SigR + SigRP + internal.eps)) * E24R) - 1 * internal.membrane * (2 * internal.kon37 * E44P * R - internal.koff37 * (SigR / (SigR + SigRP + internal.eps)) * E44R) - 1 * internal.membrane * (2 * internal.kon45 * SigAP * R - internal.koff45 * SigAP_R * (SigR / (SigR + SigRP + internal.eps))) - 1 * internal.membrane * (2 * internal.kon68 * E13P * R - internal.koff68 * (SigR / (SigR + SigRP + internal.eps)) * E13R) - 1 * internal.membrane * (2 * internal.kon72 * E14P * R - internal.koff72 * (SigR / (SigR + SigRP + internal.eps)) * E14R) + 1 * internal.membrane * internal.kdeg * E11R;
    dstatedt[68] = 0 - 1 * internal.membrane * (internal.kf51 * RsT * Raf / (internal.Kmf51 + Raf) - internal.Vmaxr51 * Rafstar / (internal.Kmrb51 + Rafstar));
    dstatedt[69] = 0 + 1 * internal.membrane * (internal.kf51 * RsT * Raf / (internal.Kmf51 + Raf) - internal.Vmaxr51 * Rafstar / (internal.Kmrb51 + Rafstar));
    dstatedt[65] = 0 - 1 * internal.membrane * (internal.kf49 * SigO * RsD / (internal.Kmf49 + RsD) - internal.kr49 * SigR * RsT / (internal.Kmr49 + RsT) - internal.kr49b * SigRP * RsT / (internal.Kmr49b + RsT) - internal.kcon49 * RsT);
    dstatedt[66] = 0 + 1 * internal.membrane * (internal.kf49 * SigO * RsD / (internal.Kmf49 + RsD) - internal.kr49 * SigR * RsT / (internal.Kmr49 + RsT) - internal.kr49b * SigRP * RsT / (internal.Kmr49b + RsT) - internal.kcon49 * RsT);
    dstatedt[20] = 0 - 1 * internal.membrane * (8 * internal.kon17 * E11P * S - internal.koff17 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E11S) - 1 * internal.membrane * (6 * internal.kon20 * E12P * S - internal.koff20 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E12S) - 1 * internal.membrane * (3 * internal.kon23 * E23P * S - internal.koff23 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E23S) - 1 * internal.membrane * (3 * internal.kon27 * E34P * S - internal.koff27 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E34S) - 1 * internal.membrane * (4 * internal.kon31 * E24P * S - internal.koff31 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E24S) - 1 * internal.membrane * (4 * internal.kon35 * E44P * S - internal.koff35 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E44S) - 1 * internal.membrane * (3 * internal.kon43 * SigAP * S - internal.koff43 * SigAP_S * (SigS / (SigS + SigSP + SigSP_G + internal.eps))) - 1 * internal.membrane * (5 * internal.kon66 * E13P * S - internal.koff66 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E13S) - 1 * internal.membrane * (6 * internal.kon70 * E14P * S - internal.koff70 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E14S) + 1 * internal.membrane * internal.kdeg * E11S;
    dstatedt[51] = 0 - 1 * internal.membrane * (internal.kf39 * SigA * (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P) - internal.VmaxPY * SigAP / (internal.KmPY + SigAP) - internal.kPTP39 * SigT * SigAP) + 1 * internal.membrane * (internal.kon41 * SigG * A - internal.koff41 * SigG_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) + 1 * internal.membrane * (internal.kon46 * P3 * A - internal.koff46 * P3_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) + 1 * internal.membrane * (internal.kon59 * SigG_O * A - internal.koff59 * A_SigG_O * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T)));
    dstatedt[77] = 0 + 1 * internal.membrane * (internal.kon57 * P3_A * G - internal.koff57 * SigA_G) - 1 * internal.membrane * (internal.kon58 * SigA_G * O - internal.koff58 * SigA_G_O);
    dstatedt[78] = 0 + 1 * internal.membrane * (internal.kon58 * SigA_G * O - internal.koff58 * SigA_G_O);
    dstatedt[53] = 0 + 1 * internal.membrane * (internal.kf39 * SigA * (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P) - internal.VmaxPY * SigAP / (internal.KmPY + SigAP) - internal.kPTP39 * SigT * SigAP) - 1 * internal.membrane * (3 * internal.kon43 * SigAP * S - internal.koff43 * SigAP_S * (SigS / (SigS + SigSP + SigSP_G + internal.eps))) - 1 * internal.membrane * (3 * internal.kon44 * SigAP * I - internal.koff44 * SigAP_I) - 1 * internal.membrane * (2 * internal.kon45 * SigAP * R - internal.koff45 * SigAP_R * (SigR / (SigR + SigRP + internal.eps))) - 1 * internal.membrane * (2 * internal.kon88 * SigAP * T - internal.koff88 * SigAP_T);
    dstatedt[58] = 0 + 1 * internal.membrane * (3 * internal.kon44 * SigAP * I - internal.koff44 * SigAP_I);
    dstatedt[59] = 0 + 1 * internal.membrane * (2 * internal.kon45 * SigAP * R - internal.koff45 * SigAP_R * (SigR / (SigR + SigRP + internal.eps)));
    dstatedt[57] = 0 + 1 * internal.membrane * (3 * internal.kon43 * SigAP * S - internal.koff43 * SigAP_S * (SigS / (SigS + SigSP + SigSP_G + internal.eps)));
    dstatedt[108] = 0 + 1 * internal.membrane * (2 * internal.kon88 * SigAP * T - internal.koff88 * SigAP_T);
    dstatedt[47] = 0 + 1 * internal.membrane * (4 * internal.kon16 * E11P * G - internal.koff16 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E11G) + 1 * internal.membrane * (3 * internal.kon19 * E12P * G - internal.koff19 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E12G) + 1 * internal.membrane * (3 * internal.kon22 * E23P * G - internal.koff22 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E23G) + 1 * internal.membrane * (4 * internal.kon26 * E34P * G - internal.koff26 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E34G) + 1 * internal.membrane * (3 * internal.kon30 * E24P * G - internal.koff30 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E24G) + 1 * internal.membrane * (4 * internal.kon34 * E44P * G - internal.koff34 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E44G) - 1 * internal.membrane * (internal.kon40 * SigG * O - internal.koff40 * SigG_O) - 1 * internal.membrane * (internal.kon41 * SigG * A - internal.koff41 * SigG_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) + 1 * internal.membrane * (internal.kon42 * SigSP * G - internal.koff42 * SigSP_G * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps))) + 1 * internal.membrane * (4 * internal.kon65 * E13P * G - internal.koff65 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E13G) + 1 * internal.membrane * (4 * internal.kon69 * E14P * G - internal.koff69 * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)) * E14G) - 1 * internal.membrane * internal.kdeg * E11G;
    dstatedt[55] = 0 + 1 * internal.membrane * (internal.kon41 * SigG * A - internal.koff41 * SigG_A * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T))) - 1 * internal.membrane * (internal.kon60 * SigG_A * O - internal.koff60 * A_SigG_O);
    dstatedt[54] = 0 + 1 * internal.membrane * (internal.kon40 * SigG * O - internal.koff40 * SigG_O) - 1 * internal.membrane * (internal.kon59 * SigG_O * A - internal.koff59 * A_SigG_O * (SigA / (internal.eps + SigA + SigAP + SigAP_S + SigAP_R + SigAP_I + SigAP_T)));
    dstatedt[49] = 0 + 1 * internal.membrane * (3 * internal.kon24 * E23P * I - internal.koff24 * E23I) + 1 * internal.membrane * (4 * internal.kon28 * E34P * I - internal.koff28 * E34I) + 1 * internal.membrane * (1 * internal.kon32 * E24P * I - internal.koff32 * E24I) + 1 * internal.membrane * (2 * internal.kon36 * E44P * I - internal.koff36 * E44I) + 1 * internal.membrane * (3 * internal.kon44 * SigAP * I - internal.koff44 * SigAP_I) + 1 * internal.membrane * (3 * internal.kon67 * E13P * I - internal.koff67 * E13I) + 1 * internal.membrane * (1 * internal.kon71 * E14P * I - internal.koff71 * E14I);
    dstatedt[79] = 0 + 1 * internal.membrane * (internal.kon40 * SigG * O - internal.koff40 * SigG_O) + 1 * internal.membrane * (internal.kon58 * SigA_G * O - internal.koff58 * SigA_G_O) + 1 * internal.membrane * (internal.kon60 * SigG_A * O - internal.koff60 * A_SigG_O);
    dstatedt[50] = 0 + 1 * internal.membrane * (2 * internal.kon18 * E11P * R - internal.koff18 * (SigR / (SigR + SigRP + internal.eps)) * E11R) + 1 * internal.membrane * (2 * internal.kon21 * E12P * R - internal.koff21 * (SigR / (SigR + SigRP + internal.eps)) * E12R) + 1 * internal.membrane * (2 * internal.kon25 * E23P * R - internal.koff25 * (SigR / (SigR + SigRP + internal.eps)) * E23R) + 1 * internal.membrane * (2 * internal.kon29 * E34P * R - internal.koff29 * (SigR / (SigR + SigRP + internal.eps)) * E34R) + 1 * internal.membrane * (2 * internal.kon33 * E24P * R - internal.koff33 * (SigR / (SigR + SigRP + internal.eps)) * E24R) + 1 * internal.membrane * (2 * internal.kon37 * E44P * R - internal.koff37 * (SigR / (SigR + SigRP + internal.eps)) * E44R) + 1 * internal.membrane * (2 * internal.kon45 * SigAP * R - internal.koff45 * SigAP_R * (SigR / (SigR + SigRP + internal.eps))) - 1 * internal.membrane * (internal.kf50 * SigR * (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P) - internal.VmaxPY * SigRP / (internal.KmPY + SigRP) - internal.kPTP50 * SigT * SigRP) + 1 * internal.membrane * (2 * internal.kon68 * E13P * R - internal.koff68 * (SigR / (SigR + SigRP + internal.eps)) * E13R) + 1 * internal.membrane * (2 * internal.kon72 * E14P * R - internal.koff72 * (SigR / (SigR + SigRP + internal.eps)) * E14R) - 1 * internal.membrane * internal.kdeg * E11R;
    dstatedt[67] = 0 + 1 * internal.membrane * (internal.kf50 * SigR * (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P) - internal.VmaxPY * SigRP / (internal.KmPY + SigRP) - internal.kPTP50 * SigT * SigRP);
    dstatedt[48] = 0 + 1 * internal.membrane * (8 * internal.kon17 * E11P * S - internal.koff17 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E11S) + 1 * internal.membrane * (6 * internal.kon20 * E12P * S - internal.koff20 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E12S) + 1 * internal.membrane * (3 * internal.kon23 * E23P * S - internal.koff23 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E23S) + 1 * internal.membrane * (3 * internal.kon27 * E34P * S - internal.koff27 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E34S) + 1 * internal.membrane * (4 * internal.kon31 * E24P * S - internal.koff31 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E24S) + 1 * internal.membrane * (4 * internal.kon35 * E44P * S - internal.koff35 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E44S) - 1 * internal.membrane * (internal.kf38 * SigS * (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P) - internal.VmaxPY * SigSP / (internal.KmPY + SigSP) - internal.kPTP38 * SigT * SigSP) + 1 * internal.membrane * (3 * internal.kon43 * SigAP * S - internal.koff43 * SigAP_S * (SigS / (SigS + SigSP + SigSP_G + internal.eps))) + 1 * internal.membrane * (5 * internal.kon66 * E13P * S - internal.koff66 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E13S) + 1 * internal.membrane * (6 * internal.kon70 * E14P * S - internal.koff70 * (SigS / (SigS + SigSP + SigSP_G + internal.eps)) * E14S) - 1 * internal.membrane * internal.kdeg * E11S;
    dstatedt[52] = 0 + 1 * internal.membrane * (internal.kf38 * SigS * (E11P + E12P + E23P + E24P + E34P + E44P + E13P + E14P) - internal.VmaxPY * SigSP / (internal.KmPY + SigSP) - internal.kPTP38 * SigT * SigSP) - 1 * internal.membrane * (internal.kon42 * SigSP * G - internal.koff42 * SigSP_G * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)));
    dstatedt[56] = 0 + 1 * internal.membrane * (internal.kon42 * SigSP * G - internal.koff42 * SigSP_G * (SigG / (SigG + SigG_A + SigG_O + A_SigG_O + internal.eps)));
    dstatedt[101] = 0 + 1 * internal.membrane * (4 * internal.kon73 * E11P * T - internal.koff73 * E11T) + 1 * internal.membrane * (3 * internal.kon74 * E12P * T - internal.koff74 * E12T) + 1 * internal.membrane * (2 * internal.kon75 * E23P * T - internal.koff75 * E23T) + 1 * internal.membrane * (2 * internal.kon76 * E34P * T - internal.koff76 * E34T) + 1 * internal.membrane * (2 * internal.kon77 * E24P * T - internal.koff77 * E24T) + 1 * internal.membrane * (2 * internal.kon78 * E44P * T - internal.koff78 * E44T) + 1 * internal.membrane * (3 * internal.kon79 * E13P * T - internal.koff79 * E13T) + 1 * internal.membrane * (3 * internal.kon80 * E14P * T - internal.koff80 * E14T) + 1 * internal.membrane * (2 * internal.kon88 * SigAP * T - internal.koff88 * SigAP_T) - 1 * internal.membrane * internal.kdeg * E11T;
    dstatedt[92] = 0 - 1 * internal.membrane * (4 * internal.kon73 * E11P * T - internal.koff73 * E11T) - 1 * internal.membrane * (3 * internal.kon74 * E12P * T - internal.koff74 * E12T) - 1 * internal.membrane * (2 * internal.kon75 * E23P * T - internal.koff75 * E23T) - 1 * internal.membrane * (2 * internal.kon76 * E34P * T - internal.koff76 * E34T) - 1 * internal.membrane * (2 * internal.kon77 * E24P * T - internal.koff77 * E24T) - 1 * internal.membrane * (2 * internal.kon78 * E44P * T - internal.koff78 * E44T) - 1 * internal.membrane * (3 * internal.kon79 * E13P * T - internal.koff79 * E13T) - 1 * internal.membrane * (3 * internal.kon80 * E14P * T - internal.koff80 * E14T) - 1 * internal.membrane * (2 * internal.kon88 * SigAP * T - internal.koff88 * SigAP_T) + 1 * internal.membrane * internal.kdeg * E11T;
  }
  names() {
    return this.metadata.ynames.slice(1);
  }
  updateMetadata() {
    this.metadata = {};
    var internal = this.internal;
    this.metadata.ynames = ["t", "E1", "E2", "E3", "E4", "E_E1", "H_E3", "H_E4", "E11", "E12", "E23", "E34", "E24", "E44", "E11P", "E12P", "E23P", "E34P", "E24P", "E44P", "G", "S", "I", "R", "O", "A", "E11G", "E11S", "E11R", "E12G", "E12S", "E12R", "E23G", "E23S", "E23I", "E23R", "E34G", "E34S", "E34I", "E34R", "E24G", "E24S", "E24I", "E24R", "E44G", "E44S", "E44I", "E44R", "SigG", "SigS", "SigI", "SigR", "SigA", "SigSP", "SigAP", "SigG_O", "SigG_A", "SigSP_G", "SigAP_S", "SigAP_I", "SigAP_R", "Empty", "P3_A", "P2", "P3", "Akt", "RsD", "RsT", "SigRP", "Raf", "Rafstar", "MEK", "MEKstar", "ERK", "ERKstar", "OP", "AP", "A_SigG_O", "SigA_G", "SigA_G_O", "SigO", "E13", "E14", "E13P", "E14P", "E13G", "E13S", "E13I", "E13R", "E14G", "E14S", "E14I", "E14R", "T", "E11T", "E12T", "E23T", "E34T", "E24T", "E44T", "E13T", "E14T", "SigT", "E1_PT", "E2_PT", "E4_PT", "E_E1_PT", "H_E4_PT", "Aktstar", "SigAP_T", "E", "H", "fint", "pERK", "ERK_MEKstar", "pERK_MEKstar", "pERK_ERKpase", "ERKpase", "ERKstar_ERKpase"];
    this.metadata.internalOrder = {A_init: null, A_SigG_O_init: null, a98: null, Akt_Abund: null, Akt_init: null, Aktstar_init: null, AP_init: null, b98: null, E_E1_init: null, E_E1_PT_init: null, E_init: null, E1_init: null, E1_PT_init: null, E11_init: null, E11G_init: null, E11P_init: null, E11R_init: null, E11S_init: null, E11T_init: null, E12_init: null, E12G_init: null, E12P_init: null, E12R_init: null, E12S_init: null, E12T_init: null, E13_init: null, E13G_init: null, E13I_init: null, E13P_init: null, E13R_init: null, E13S_init: null, E13T_init: null, E14_init: null, E14G_init: null, E14I_init: null, E14P_init: null, E14R_init: null, E14S_init: null, E14T_init: null, E2_init: null, E2_PT_init: null, E23_init: null, E23G_init: null, E23I_init: null, E23P_init: null, E23R_init: null, E23S_init: null, E23T_init: null, E24_init: null, E24G_init: null, E24I_init: null, E24P_init: null, E24R_init: null, E24S_init: null, E24T_init: null, E3_init: null, E34_init: null, E34G_init: null, E34I_init: null, E34P_init: null, E34R_init: null, E34S_init: null, E34T_init: null, E4_init: null, E4_PT_init: null, E44_init: null, E44G_init: null, E44I_init: null, E44P_init: null, E44R_init: null, E44S_init: null, E44T_init: null, EGF_off: null, Empty_init: null, eps: null, ErbB1_Abund: null, ErbB2_Abund: null, ErbB3_Abund: null, ErbB4_Abund: null, ERK_Abund: null, ERK_init: null, ERK_MEKstar_init: null, ERKpase_init: null, ERKPpase_Abund: null, ERKstar_ERKpase_init: null, ERKstar_init: null, fint_init: null, G_init: null, Gab1_Abund: null, Grb2_Abund: null, H_E3_init: null, H_E4_init: null, H_E4_PT_init: null, H_init: null, HRGoff_3: null, HRGoff_4: null, I_init: null, initial_A: null, initial_A_SigG_O: null, initial_Akt: null, initial_Aktstar: null, initial_AP: null, initial_E: null, initial_E_E1: null, initial_E_E1_PT: null, initial_E1: null, initial_E1_PT: null, initial_E11: null, initial_E11G: null, initial_E11P: null, initial_E11R: null, initial_E11S: null, initial_E11T: null, initial_E12: null, initial_E12G: null, initial_E12P: null, initial_E12R: null, initial_E12S: null, initial_E12T: null, initial_E13: null, initial_E13G: null, initial_E13I: null, initial_E13P: null, initial_E13R: null, initial_E13S: null, initial_E13T: null, initial_E14: null, initial_E14G: null, initial_E14I: null, initial_E14P: null, initial_E14R: null, initial_E14S: null, initial_E14T: null, initial_E2: null, initial_E2_PT: null, initial_E23: null, initial_E23G: null, initial_E23I: null, initial_E23P: null, initial_E23R: null, initial_E23S: null, initial_E23T: null, initial_E24: null, initial_E24G: null, initial_E24I: null, initial_E24P: null, initial_E24R: null, initial_E24S: null, initial_E24T: null, initial_E3: null, initial_E34: null, initial_E34G: null, initial_E34I: null, initial_E34P: null, initial_E34R: null, initial_E34S: null, initial_E34T: null, initial_E4: null, initial_E4_PT: null, initial_E44: null, initial_E44G: null, initial_E44I: null, initial_E44P: null, initial_E44R: null, initial_E44S: null, initial_E44T: null, initial_Empty: null, initial_ERK: null, initial_ERK_MEKstar: null, initial_ERKpase: null, initial_ERKstar: null, initial_ERKstar_ERKpase: null, initial_fint: null, initial_G: null, initial_H: null, initial_H_E3: null, initial_H_E4: null, initial_H_E4_PT: null, initial_I: null, initial_MEK: null, initial_MEKstar: null, initial_O: null, initial_OP: null, initial_P2: null, initial_P3: null, initial_P3_A: null, initial_pERK: null, initial_pERK_ERKpase: null, initial_pERK_MEKstar: null, initial_R: null, initial_Raf: null, initial_Rafstar: null, initial_RsD: null, initial_RsT: null, initial_S: null, initial_SigA: null, initial_SigA_G: null, initial_SigA_G_O: null, initial_SigAP: null, initial_SigAP_I: null, initial_SigAP_R: null, initial_SigAP_S: null, initial_SigAP_T: null, initial_SigG: null, initial_SigG_A: null, initial_SigG_O: null, initial_SigI: null, initial_SigO: null, initial_SigR: null, initial_SigRP: null, initial_SigS: null, initial_SigSP: null, initial_SigSP_G: null, initial_SigT: null, initial_T: null, kcat90: null, kcat92: null, kcat94: null, kcat96: null, kcon49: null, kdeg: null, kf10: null, kf11: null, kf12: null, kf13: null, kf14: null, kf15: null, kf38: null, kf39: null, kf47: null, kf48: null, kf49: null, kf50: null, kf51: null, kf52: null, kf53: null, kf54: null, kf55: null, kf63: null, kf64: null, kf81: null, kf82: null, kf83: null, kf84: null, kf85: null, Kmf47: null, Kmf48: null, Kmf49: null, Kmf51: null, Kmf52: null, Kmf53: null, Kmf54: null, Kmf55: null, Kmf81: null, Kmf82: null, Kmf83: null, Kmf84: null, Kmf85: null, KmPY: null, Kmr47: null, Kmr48: null, Kmr49: null, Kmr49b: null, Kmr51: null, Kmr52: null, Kmr53: null, Kmr54: null, Kmr55: null, Kmr81: null, Kmr82: null, Kmr83: null, Kmr84: null, Kmr85: null, Kmrb51: null, koff16: null, koff17: null, koff18: null, koff19: null, koff20: null, koff21: null, koff22: null, koff23: null, koff24: null, koff25: null, koff26: null, koff27: null, koff28: null, koff29: null, koff30: null, koff31: null, koff32: null, koff33: null, koff34: null, koff35: null, koff36: null, koff37: null, koff4: null, koff40: null, koff41: null, koff42: null, koff43: null, koff44: null, koff45: null, koff46: null, koff5: null, koff57: null, koff58: null, koff59: null, koff6: null, koff60: null, koff61: null, koff62: null, koff65: null, koff66: null, koff67: null, koff68: null, koff69: null, koff7: null, koff70: null, koff71: null, koff72: null, koff73: null, koff74: null, koff75: null, koff76: null, koff77: null, koff78: null, koff79: null, koff8: null, koff80: null, koff88: null, koff89: null, koff9: null, koff91: null, koff93: null, koff95: null, kon1: null, kon16: null, kon17: null, kon18: null, kon19: null, kon2: null, kon20: null, kon21: null, kon22: null, kon23: null, kon24: null, kon25: null, kon26: null, kon27: null, kon28: null, kon29: null, kon3: null, kon30: null, kon31: null, kon32: null, kon33: null, kon34: null, kon35: null, kon36: null, kon37: null, kon4: null, kon40: null, kon41: null, kon42: null, kon43: null, kon44: null, kon45: null, kon46: null, kon5: null, kon57: null, kon58: null, kon59: null, kon6: null, kon60: null, kon61: null, kon62: null, kon65: null, kon66: null, kon67: null, kon68: null, kon69: null, kon7: null, kon70: null, kon71: null, kon72: null, kon73: null, kon74: null, kon75: null, kon76: null, kon77: null, kon78: null, kon79: null, kon8: null, kon80: null, kon86: null, kon87: null, kon88: null, kon89: null, kon9: null, kon91: null, kon93: null, kon95: null, kPTP10: null, kPTP11: null, kPTP12: null, kPTP13: null, kPTP14: null, kPTP15: null, kPTP38: null, kPTP39: null, kPTP50: null, kPTP63: null, kPTP64: null, kr49: null, kr49b: null, kr51: null, MEK_Abund: null, MEK_init: null, MEKstar_init: null, membrane: null, O_init: null, OP_init: null, P2_init: null, P3_A_init: null, P3_init: null, pERK_ERKpase_init: null, pERK_init: null, pERK_MEKstar_init: null, PI3K_Abund: null, PIP2_Abund: null, PTEN: null, PTP1B_Abund: null, R_init: null, Raf_Abund: null, Raf_init: null, Rafstar_init: null, Ras_Abund: null, RasGAP_Abund: null, RsD_init: null, RsT_init: null, S_init: null, Shc_Abund: null, SigA_G_init: null, SigA_G_O_init: null, SigA_init: null, SigAP_I_init: null, SigAP_init: null, SigAP_R_init: null, SigAP_S_init: null, SigAP_T_init: null, SigG_A_init: null, SigG_init: null, SigG_O_init: null, SigI_init: null, SigO_init: null, SigR_init: null, SigRP_init: null, SigS_init: null, SigSP_G_init: null, SigSP_init: null, SigT_init: null, SOS_Abund: null, T_init: null, VeVc: null, VmaxPY: null, Vmaxr47: null, Vmaxr51: null, Vmaxr52: null, Vmaxr53: null, Vmaxr54: null, Vmaxr55: null, Vmaxr81: null, Vmaxr82: null, Vmaxr83: null, Vmaxr84: null, Vmaxr85: null};
    this.metadata.variableOrder = {E1: null, E2: null, E3: null, E4: null, E_E1: null, H_E3: null, H_E4: null, E11: null, E12: null, E23: null, E34: null, E24: null, E44: null, E11P: null, E12P: null, E23P: null, E34P: null, E24P: null, E44P: null, G: null, S: null, I: null, R: null, O: null, A: null, E11G: null, E11S: null, E11R: null, E12G: null, E12S: null, E12R: null, E23G: null, E23S: null, E23I: null, E23R: null, E34G: null, E34S: null, E34I: null, E34R: null, E24G: null, E24S: null, E24I: null, E24R: null, E44G: null, E44S: null, E44I: null, E44R: null, SigG: null, SigS: null, SigI: null, SigR: null, SigA: null, SigSP: null, SigAP: null, SigG_O: null, SigG_A: null, SigSP_G: null, SigAP_S: null, SigAP_I: null, SigAP_R: null, Empty: null, P3_A: null, P2: null, P3: null, Akt: null, RsD: null, RsT: null, SigRP: null, Raf: null, Rafstar: null, MEK: null, MEKstar: null, ERK: null, ERKstar: null, OP: null, AP: null, A_SigG_O: null, SigA_G: null, SigA_G_O: null, SigO: null, E13: null, E14: null, E13P: null, E14P: null, E13G: null, E13S: null, E13I: null, E13R: null, E14G: null, E14S: null, E14I: null, E14R: null, T: null, E11T: null, E12T: null, E23T: null, E34T: null, E24T: null, E44T: null, E13T: null, E14T: null, SigT: null, E1_PT: null, E2_PT: null, E4_PT: null, E_E1_PT: null, H_E4_PT: null, Aktstar: null, SigAP_T: null, E: null, H: null, fint: null, pERK: null, ERK_MEKstar: null, pERK_MEKstar: null, pERK_ERKpase: null, ERKpase: null, ERKstar_ERKpase: null};
    this.metadata.outputOrder = null;
  }
  getMetadata() {
    return this.metadata;
  }
}
